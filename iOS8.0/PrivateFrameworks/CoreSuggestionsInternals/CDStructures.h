//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Mutex;

struct Options {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct Prog;

struct RE2 {
    struct Mutex *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct Options _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    _Bool _field5;
    struct Regexp *_field6;
    struct Regexp *_field7;
    struct Prog *_field8;
    struct Prog *_field9;
    _Bool _field10;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field11;
    int _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field13;
    int _field14;
    struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> *_field15;
    struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>> *_field16;
};

struct Regexp;

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _opaque_pthread_mutex_t {
    long __sig;
    char __opaque[40];
};

struct _xmlDoc;

struct _xmlHashTable;

struct _xmlNode;

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlValidState;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned int _field1;
                    unsigned int _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[11];
                } _field2;
                struct __raw {
                    unsigned long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>>;

struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>>;

#pragma mark Typedef'd Structures

typedef struct {
    char _field1[3];
    unsigned long long _field2;
    unsigned short _field3;
} CDStruct_fcaecfc9;

typedef struct {
    struct {
        unsigned short bom;
        unsigned short tag;
    } _featureType;
    char hasInhumanHeaders;
    char inhumanEmailAddress;
    char inhumanAuthorName;
    char inhumanBody;
    char isTemplate;
} CDStruct_b2968299;

// Ambiguous groups
typedef struct {
    unsigned short _field1;
    unsigned short _field2;
} CDStruct_d65e47c4;

