//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "PLCommentsViewControllerDelegate.h"
#import "PLPhotoTileCloudPlaceholderViewDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIScrollViewDelegate.h"

@class NSArray, NSObject<OS_dispatch_source>, NSString, PHAsset, PHCachingImageManager, PLCommentsViewController, PLExpandableImageView, PLImageScrollView, PLPhotoTileBadgeView, PLTileContainerView, PLVideoView, UIGestureRecognizer, UIImage, UIImageView, UIView, UIView<PLTilePlaceholderView>;

@interface PLPhotoTileViewController : UIViewController <UIScrollViewDelegate, UIGestureRecognizerDelegate, PLCommentsViewControllerDelegate, PLPhotoTileCloudPlaceholderViewDelegate>
{
    UIImage *_image;
    UIImage *_pendingImage;
    UIImage *_unscaledImage;
    PHAsset *_modelPhoto;
    PLImageScrollView *_scrollView;
    PLExpandableImageView *_imageView;
    PLVideoView *_videoView;
    UIImageView *_gradientView;
    PLPhotoTileBadgeView *_badgeView;
    UIImageView *_reviewCheckmarkImageView;
    UIView<PLTilePlaceholderView> *_placeholderView;
    BOOL _currentTileDownloadFinished;
    PLCommentsViewController *_commentsViewController;
    UIGestureRecognizer *_singleTapGestureRecognizer;
    UIGestureRecognizer *_doubleTapGestureRecognizer;
    id <PLPhotoTileViewControllerDelegate> _tileDelegate;
    int _imageOrientation;
    struct CGSize _imageSize;
    struct CGRect _tileFrame;
    BOOL _zoomToFillInsteadOfToFit;
    BOOL _useLessThanMinZoomForZoomedOutTest;
    BOOL _allowZoomToFill;
    id _orientationDelegate;
    float _cropRectZoomScale;
    struct CGRect _cropOverlayRect;
    struct CGRect _cropRect;
    float _doubleTapZoomScale;
    float _minZoomScale;
    float _zoomToFillScale;
    int _mode;
    int _lastDisplayedOrientation;
    BOOL _clientIsTemporarilyWallpaper;
    BOOL _userDidAdjustWallpaper;
    float _wallpaperPortraitZoomScale;
    float _wallpaperLandscapeZoomScale;
    float _zoomScaleBeforeZooming;
    struct CGRect _cropRectBeforeDragging;
    BOOL _force1XCroppedImage;
    BOOL _forceNativeScreenScale;
    BOOL _centerContentVertically;
    CDUnknownBlockType _didEndZoomingBlock;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    double _dispatchStartTime;
    double _dispatchTimeElapsed;
    BOOL _hasNotedZoom;
    unsigned int _imageIsThumbnail:1;
    unsigned int _isTVOut:1;
    unsigned int _zooming:1;
    unsigned int _autoZooming:1;
    unsigned int _zoomGesturesEnabled:1;
    unsigned int _userDidZoom:1;
    unsigned int _ignoreZoomChange:1;
    unsigned int _tileParentIsPageController:1;
    unsigned int _lockedUnderCropOverlay:1;
    unsigned int _viewDidAppear:1;
    unsigned int _viewWillAppear:1;
    unsigned int _didRequestFullSizeImage:1;
    unsigned int _useZoomScaleForCropRect:1;
    unsigned int _avalancheBadgeShouldBeHidden:1;
    unsigned int _badgeShouldBeVisible:1;
    unsigned int _commentsTableVisible:1;
    PLTileContainerView *_containerView;
    PHCachingImageManager *__cachingImageManager;
    int _fullSizeImageRequestID;
    NSArray *_customCenterOverlayConstraints;
    BOOL _wantsCompactLayout;
    BOOL _reviewing;
    BOOL _picked;
    BOOL _shouldHideProgressIndicator;
    UIView *__customCenterOverlay;
    struct UIEdgeInsets _overlayInsets;
}

+ (BOOL)_shouldForwardViewWillTransitionToSize;
+ (id)newPhotoTileViewControllerWithFrame:(struct CGRect)arg1 modelPhoto:(id)arg2 mode:(int)arg3;
+ (id)newPhotoTileViewControllerWithFrame:(struct CGRect)arg1 image:(id)arg2 allowZoomToFill:(BOOL)arg3 mode:(int)arg4;
+ (id)newPhotoTileViewControllerWithFrame:(struct CGRect)arg1 imageRef:(struct CGImage *)arg2 imageOrientation:(int)arg3 allowZoomToFill:(BOOL)arg4 mode:(int)arg5;
+ (struct CGSize)tvOutTileSize;
+ (struct CGSize)tileSize;
+ (BOOL)shouldShowPlaceholderForAsset:(id)arg1;
@property(retain, nonatomic, setter=_setCustomCenterOverlay:) UIView *_customCenterOverlay; // @synthesize _customCenterOverlay=__customCenterOverlay;
@property(nonatomic) BOOL shouldHideProgressIndicator; // @synthesize shouldHideProgressIndicator=_shouldHideProgressIndicator;
@property(nonatomic) BOOL picked; // @synthesize picked=_picked;
@property(nonatomic) BOOL reviewing; // @synthesize reviewing=_reviewing;
@property(nonatomic) BOOL wantsCompactLayout; // @synthesize wantsCompactLayout=_wantsCompactLayout;
@property(nonatomic) struct UIEdgeInsets overlayInsets; // @synthesize overlayInsets=_overlayInsets;
@property(nonatomic) BOOL force1XCroppedImage; // @synthesize force1XCroppedImage=_force1XCroppedImage;
@property(nonatomic) BOOL forceNativeScreenScale; // @synthesize forceNativeScreenScale=_forceNativeScreenScale;
@property(retain, nonatomic) UIImage *unscaledImage; // @synthesize unscaledImage=_unscaledImage;
@property(readonly, nonatomic) PLCommentsViewController *commentsViewController; // @synthesize commentsViewController=_commentsViewController;
@property(nonatomic) BOOL centerContentVertically; // @synthesize centerContentVertically=_centerContentVertically;
- (void)_updateReviewCheckmark;
- (void)setReviewing:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_setupReviewCheckmark;
- (void)setLockedUnderCropOverlay:(BOOL)arg1;
- (void)_adjustZoomForEnteringMode:(BOOL)arg1;
- (void)updateAfterCollapse;
- (int)imageOrientation;
- (void)setAllowsZoomToFill:(BOOL)arg1;
- (void)updateZoomScales;
- (void)_setDefaultZoomScale;
- (void)setOrientationDelegate:(id)arg1;
- (BOOL)isZoomedOut;
- (float)currentToDefaultZoomRatio;
- (float)currentToMinZoomRatio;
- (float)defaultZoomScale;
- (float)zoomToFitScale;
- (float)zoomToFillScale;
- (float)minZoomScale;
- (float)_calculateZoomScale:(BOOL)arg1 inView:(id)arg2;
- (float)minRotatedScale;
- (void)_performDidEndZoomBlock;
- (void)_setDidEndZoomingBlock:(CDUnknownBlockType)arg1;
- (void)zoomToScale:(float)arg1 animated:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)dictionaryWithCroppedImageForRect:(struct CGRect)arg1 minimalCropDimension:(float)arg2 withOptions:(int)arg3;
- (id)newImageWithCropRect:(struct CGRect)arg1 minimalCropDimension:(float)arg2 croppedImageData:(id *)arg3 fullScreenImageData:(id *)arg4 fullScreenImage:(struct CGImage **)arg5 imageCropRect:(struct CGRect *)arg6 intersectCropWithFullRect:(BOOL)arg7;
- (void)_handleDoubleTap:(id)arg1;
- (void)_readOrientation:(int *)arg1 andSize:(struct CGSize *)arg2 fromImageData:(id)arg3;
- (void)_handleFullSizeImageRequestResult:(id)arg1 dataUTI:(id)arg2 orientation:(int)arg3;
- (void)_requestFullSizeImage;
- (void)_handleSingleTap:(id)arg1;
- (void)ensureFullSizeImageLoaded;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)resetZoom;
- (void)updateViewConstraints;
- (void)viewDidLayoutSubviews;
- (void)_viewWillMoveToSuperView:(id)arg1;
- (void)_resetZoomCommon;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(float)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (struct CGSize)scrollView:(id)arg1 contentSizeForZoomScale:(float)arg2 withProposedSize:(struct CGSize)arg3;
- (void)noteParentViewControllerDidDisappear;
- (void)commentsControllerWillBeginScrolling:(id)arg1;
- (void)commentsControllerDidDisplayUnreadComment:(id)arg1;
- (void)commentsControllerDidExitEditMode:(id)arg1;
- (void)commentsControllerWillEnterEditMode:(id)arg1;
- (void)commentsControllerInactiveAreaWasTapped:(id)arg1;
- (void)setCommentsTableVisibility:(BOOL)arg1 duration:(float)arg2;
- (void)removeCommentsTable;
@property(readonly, nonatomic) BOOL commentsTableIsVisible;
- (void)initializeCommentsTable;
- (void)updateForVisibleOverlays:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)loadView;
- (void)cancelFullSizeImageRequest;
- (BOOL)hasFullSizeImage;
- (void)setFullSizeImage:(id)arg1;
- (void)showErrorPlaceholderView;
- (void)_removePlaceholderView;
- (void)didLoadImage;
- (void)refreshTileWithFullScreenImage:(id)arg1 modelPhoto:(id)arg2;
- (void)_setImage:(id)arg1 isThumbnail:(BOOL)arg2 preserveFrame:(BOOL)arg3;
- (void)_updateAggdKeys;
- (void)_updateModelPhotoWithImage:(id)arg1;
- (void)_updatePlaceholderVisibility;
- (void)_updatePlaceholderImageRect;
- (void)_updateContentInset;
- (void)_adjustScrollViewContentOffsetForInsets;
- (void)_centerImageInScrollView;
- (void)retryDownload;
- (void)_updatePlaceholderViewAnimated:(BOOL)arg1;
- (void)updateCloudDownloadProgress:(float)arg1;
- (void)_updateSubviewOrdering;
- (void)_installSubview:(id)arg1;
- (void)installVideoOverlay:(id)arg1;
- (void)_configureViews;
- (void)setBadgeVisible:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setBadgeVisible:(BOOL)arg1;
- (void)_showBadgeViewIfAppropriate;
- (void)_setupBadgeView;
- (void)setAvalancheBadgesHidden:(BOOL)arg1;
- (BOOL)photoShouldHaveAvalancheBadge;
- (BOOL)photoShouldHaveHDRBadge;
- (void)_repositionBadgeView;
- (void)setGesturesEnabled:(BOOL)arg1;
- (BOOL)gesturesEnabled;
- (BOOL)allowsEditing;
- (void)setClientIsWallpaper:(BOOL)arg1;
- (BOOL)_clientIsWallpaper;
- (BOOL)userDidAdjustWallpaper;
- (void)setTVOut:(BOOL)arg1;
- (BOOL)isTVOut;
- (void)setTileDelegate:(id)arg1;
- (id)tileDelegate;
- (void)updateAfterZoomTransitionWithImage:(id)arg1;
- (void)showContentView;
- (void)hideContentView;
- (void)updateCenterOverlay;
- (void)setVideoView:(id)arg1;
- (id)videoView;
- (id)scrollView;
- (id)newCGImageBackedUIImage;
- (id)image;
- (id)commentsView;
- (id)imageView;
- (id)expandableImageView;
- (void)forceZoomingGesturesEnabled;
- (void)setZoomingGesturesEnabled:(BOOL)arg1;
- (void)setCropOverlayRect:(struct CGRect)arg1 forCropRect:(struct CGRect)arg2;
- (void)setZoomScale:(float)arg1;
@property(readonly, copy) NSString *description;
@property(nonatomic) struct CGRect tileFrame;
@property(retain, nonatomic) UIImage *thumbnailImage;
@property(readonly, nonatomic) PHAsset *photo;
- (void)_updateVideoViewForModelPhoto;
- (void)_setPhoto:(id)arg1;
- (BOOL)tileIsOnScreen;
- (void)dealloc;
- (void)_teardownDispatchTimer;
- (id)cachingImageManager;
- (id)initWithModelPhoto:(id)arg1 thumbnailImage:(id)arg2 size:(struct CGSize)arg3;
- (id)initForPageController;
- (id)initWithModelPhoto:(id)arg1 image:(id)arg2 frame:(struct CGRect)arg3 isThumbnail:(BOOL)arg4 imageOrientation:(int)arg5 allowZoomToFill:(BOOL)arg6 mode:(int)arg7;
- (id)init;
- (int)_imageOrientation;
- (id)_newOriginalImageForPickerFromCachedData;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

