//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <PhotosUI/PUSettings.h>

@interface PUFeedSettings : PUSettings
{
    BOOL _useJPEGImageFormats;
    BOOL _shouldUseJPEGFastFormatForMediumTiles;
    BOOL _shouldUseJPEGFastFormatForLargeTiles;
    BOOL _useQualityImageFormats;
    BOOL _useSpeedometerFeedback;
    BOOL _shouldPreheatCoreData;
    BOOL _shouldPreheatAssets;
    BOOL _shouldPreheatComments;
    BOOL _forceDefaultPreheatManager;
    BOOL _ignoresCaptions;
    BOOL _allowsInfiniteScrolling;
    BOOL _forceAllItemsAsVideo;
    BOOL _simulateSharedStreamsEnabled;
    float _smallTileSizeTolerance;
    int _maximumScrollRegimeForQualityImageFormats;
    float _speedometerMediumUpperThreshold;
    float _speedometerMediumLowerThreshold;
    float _speedometerFastUpperThreshold;
    float _speedometerFastLowerThreshold;
    float _preheatingMinimumScrollFactor;
    float _slowScrollPreheatingWindowSize;
    float _mediumScrollPreheatingWindowSize;
    float _fastScrollPreheatingWindowSize;
    int _feedContent;
    int _initialWindowSize;
    int _testInitialWindowSize;
    int _infiniteScrollingWindowSizeIncrement;
}

+ (id)_localizedStrings;
+ (id)settingsControllerModule;
+ (id)sharedInstance;
@property(nonatomic) BOOL simulateSharedStreamsEnabled; // @synthesize simulateSharedStreamsEnabled=_simulateSharedStreamsEnabled;
@property(nonatomic) BOOL forceAllItemsAsVideo; // @synthesize forceAllItemsAsVideo=_forceAllItemsAsVideo;
@property(nonatomic) int infiniteScrollingWindowSizeIncrement; // @synthesize infiniteScrollingWindowSizeIncrement=_infiniteScrollingWindowSizeIncrement;
@property(nonatomic) BOOL allowsInfiniteScrolling; // @synthesize allowsInfiniteScrolling=_allowsInfiniteScrolling;
@property(nonatomic) BOOL ignoresCaptions; // @synthesize ignoresCaptions=_ignoresCaptions;
@property(nonatomic) int testInitialWindowSize; // @synthesize testInitialWindowSize=_testInitialWindowSize;
@property(nonatomic) int initialWindowSize; // @synthesize initialWindowSize=_initialWindowSize;
@property(nonatomic) int feedContent; // @synthesize feedContent=_feedContent;
@property(nonatomic) BOOL forceDefaultPreheatManager; // @synthesize forceDefaultPreheatManager=_forceDefaultPreheatManager;
@property(nonatomic) BOOL shouldPreheatComments; // @synthesize shouldPreheatComments=_shouldPreheatComments;
@property(nonatomic) BOOL shouldPreheatAssets; // @synthesize shouldPreheatAssets=_shouldPreheatAssets;
@property(nonatomic) BOOL shouldPreheatCoreData; // @synthesize shouldPreheatCoreData=_shouldPreheatCoreData;
@property(nonatomic) float fastScrollPreheatingWindowSize; // @synthesize fastScrollPreheatingWindowSize=_fastScrollPreheatingWindowSize;
@property(nonatomic) float mediumScrollPreheatingWindowSize; // @synthesize mediumScrollPreheatingWindowSize=_mediumScrollPreheatingWindowSize;
@property(nonatomic) float slowScrollPreheatingWindowSize; // @synthesize slowScrollPreheatingWindowSize=_slowScrollPreheatingWindowSize;
@property(nonatomic) float preheatingMinimumScrollFactor; // @synthesize preheatingMinimumScrollFactor=_preheatingMinimumScrollFactor;
@property(nonatomic) BOOL useSpeedometerFeedback; // @synthesize useSpeedometerFeedback=_useSpeedometerFeedback;
@property(nonatomic) float speedometerFastLowerThreshold; // @synthesize speedometerFastLowerThreshold=_speedometerFastLowerThreshold;
@property(nonatomic) float speedometerFastUpperThreshold; // @synthesize speedometerFastUpperThreshold=_speedometerFastUpperThreshold;
@property(nonatomic) float speedometerMediumLowerThreshold; // @synthesize speedometerMediumLowerThreshold=_speedometerMediumLowerThreshold;
@property(nonatomic) float speedometerMediumUpperThreshold; // @synthesize speedometerMediumUpperThreshold=_speedometerMediumUpperThreshold;
@property(nonatomic) int maximumScrollRegimeForQualityImageFormats; // @synthesize maximumScrollRegimeForQualityImageFormats=_maximumScrollRegimeForQualityImageFormats;
@property(nonatomic) BOOL useQualityImageFormats; // @synthesize useQualityImageFormats=_useQualityImageFormats;
@property(nonatomic) BOOL shouldUseJPEGFastFormatForLargeTiles; // @synthesize shouldUseJPEGFastFormatForLargeTiles=_shouldUseJPEGFastFormatForLargeTiles;
@property(nonatomic) BOOL shouldUseJPEGFastFormatForMediumTiles; // @synthesize shouldUseJPEGFastFormatForMediumTiles=_shouldUseJPEGFastFormatForMediumTiles;
@property(nonatomic) float smallTileSizeTolerance; // @synthesize smallTileSizeTolerance=_smallTileSizeTolerance;
@property(nonatomic) BOOL useJPEGImageFormats; // @synthesize useJPEGImageFormats=_useJPEGImageFormats;
- (void)setDefaultValues;

@end

