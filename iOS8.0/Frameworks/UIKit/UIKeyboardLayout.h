//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class NSMutableArray, NSString, UIKBScreenTraits, UIKBTextEditingTraits, UIKeyboardTaskQueue, UITextInputTraits, UITouch;

@interface UIKeyboardLayout : UIView
{
    UITextInputTraits *_inputTraits;
    UIKBScreenTraits *_screenTraits;
    UIKBTextEditingTraits *_textEditingTraits;
    NSMutableArray *_uncommittedTouches;
    UITouch *_activeTouch;
    UITouch *_shiftKeyTouch;
    int _cursorLocation;
    BOOL _disableInteraction;
    UIKeyboardTaskQueue *_taskQueue;
    BOOL hideKeysUnderIndicator;
}

+ (Class)_subclassForScreenTraits:(id)arg1;
@property(nonatomic) BOOL hideKeysUnderIndicator; // @synthesize hideKeysUnderIndicator;
@property(nonatomic) BOOL disableInteraction; // @synthesize disableInteraction=_disableInteraction;
@property(nonatomic) int cursorLocation; // @synthesize cursorLocation=_cursorLocation;
@property(retain, nonatomic) UITouch *shiftKeyTouch; // @synthesize shiftKeyTouch=_shiftKeyTouch;
@property(retain, nonatomic) UITouch *activeTouch; // @synthesize activeTouch=_activeTouch;
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(BOOL)arg3 baseKeyForVariants:(BOOL)arg4;
- (id)simulateTouch:(struct CGPoint)arg1;
- (void)changeToKeyplane:(id)arg1;
- (id)keyplaneNamed:(id)arg1;
- (id)keyplaneForKey:(id)arg1;
- (id)baseKeyForString:(id)arg1;
- (void)triggerSpaceKeyplaneSwitchIfNecessary;
- (id)currentKeyplane;
- (void)setPasscodeOutlineAlpha:(float)arg1;
- (BOOL)shouldFadeToLayout;
- (BOOL)shouldFadeFromLayout;
- (void)fadeWithInvocation:(id)arg1;
- (SEL)handlerForNotification:(id)arg1;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
- (struct CGSize)dragGestureSize;
- (float)flickDistance;
- (float)hitBuffer;
- (BOOL)canHandleEvent:(id)arg1;
- (BOOL)canForceTouchCommit:(id)arg1;
- (void)commitTouches:(id)arg1 executionContext:(id)arg2;
- (void)forceUpdatesForCommittedTouch;
- (void)commitTouches:(id)arg1;
- (id)touchesToCommitBeforeTouch:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)clearShiftIfNecessaryForEndedTouch:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;
- (void)touchCancelled:(id)arg1;
- (void)touchUp:(id)arg1 executionContext:(id)arg2;
- (void)didCommitTouch:(id)arg1;
- (void)touchUp:(id)arg1;
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;
- (void)touchDragged:(id)arg1;
- (void)touchDown:(id)arg1 executionContext:(id)arg2;
- (void)touchDown:(id)arg1;
- (BOOL)canProduceString:(id)arg1;
- (BOOL)shouldShowIndicator;
- (id)activationIndicatorView;
- (void)deactivateActiveKeysClearingTouchInfo:(BOOL)arg1 clearingDimming:(BOOL)arg2;
- (void)setReturnKeyEnabled:(BOOL)arg1 withDisplayName:(id)arg2 withType:(int)arg3;
- (void)restoreDefaultsForAllKeys;
- (void)restoreDefaultsForKey:(id)arg1;
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;
- (void)setAction:(SEL)arg1 forKey:(id)arg2;
- (void)setTarget:(id)arg1 forKey:(id)arg2;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
@property(retain, nonatomic) NSString *layoutTag;
- (void)setRenderConfig:(id)arg1;
- (void)updateBackgroundCorners;
- (BOOL)canMultitap;
- (BOOL)hasAccentKey;
- (BOOL)hasCandidateKeys;
- (id)candidateList;
- (BOOL)performSpaceAction;
- (BOOL)performReturnAction;
- (void)didClearInput;
- (void)longPressAction;
- (BOOL)isShiftKeyPlaneChooser;
- (BOOL)isShiftKeyBeingHeld;
- (void)setAutoshift:(BOOL)arg1;
- (void)setShift:(BOOL)arg1;
- (BOOL)isAlphabeticPlane;
- (BOOL)ignoresShiftState;
- (BOOL)usesAutoShift;
- (void)updateLocalizedKeys:(BOOL)arg1;
- (void)deactivateActiveKeys;
- (void)clearUnusedObjects:(BOOL)arg1;
- (unsigned int)textEditingKeyMask;
- (void)setTextEditingTraits:(id)arg1;
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;
@property(readonly, nonatomic) int idiom;
@property(readonly, nonatomic) int orientation;
@property(retain, nonatomic) UIKeyboardTaskQueue *taskQueue;
- (void)willMoveToWindow:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)addWipeRecognizer;
- (void)wipeGestureRecognized:(id)arg1;

@end

