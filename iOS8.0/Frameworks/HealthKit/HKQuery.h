//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "HKQueryClient.h"

@class HKSampleType, NSObject<OS_dispatch_queue>, NSPredicate, NSString, NSUUID, _HKFilter;

@interface HKQuery : NSObject <HKQueryClient>
{
    HKSampleType *_sampleType;
    NSPredicate *_predicate;
    NSObject<OS_dispatch_queue> *_activationQueue;
    BOOL _receivedInitialResults;
    BOOL _hasBeenExecuted;
    NSUUID *_activationUUID;
    id <HKQueryDelegate> _delegate;
    _HKFilter *_filter;
    NSObject<OS_dispatch_queue> *_clientQueue;
    id <NSXPCProxyCreating> _serverProxy;
}

+ (void)_configureClientInterface:(id)arg1;
+ (id)_serverInterfaceProtocol;
+ (id)_clientInterfaceProtocol;
+ (id)serverInterface;
+ (id)clientInterface;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned int)arg1 totalDistance:(id)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned int)arg1 totalEnergyBurned:(id)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned int)arg1 duration:(double)arg2;
+ (id)predicateForWorkoutsWithWorkoutActivityType:(unsigned int)arg1;
+ (id)predicateForCategorySamplesWithOperatorType:(unsigned int)arg1 value:(int)arg2;
+ (id)predicateForQuantitySamplesWithOperatorType:(unsigned int)arg1 quantity:(id)arg2;
+ (id)predicateForObjectsFromWorkout:(id)arg1;
+ (id)predicateForObjectsWithNoCorrelation;
+ (id)predicateForObjectsWithUUIDs:(id)arg1;
+ (id)predicateForObjectWithUUID:(id)arg1;
+ (id)predicateForObjectsFromSources:(id)arg1;
+ (id)predicateForObjectsFromSource:(id)arg1;
+ (id)predicateForSamplesWithStartDate:(id)arg1 endDate:(id)arg2 options:(unsigned int)arg3;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1 operatorType:(unsigned int)arg2 value:(id)arg3;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1 allowedValues:(id)arg2;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1;
@property(retain, nonatomic) id <NSXPCProxyCreating> serverProxy; // @synthesize serverProxy=_serverProxy;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property(readonly, nonatomic) BOOL hasBeenExecuted; // @synthesize hasBeenExecuted=_hasBeenExecuted;
@property(retain, nonatomic, getter=_filter) _HKFilter *filter; // @synthesize filter=_filter;
@property(readonly, nonatomic, getter=_hasReceivedInitialResults) BOOL receivedInitialResults; // @synthesize receivedInitialResults=_receivedInitialResults;
@property(readonly, nonatomic) __weak id <HKQueryDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSUUID *activationUUID; // @synthesize activationUUID=_activationUUID;
- (void).cxx_destruct;
@property(readonly) NSPredicate *predicate;
@property(readonly) HKSampleType *sampleType;
- (void)deliverError:(id)arg1 forQuery:(id)arg2;
- (CDUnknownBlockType)_queue_errorHandler;
- (BOOL)_queue_shouldStayAliveAfterInitialResults;
- (void)_queue_validate;
- (void)_queue_cleanupAfterDeactivation;
- (void)_queue_requestServerProxyWithUUID:(id)arg1 connection:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)_queue_deactivate;
- (void)_queue_deliverErrorAndDeactivate:(id)arg1;
- (void)_queue_activateWithConnection:(id)arg1 isReactivation:(BOOL)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (id)_predicateFilterClasses;
- (void)_throwInvalidArgumentExceptionIfHasBeenExecuted:(SEL)arg1;
- (void)_client_receivedInitialResults;
- (void)_dispatchAsyncToResourceQueue:(CDUnknownBlockType)arg1;
- (void)_dispatchSyncToResourceQueue:(CDUnknownBlockType)arg1;
- (void)_dispatchToClientForUUID:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)deactivate;
- (void)reactivateWithConnection:(id)arg1;
- (void)activateWithClientQueue:(id)arg1 connection:(id)arg2 delegate:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (id)_initWithDataType:(id)arg1 predicate:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

