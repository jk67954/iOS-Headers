//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "HDServer.h"

@class HDClient, NSError, NSString;

@interface HDErrorServer : NSObject <HDServer>
{
    HDClient *_client;
    NSError *_error;
}

@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) HDClient *client; // @synthesize client=_client;
- (void).cxx_destruct;
- (void)setDataCollectionOptionForType:(id)arg1 key:(id)arg2 value:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchDiagnosticsWithKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopRecordingDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)startRecordingDataToFile:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopReplayingDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)startReplayingDataFromFile:(id)arg1 repeat:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)stopFakingDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)startFakingDataWithActivity:(int)arg1 speed:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performMigrationWithCompletion:(CDUnknownBlockType)arg1;
- (void)getDatabaseSizeInBytesWithCompletion:(CDUnknownBlockType)arg1;
- (void)removeDefaultForKey:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)setDefaultValue:(id)arg1 forKey:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)getDefaultForKey:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)performHealthServiceOperation:(id)arg1 onSession:(unsigned int)arg2 withParameters:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)getHealthServiceProperty:(id)arg1 forSession:(unsigned int)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)removePeripheral:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)addPeripheral:(id)arg1 name:(id)arg2 forServices:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)removePairingForHealthService:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)addPairingForHealthService:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)getHealthServicePairingsWithHandler:(CDUnknownBlockType)arg1;
- (void)endHealthServiceSession:(unsigned int)arg1;
- (void)startHealthServiceSession:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)endHealthServiceDiscovery:(unsigned int)arg1;
- (void)startHealthServiceDiscovery:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)endBluetoothStatusUpdates;
- (void)beginBluetoothStatusUpdates:(CDUnknownBlockType)arg1;
- (void)setCharacteristic:(id)arg1 forDataType:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)fetchCharacteristicWithDataType:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)deleteMedicalIDDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateMedicalIDData:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)medicalIDDataCreateIfNecessary:(BOOL)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deleteSourceWithBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deleteAllSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setOrderedSources:(id)arg1 forObjectType:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)orderedSourcesForObjectType:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)allSourcesWithCompletion:(CDUnknownBlockType)arg1;
- (void)hasSourceWithBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)closeTransactionWithDataType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setBackgroundDeliveryFrequency:(int)arg1 forDataType:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)addSamples:(id)arg1 toWorkout:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deleteDataObjects:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)saveDataObjects:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)startCorrelationQuery:(id)arg1 correlationType:(id)arg2 correlationFilter:(id)arg3 sampleFilters:(id)arg4 client:(id)arg5 handler:(CDUnknownBlockType)arg6;
- (void)startObserverQuery:(id)arg1 sampleType:(id)arg2 filter:(id)arg3 client:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)startAnchoredObjectQuery:(id)arg1 sampleType:(id)arg2 filter:(id)arg3 anchor:(id)arg4 limit:(unsigned int)arg5 client:(id)arg6 handler:(CDUnknownBlockType)arg7;
- (void)startStatisticsCollectionQuery:(id)arg1 sampleType:(id)arg2 filter:(id)arg3 anchorDate:(id)arg4 statisticsOptions:(unsigned int)arg5 intervalComponents:(id)arg6 shouldListenForUpdates:(BOOL)arg7 client:(id)arg8 handler:(CDUnknownBlockType)arg9;
- (void)startStatisticsQuery:(id)arg1 sampleType:(id)arg2 filter:(id)arg3 statisticsOptions:(unsigned int)arg4 client:(id)arg5 handler:(CDUnknownBlockType)arg6;
- (void)startSourcesQuery:(id)arg1 sampleType:(id)arg2 filter:(id)arg3 client:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)startSampleQuery:(id)arg1 sampleType:(id)arg2 filter:(id)arg3 maxResults:(unsigned int)arg4 sortDescriptors:(id)arg5 client:(id)arg6 handler:(CDUnknownBlockType)arg7;
- (void)endAuthorizationDelegateTransactionWithError:(id)arg1;
- (void)beginAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)resetAuthorizationStatusForBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setRequestedAuthorizationForBundleIdentifier:(id)arg1 shareTypes:(id)arg2 readTypes:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)allAuthorizationRecordsForType:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)allAuthorizationRecordsForBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 shouldPrompt:(BOOL)arg3 completion:(CDUnknownBlockType)arg4;
- (void)authorizationStatusForType:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)invalidate;
- (id)initWithClient:(id)arg1 error:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

