//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "MDRenderTarget.h"

@class NSString;

__attribute__((visibility("hidden")))
@interface GGLImageCanvas : NSObject <MDRenderTarget>
{
    struct CGSize _size;
    float _contentScale;
    BOOL _canMakeImage;
    BOOL _recreateRenderTarget;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _colorBuffer;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _depthStencilBuffer;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget>> _renderTarget;
    BOOL _useMultisampling;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _msaaColorBuffer;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _msaaDepthStencilBuffer;
    struct unique_ptr<ggl::RenderTargetOperation, std::__1::default_delete<ggl::RenderTargetOperation>> _msaaBlitOperation;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget>> _msaaRenderTarget;
}

@property(readonly, nonatomic) BOOL useMultisampling; // @synthesize useMultisampling=_useMultisampling;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) float contentScale; // @synthesize contentScale=_contentScale;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CGImage *)newImageWithRenderer:(struct Renderer *)arg1;
- (shared_ptr_edb96180)bitmapDataWithRenderer:(struct Renderer *)arg1;
- (void)didDrawView;
- (void)willDrawView;
- (void)_destroyMSAARenderTarget;
- (void)_createMSAARenderTarget;
- (void)_destroyRenderTarget;
- (void)_createRenderTarget;
- (id)initWithSize:(struct CGSize)arg1 scale:(float)arg2 useMultisampling:(BOOL)arg3;
@property(readonly, nonatomic) struct CGSize sizeInPixels;
@property(readonly, nonatomic) struct RenderTargetOperation *msaaBlitOperation;
@property(readonly, nonatomic) struct RenderTarget *finalRenderTarget;
@property(readonly, nonatomic) struct RenderTarget *msaaRenderTarget;
@property(readonly, nonatomic) struct RenderTarget *renderTarget;

// Remaining properties
@property(readonly, nonatomic) float averageFPS;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

