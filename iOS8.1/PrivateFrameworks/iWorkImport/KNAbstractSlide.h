//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

#import "TSDDrawableContainerInfo.h"
#import "TSKDocumentObject.h"
#import "TSKTransformableObject.h"
#import "TSSPropertySource.h"
#import "TSSStyleClient.h"

@class KNBodyPlaceholderInfo, KNObjectPlaceholderInfo, KNSlideBackgroundInfo, KNSlideNode, KNSlideNumberPlaceholderInfo, KNSlideStyle, KNTitlePlaceholderInfo, KNTransition, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject<TSDContainerInfo>, NSString, TSDFill, TSDGuideStorage, TSDInfoGeometry, TSPObject<TSDOwningAttachment>, TSUMutablePointerSet, TSUPointerKeyDictionary;

__attribute__((visibility("hidden")))
@interface KNAbstractSlide : TSPObject <TSSPropertySource, TSSStyleClient, TSKDocumentObject, TSDDrawableContainerInfo, TSKTransformableObject>
{
    KNSlideNode *mSlideNode;
    KNTitlePlaceholderInfo *mTitlePlaceholder;
    KNBodyPlaceholderInfo *mBodyPlaceholder;
    KNObjectPlaceholderInfo *mObjectPlaceholder;
    TSDGuideStorage *mUserDefinedGuideStorage;
    KNSlideStyle *mStyle;
    KNSlideBackgroundInfo *mBackground;
    NSArray *mChildInfos;
    KNSlideNumberPlaceholderInfo *mSlideNumberPlaceholder;
    BOOL mInDocument;
    NSMutableArray *mStaticGuides;
    NSMutableDictionary *mPlaceholdersForTags;
    BOOL mNeedsSlideNodeEventCountUpdate;
    TSUPointerKeyDictionary *mDrawableToGhostInfosMap;
    TSUMutablePointerSet *mDrawablesWithInvalidGhosts;
    BOOL mShouldConsiderAllChunksActive;
    KNTransition *mTransition;
    NSArray *mBuilds;
    NSArray *mBuildChunks;
}

+ (unsigned int)deliveryGroupCountForBuildChunks:(id)arg1;
+ (id)buildChunksInDeliveryGroupAtIndex:(unsigned int)arg1 inBuildChunks:(id)arg2;
+ (id)p_firstActiveChunkInChunks:(id)arg1;
+ (BOOL)chunk:(id)arg1 isFirstInDeliveryGroupForChunks:(id)arg2;
+ (unsigned int)deliveryGroupIndexForBuildChunk:(id)arg1 inBuildChunks:(id)arg2;
+ (id)parentSlideForInfo:(id)arg1;
+ (id)newObjectForUnarchiver:(id)arg1;
+ (BOOL)needsObjectUUID;
@property(copy, nonatomic) NSArray *buildChunks; // @synthesize buildChunks=mBuildChunks;
@property(readonly, nonatomic) BOOL inDocument; // @synthesize inDocument=mInDocument;
@property(retain, nonatomic) KNSlideNumberPlaceholderInfo *slideNumberPlaceholder; // @synthesize slideNumberPlaceholder=mSlideNumberPlaceholder;
@property(retain, nonatomic) KNObjectPlaceholderInfo *objectPlaceholder; // @synthesize objectPlaceholder=mObjectPlaceholder;
@property(retain, nonatomic) KNBodyPlaceholderInfo *bodyPlaceholder; // @synthesize bodyPlaceholder=mBodyPlaceholder;
@property(retain, nonatomic) KNTitlePlaceholderInfo *titlePlaceholder; // @synthesize titlePlaceholder=mTitlePlaceholder;
@property(readonly, nonatomic) KNSlideNode *slideNode; // @synthesize slideNode=mSlideNode;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (float)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (BOOL)containsProperty:(int)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (id)copyWithContext:(id)arg1;
- (id)childEnumerator;
- (BOOL)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) BOOL attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) BOOL inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) BOOL anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) BOOL floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (id)infoCorrespondingToInfo:(id)arg1;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)removeChildInfo:(id)arg1;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addChildInfo:(id)arg1;
- (BOOL)canMoveDeliveryGroupFromIndex:(unsigned int)arg1 toIndex:(unsigned int)arg2;
@property(readonly, nonatomic) NSArray *buildsGroupedByDeliveryGroup;
@property(readonly, nonatomic) unsigned int deliveryGroupCount;
- (BOOL)p_canMoveDeliveryGroupBuildChunks:(id)arg1 toIndex:(unsigned int)arg2;
- (BOOL)p_canMoveDeliveryGroupBuildChunksFromIndex:(unsigned int)arg1 toIndex:(unsigned int)arg2;
- (id)buildChunksInDeliveryGroupAtIndex:(unsigned int)arg1;
- (id)deliveryGroupIndexesForBuilds:(id)arg1;
- (unsigned int)deliveryGroupIndexForBuildChunk:(id)arg1;
- (BOOL)hasComplementForBuildChunk:(id)arg1;
- (BOOL)hasComplementForBuildChunk:(id)arg1 inBuildChunks:(id)arg2;
- (id)p_calculateActiveBuildChunks;
@property(readonly, nonatomic) NSArray *activeBuildChunks;
- (int)validateMoveBuildChunks:(id)arg1 toIndex:(unsigned int)arg2;
- (BOOL)p_areBuildChunksInValidOrder:(id)arg1;
- (int)canMoveBuildChunk:(id)arg1 toIndex:(unsigned int)arg2;
- (BOOL)p_isValidToMoveChunk:(id)arg1 toIndex:(unsigned int)arg2;
- (struct _NSRange)p_rangeForChunksInBuild:(id)arg1;
- (id)p_complementForBuild:(id)arg1;
- (id)activeChunksForDrawable:(id)arg1 animationType:(int)arg2;
- (id)activeChunksForDrawable:(id)arg1;
- (void)removeBuildChunk:(id)arg1;
- (void)insertBuildChunk:(id)arg1 atIndex:(unsigned int)arg2;
- (void)p_assertChunksInSequenceForBuild:(id)arg1;
- (void)p_buildOrderingDidChangeWithBuild:(id)arg1;
- (void)p_buildChunkOrderingDidChangeWithChunk:(id)arg1;
- (void)removeInvalidBuildsOnDrawable:(id)arg1 usingParentCommand:(id)arg2;
- (id)p_invalidBuildsOnDrawable:(id)arg1;
- (void)removeBuild:(id)arg1;
- (void)insertBuild:(id)arg1 atIndex:(unsigned int)arg2;
- (id)outBuildForDrawable:(id)arg1;
- (id)inBuildForDrawable:(id)arg1;
- (id)buildsForDrawable:(id)arg1 orderedByFirstChunk:(BOOL)arg2;
- (id)buildsForDrawable:(id)arg1 type:(int)arg2 orderedByFirstChunk:(BOOL)arg3;
@property(readonly, nonatomic) NSArray *buildsOrderedByFirstChunk;
@property(copy, nonatomic) NSArray *builds;
- (void)removeTagForDrawable:(id)arg1;
- (BOOL)infoIsPlaceholder:(id)arg1;
- (id)tagForInfo:(id)arg1;
- (BOOL)infoExistsForTag:(id)arg1;
- (id)infoForTag:(id)arg1;
- (void)setInfo:(id)arg1 forSageTag:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic, getter=isSlideNumberVisible) BOOL slideNumberVisible;
@property(readonly, nonatomic, getter=isObjectVisible) BOOL objectVisible;
@property(readonly, nonatomic, getter=isBodyVisible) BOOL bodyVisible;
@property(readonly, nonatomic, getter=isTitleVisible) BOOL titleVisible;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(int)arg4 textPresetStyle:(id)arg5 listStyle:(id)arg6 layoutPropertyMap:(id)arg7 paragraphPropertyMap:(id)arg8 listPropertyMap:(id)arg9 context:(id)arg10;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(int)arg4 textPresetStyle:(id)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(int)arg4 textPresetIndex:(int)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9;
- (id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2;
- (id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2 placeholderClass:(Class)arg3;
- (id)defaultSlideNumberPlaceholderWithContext:(id)arg1;
- (id)defaultSlideNumberPlaceholder;
- (id)defaultBodyPlaceholderWithContext:(id)arg1;
- (id)defaultTitlePlaceholderWithContext:(id)arg1;
- (id)defaultBodyPlaceholder;
- (id)defaultTitlePlaceholder;
@property(readonly, nonatomic) NSArray *alignmentGuidesForEditing;
@property(readonly, nonatomic) NSArray *alignmentGuides;
- (void)addStaticGuide:(id)arg1;
@property(readonly, nonatomic) NSArray *staticGuides;
- (void)performBlockOnInfos:(CDUnknownBlockType)arg1;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (BOOL)canMoveDrawables:(id)arg1 toIndexes:(id)arg2;
- (void)removeDrawable:(id)arg1;
- (void)insertDrawables:(id)arg1 atIndex:(unsigned int)arg2 dolcContext:(id)arg3;
- (void)insertDrawable:(id)arg1 atIndex:(unsigned int)arg2 dolcContext:(id)arg3;
- (void)addDrawable:(id)arg1 dolcContext:(id)arg2;
@property(readonly, nonatomic) NSArray *infosToDisplay;
@property(readonly, nonatomic) NSArray *ownedChildInfos;
- (void)setChildInfos:(id)arg1;
- (id)childInfos;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
@property(readonly, nonatomic) TSDFill *backgroundFill;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithSlideNode:(id)arg1 context:(id)arg2;
@property(copy, nonatomic) NSDictionary *placeholdersForTags;
@property(retain, nonatomic) KNSlideBackgroundInfo *background;
@property(retain, nonatomic) KNTransition *transition;
@property(retain, nonatomic) KNSlideStyle *style;
@property(retain, nonatomic) TSDGuideStorage *userDefinedGuideStorage;
- (void)p_updateNumberOfBuildChunksImmediatelyWithoutUndoHistory;
- (void)p_updatePreUFFBuildEffects;
- (void)p_updateOverlappingBuildEventTriggers;
- (void)saveToArchive:(struct SlideArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct SlideArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_updateBuildsReplacingPlaceholder:(id)arg1 withPlaceholder:(id)arg2;
- (void)i_invalidateActiveChunkCache;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(nonatomic) BOOL matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

