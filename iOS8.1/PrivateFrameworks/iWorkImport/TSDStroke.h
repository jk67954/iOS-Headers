//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSMutableCopying.h"
#import "TSDMixing.h"
#import "TSDPathPainter.h"
#import "TSSThemeAsset.h"

@class NSString, TSDStrokePattern, TSUColor;

__attribute__((visibility("hidden")))
@interface TSDStroke : NSObject <TSSThemeAsset, TSDPathPainter, TSDMixing, NSCopying, NSMutableCopying>
{
    TSUColor *mColor;
    float mWidth;
    float mActualWidth;
    int mCap;
    int mJoin;
    TSDStrokePattern *mPattern;
    float mMiterLimit;
}

+ (BOOL)canMixWithNilObjects;
+ (id)strokeWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;
+ (id)strokeWithColor:(id)arg1 width:(float)arg2;
+ (id)emptyStroke;
+ (id)stroke;
+ (id)p_newEmptyStroke;
+ (id)p_newStroke;
+ (Class)mutableClass;
+ (id)instanceWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;
+ (id)mergeRangeEmptyStroke;
+ (id)zeroWidthEmptyStroke;
+ (id)emptyStrokeWithWidth:(float)arg1;
@property(nonatomic) float actualWidth; // @synthesize actualWidth=mActualWidth;
@property(retain, nonatomic) TSDStrokePattern *pattern; // @synthesize pattern=mPattern;
@property(nonatomic) float miterLimit; // @synthesize miterLimit=mMiterLimit;
@property(nonatomic) int join; // @synthesize join=mJoin;
@property(nonatomic) int cap; // @synthesize cap=mCap;
@property(nonatomic) float width; // @synthesize width=mWidth;
@property(retain, nonatomic) TSUColor *color; // @synthesize color=mColor;
- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;
- (SEL)mapThemeAssetSelector;
- (BOOL)isThemeEquivalent:(id)arg1;
- (id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2;
- (int)mixingTypeWithObject:(id)arg1;
- (BOOL)shouldAntialiasDefeat;
- (BOOL)drawsInOneStep;
- (void)applyToCAShapeLayer:(id)arg1 insideStroke:(BOOL)arg2 withScale:(float)arg3;
- (void)applyToCAShapeLayer:(id)arg1 withScale:(float)arg2;
- (BOOL)prefersToApplyToCAShapeLayerDuringManipulation;
- (BOOL)canApplyToCAShapeLayer;
- (void)applyToRepCALayer:(id)arg1 withScale:(float)arg2;
- (BOOL)canApplyDirectlyToRepCALayer;
@property(readonly, nonatomic) BOOL isNearlyWhite;
@property(readonly, nonatomic) BOOL isFrame;
@property(readonly, nonatomic) float suggestedMinimumLineWidth;
@property(readonly, nonatomic) BOOL supportsLineOptions;
@property(readonly, nonatomic) BOOL supportsColor;
@property(readonly, nonatomic) BOOL supportsWidth;
@property(readonly, nonatomic) BOOL supportsPattern;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)pathForLineEnd:(id)arg1 wrapPath:(BOOL)arg2 atPoint:(struct CGPoint)arg3 atAngle:(float)arg4 withScale:(float)arg5;
- (struct CGRect)boundsForLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 transform:(struct CGAffineTransform)arg5;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(BOOL)arg6;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(struct CGContext *)arg5;
- (void)paintPathWithNormalClip:(struct CGPath *)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(BOOL)arg4;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)colorForCGContext:(struct CGContext *)arg1;
- (id)strokeLineEnd:(id)arg1;
- (float)lineEndInsetAdjustment;
@property(readonly, nonatomic) BOOL shouldRender;
@property(readonly, nonatomic) BOOL isNullStroke;
- (void)applyInteriorWrapPropertiesToContext:(struct CGContext *)arg1 insideStroke:(BOOL)arg2;
- (void)applyToContext:(struct CGContext *)arg1 insideStroke:(BOOL)arg2;
- (void)applyToContext:(struct CGContext *)arg1;
- (void)p_setPatternPropertiesFromStroke:(id)arg1;
- (void)p_setPropertiesFromStroke:(id)arg1;
@property(readonly, nonatomic) struct _TSDStrokeOutsets outsets;
- (struct CGRect)boundsForPath:(id)arg1;
- (BOOL)needsToExtendJoinsForBoundsCalculation;
@property(readonly, nonatomic) BOOL drawsOutsideStrokeBounds;
@property(readonly, nonatomic) BOOL isRoundDash;
@property(readonly, nonatomic) BOOL isDash;
@property(readonly, nonatomic) float dashSpacing;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
- (BOOL)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;
- (id)init;
- (id)initWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(float)arg6;
- (void)aaDefeatedPaintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(struct CGContext *)arg5;
- (void)saveToArchive:(struct StrokeArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;
- (BOOL)isEqualToStroke:(id)arg1;
@property(readonly, nonatomic) BOOL solid;
@property(readonly, nonatomic) BOOL empty;
@property(readonly, nonatomic) BOOL dontClearBackground;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

