//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCoding.h"
#import "NSCopying.h"

__attribute__((visibility("hidden")))
@interface TSDBezierPath : NSObject <NSCopying, NSCoding>
{
    int sfr_elementCount;
    int sfr_elementMax;
    struct PATHSEGMENT *sfr_head;
    float *sfr_elementLength;
    float sfr_totalLength;
    int sfr_lastSubpathIndex;
    void *sfr_extraSegments;
    float sfr_lineWidth;
    struct CGRect sfr_controlPointBounds;
    float sfr_miterLimit;
    float sfr_flatness;
    float *sfr_dashedLinePattern;
    unsigned int sfr_dashedLineCount;
    float sfr_dashedLinePhase;
    void *sfr_path;
    int sfr_extraSegmentCount;
    int sfr_extraSegmentMax;
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;
}

+ (float)defaultLineWidth;
+ (void)setDefaultLineWidth:(float)arg1;
+ (unsigned int)defaultLineJoinStyle;
+ (void)setDefaultLineJoinStyle:(unsigned int)arg1;
+ (unsigned int)defaultLineCapStyle;
+ (void)setDefaultLineCapStyle:(unsigned int)arg1;
+ (unsigned int)defaultWindingRule;
+ (void)setDefaultWindingRule:(unsigned int)arg1;
+ (float)defaultFlatness;
+ (void)setDefaultFlatness:(float)arg1;
+ (float)defaultMiterLimit;
+ (void)setDefaultMiterLimit:(float)arg1;
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
+ (void)clipRect:(struct CGRect)arg1;
+ (void)strokeRect:(struct CGRect)arg1;
+ (void)fillRect:(struct CGRect)arg1;
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(float)arg2;
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;
+ (id)bezierPathWithRect:(struct CGRect)arg1;
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;
+ (id)bezierPath;
+ (void)initialize;
+ (float)lineWidth;
+ (void)setLineWidth:(float)arg1;
+ (unsigned int)lineJoinStyle;
+ (void)setLineJoinStyle:(unsigned int)arg1;
+ (unsigned int)lineCapStyle;
+ (void)setLineCapStyle:(unsigned int)arg1;
+ (unsigned int)windingRule;
+ (void)setWindingRule:(unsigned int)arg1;
+ (float)flatness;
+ (void)setFlatness:(float)arg1;
+ (float)miterLimit;
+ (void)setMiterLimit:(float)arg1;
+ (id)bezierPathWithConvexHullOfPoints:(struct CGPoint *)arg1 count:(unsigned long)arg2;
+ (id)smoothBezierPath:(id)arg1 withThreshold:(float)arg2;
+ (id)exteriorOfBezierPath:(id)arg1;
+ (id)outsideEdgeOfBezierPath:(id)arg1;
+ (id)outlineBezierPath:(id)arg1 withThreshold:(float)arg2;
+ (id)outlineBezierPath:(id)arg1;
+ (id)appendBezierPaths:(id)arg1;
+ (id)excludeBezierPaths:(id)arg1;
+ (id)subtractBezierPaths:(id)arg1;
+ (id)intersectBezierPaths:(id)arg1;
+ (id)uniteBezierPaths:(id)arg1;
+ (id)p_booleanWithBezierPaths:(id)arg1 operation:(int)arg2;
+ (struct CGRect)p_pathToBounds:(Path_1b135553 *)arg1;
+ (id)p_pathToBezier:(Path_1b135553 *)arg1;
+ (Path_1b135553 *)p_bezierToPath:(id)arg1;
+ (id)tracedPathForInstantAlphaBinaryBitmap:(id)arg1 pointSpacing:(float)arg2;
+ (id)tracedPathForImage:(struct CGImage *)arg1 alphaThreshold:(float)arg2 pointSpacing:(float)arg3;
- (id)initWithCString:(const char *)arg1;
- (const char *)cString;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(float)arg3;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(float)arg2 startAngle:(float)arg3 endAngle:(float)arg4;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(float)arg2 startAngle:(float)arg3 endAngle:(float)arg4 clockwise:(BOOL)arg5;
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(int)arg2;
- (void)appendBezierPathWithRect:(struct CGRect)arg1;
- (void)appendBezierPath:(id)arg1;
- (void)_appendToPath:(id)arg1;
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(int)arg2;
- (unsigned int)elementAtIndex:(int)arg1 allPoints:(struct CGPoint *)arg2;
- (unsigned int)elementAtIndex:(int)arg1 associatedPoints:(struct CGPoint *)arg2;
- (unsigned int)elementAtIndex:(int)arg1;
- (int)elementCount;
- (float)lengthToElement:(int)arg1;
- (float)lengthOfElement:(int)arg1;
- (float)length;
- (void)calculateLengths;
- (float)calculateLengthOfElement:(int)arg1;
- (BOOL)isClockwise;
- (BOOL)isFlat;
- (struct CGRect)bounds;
- (struct CGRect)controlPointBounds;
- (struct CGPoint)currentPoint;
- (BOOL)isEmpty;
- (BOOL)isCircular;
- (BOOL)isRectangular;
- (BOOL)isDiamond;
- (BOOL)isTriangular;
- (struct CGPath *)CGPath;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (id)bezierPathByReversingPath;
- (id)_copyFlattenedPath;
- (id)bezierPathByFlatteningPath;
- (void)flattenIntoPath:(id)arg1;
- (void)subdivideBezierWithFlatness:(float)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;
- (void)addClip;
- (void)fill;
- (void)stroke;
- (void)_doPath;
- (struct CGPoint)_checkPointForValidity:(struct CGPoint)arg1;
- (BOOL)_isValid:(float)arg1;
- (void)getLineDash:(float *)arg1 count:(int *)arg2 phase:(float *)arg3;
- (void)setLineDash:(const float *)arg1 count:(int)arg2 phase:(float)arg3;
- (void)setFlatness:(float)arg1;
- (float)flatness;
- (void)setMiterLimit:(float)arg1;
- (float)miterLimit;
- (void)setWindingRule:(unsigned int)arg1;
- (unsigned int)windingRule;
- (void)setLineJoinStyle:(unsigned int)arg1;
- (unsigned int)lineJoinStyle;
- (void)setLineCapStyle:(unsigned int)arg1;
- (unsigned int)lineCapStyle;
- (void)setLineWidth:(float)arg1;
- (float)lineWidth;
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)relativeLineToPoint:(struct CGPoint)arg1;
- (void)relativeMoveToPoint:(struct CGPoint)arg1;
- (void)removeAllPoints;
- (void)closePath;
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)lineToPoint:(struct CGPoint)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)chisel;
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_b2fbf00d)arg2 inElementRange:(struct _NSRange)arg3 into:(id)arg4;
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_b2fbf00d)arg2 into:(id)arg3;
- (void)recursiveSubdivideOntoPath:(id)arg1 into:(id)arg2;
- (float)curvatureAt:(float)arg1 fromElement:(int)arg2;
- (float)curvatureAt:(float)arg1;
- (struct CGPoint)myGradientAt:(float)arg1 fromElement:(int)arg2;
- (struct CGPoint)myGradientAt:(float)arg1;
- (struct CGPoint)rawGradientAt:(float)arg1 fromElement:(int)arg2;
- (float)elementPercentageFromElement:(int)arg1 forOverallPercentage:(float)arg2;
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 betweenElement:(int)arg2 andElement:(int)arg3 withPressure:(id)arg4 getElement:(int *)arg5 getPercentage:(float *)arg6;
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 inElement:(int)arg2 withPressure:(id)arg3;
- (struct CGPoint)transformedCoordinate:(struct CGPoint)arg1 withPressure:(id)arg2;
- (struct CGPoint)gradientAt:(float)arg1;
- (struct CGPoint)gradientAt:(float)arg1 fromElement:(int)arg2;
- (struct CGPoint)pointAt:(float)arg1 fromElement:(int)arg2;
- (int)elementPercentage:(float *)arg1 forOverallPercentage:(float)arg2;
- (id)pressure;
- (struct CGPoint)nearestAngleOnPathToLine:(struct CGPoint [2])arg1;
- (struct CGPoint)nearestPointOnPathToLine:(struct CGPoint [2])arg1;
- (id)copyFromSegment:(int)arg1 t:(float)arg2 toSegment:(int)arg3 t:(float)arg4;
- (void)appendBezierPath:(id)arg1 fromSegment:(int)arg2 t:(float)arg3 toSegment:(int)arg4 t:(float)arg5 withoutMove:(BOOL)arg6;
- (void)appendBezierPath:(id)arg1 fromSegment:(int)arg2 toSegment:(int)arg3;
- (void)addIntersectionsWithLine:(struct CGPoint [2])arg1 to:(id)arg2;
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2;
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2 allIntersections:(BOOL)arg3 reversed:(BOOL)arg4;
- (void)getStartPoint:(struct CGPoint *)arg1 andEndPoint:(struct CGPoint *)arg2;
- (void)_deviceClosePath;
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)_deviceLineToPoint:(struct CGPoint)arg1;
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;
- (void)_addPathSegment:(int)arg1 point:(struct CGPoint)arg2;
- (id)description;
- (id)aliasedPathWithViewScale:(float)arg1 effectiveStrokeWidth:(float)arg2;
- (id)aliasedPathInContext:(struct CGContext *)arg1 effectiveStrokeWidth:(float)arg2;
- (id)p_aliasedPathInContext:(struct CGContext *)arg1 viewScale:(float)arg2 effectiveStrokeWidth:(float)arg3;
- (struct CGPoint)roundPoint:(struct CGPoint)arg1 inContext:(struct CGContext *)arg2 strokeWidth:(int)arg3;
- (void)addPathToContext:(struct CGContext *)arg1;
- (BOOL)intersectsRect:(struct CGRect)arg1 hasFill:(BOOL)arg2;
@property(readonly, nonatomic) BOOL isLineSegment;
@property(readonly, nonatomic) BOOL isOpen;
- (id)pathByWobblingByUpTo:(float)arg1 subdivisions:(unsigned int)arg2;
- (void)clearStroke:(struct CGContext *)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)intersectBezierPath:(id)arg1;
- (id)subtractBezierPath:(id)arg1;
- (id)uniteWithBezierPath:(id)arg1;
- (id)outlineStroke;
- (id)bezierPathByOffsettingPath:(float)arg1 joinStyle:(unsigned int)arg2 withThreshold:(float)arg3;
- (id)p_beziersFromSegmentIntersections:(id)arg1;
- (id)p_pathAsSegments;
- (id)bezierPathByRemovingRedundantElements;
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startRadialVector:(struct CGPoint)arg2 endRadialVector:(struct CGPoint)arg3 angleSign:(int)arg4 startNewPath:(BOOL)arg5;
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startAngle:(float)arg2 swingAngle:(float)arg3 angleType:(int)arg4 startNewPath:(BOOL)arg5;
@property(readonly, nonatomic) BOOL containsClosePathElement;
@property(readonly, nonatomic) BOOL isEffectivelyClosed;
- (struct CGPoint)pointAlongPathAtPercentage:(float)arg1;
- (float)distanceToPoint:(struct CGPoint)arg1 elementIndex:(unsigned int *)arg2 tValue:(float *)arg3 threshold:(float)arg4;
- (BOOL)pointOnPath:(struct CGPoint)arg1 tolerance:(float)arg2;
- (struct CGRect)boundsIncludingTSDStroke:(id)arg1;
- (struct CGRect)boundsIncludingStroke;
- (struct CGRect)boundsIncludingStrokeWidth:(float)arg1 joinStyle:(unsigned int)arg2 capStyle:(unsigned int)arg3 miterLimit:(float)arg4 needsToExtendJoins:(BOOL)arg5;
- (struct CGRect)_addMitersFromSegments:(id)arg1 toRect:(struct CGRect)arg2;
- (void)takeAttributesFromStroke:(id)arg1;
@property(readonly, nonatomic) BOOL isSelfIntersecting;
@property(readonly, nonatomic) BOOL isCompound;
- (void)alignBoundsToOrigin;
- (float)yValueFromXValue:(float)arg1;
- (id)pathBySplittingAtPointOnPath:(struct CGPoint)arg1;
- (float)yValueFromXValue:(float)arg1 elementIndex:(int *)arg2 parametricValue:(float *)arg3;
- (id)bezierPathByFittingCurve:(id)arg1;
- (id)bezierPathByFittingCurve;
- (void)saveToArchive:(struct Path *)arg1;
- (id)initWithArchive:(const struct Path *)arg1;

@end

