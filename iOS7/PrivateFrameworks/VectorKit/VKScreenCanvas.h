/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <VectorKit/VGLScreenCanvas.h>

#import "VKAnimationRunner-Protocol.h"
#import "VKCameraControllerDelegate-Protocol.h"
#import "VKCameraDelegate-Protocol.h"
#import "VKWorldDelegate-Protocol.h"

@class CADisplay, NSArray, NSMutableArray, VGLDisplayLink, VKCamera, VKDispatch, VKLayoutContext, VKMemoryObserver, VKScene, VKWorld;

// Not exported
@interface VKScreenCanvas : VGLScreenCanvas <VKWorldDelegate, VKAnimationRunner, VKCameraControllerDelegate, VKCameraDelegate>
{
    VKDispatch *_dispatch;
    VKWorld *_world;
    VKCamera *_camera;
    VKScene *_scene;
    VKLayoutContext *_layoutContext;
    _Bool _needsLayout;
    unsigned int _wantsLayout;
    unsigned int _needsRepaint;
    _Bool _userIsGesturing;
    _Bool _iconsShouldAlignToPixels;
    NSMutableArray *_cameraControllers;
    _Bool _debugPaintFrameRateGraph;
    float _debugFramesPerSecond;
    _Bool _rendersInBackground;
    NSMutableArray *_animations[2];
    long long _displayRate;
    long long _requestedRate;
    VKMemoryObserver *_memoryObserver;
    VGLDisplayLink *_displayLink;
    _Bool _isInBackground;
    struct VKEdgeInsets _edgeInsets;
    struct VKEdgeInsets _fullyOccludedEdgeInsets;
    struct VKEdgeInsets _labelEdgeInsets;
    _Bool _deallocing;
}

+ (Class)contextClass;
@property(readonly, nonatomic) NSArray *cameraControllers; // @synthesize cameraControllers=_cameraControllers;
@property(nonatomic) struct VKEdgeInsets fullyOccludedEdgeInsets; // @synthesize fullyOccludedEdgeInsets=_fullyOccludedEdgeInsets;
@property(nonatomic) _Bool iconsShouldAlignToPixels; // @synthesize iconsShouldAlignToPixels=_iconsShouldAlignToPixels;
@property(readonly, nonatomic) VKCamera *camera; // @synthesize camera=_camera;
@property(nonatomic) float debugFramesPerSecond; // @synthesize debugFramesPerSecond=_debugFramesPerSecond;
@property(nonatomic) _Bool debugPaintFrameRateGraph; // @synthesize debugPaintFrameRateGraph=_debugPaintFrameRateGraph;
@property(readonly, nonatomic) VKWorld *world; // @synthesize world=_world;
- (id).cxx_construct;
- (void)edgeInsetsDidEndAnimating;
- (void)edgeInsetsWillBeginAnimating;
@property(nonatomic) _Bool rendersInBackground;
- (id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)cameraController:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;
- (void)cameraController:(id)arg1 didBecomePitched:(_Bool)arg2;
- (void)cameraControllerDidStopRegionAnimation:(id)arg1 completed:(_Bool)arg2;
- (void)cameraControllerWillStartRegionAnimation:(id)arg1;
- (void)cameraControllerDidChangeCameraState:(id)arg1;
- (void)cameraController:(id)arg1 requestsDisplayRate:(long long)arg2;
- (void)removeCameraController:(id)arg1;
- (void)addCameraController:(id)arg1;
@property(nonatomic) long long targetDisplay;
@property(nonatomic, getter=isGesturing) _Bool gesturing;
- (void)cameraDidChange:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)runOrAdoptAnimation:(id)arg1 run:(_Bool)arg2;
- (void)runAnimation:(id)arg1;
- (void)worldDisplayDidChange:(id)arg1;
- (void)worldLayoutDidChange:(id)arg1;
- (void)_queueUpdateDisplayLinkStatus;
- (void)setContentsScale:(double)arg1;
- (void)forceLayout;
- (void)layoutSublayers;
- (void)updateCameraForFrameResize;
- (void)didDrawView;
- (void)takeSnapshotIfNeeded;
- (void)_renderCore:(double)arg1;
- (void)drawWithTimestamp:(double)arg1;
- (void)animateWithTimestamp:(double)arg1;
@property(nonatomic) struct VKEdgeInsets labelEdgeInsets;
@property(nonatomic) struct VKEdgeInsets edgeInsets;
- (void)onTimerFired:(id)arg1;
- (void)didEnterBackground;
- (void)willEnterForeground;
@property(nonatomic) long long displayRate;
@property(nonatomic) _Bool debugEnableMultisampling; // @dynamic debugEnableMultisampling;
- (void)setNeedsDisplay;
- (void)setNeedsLayout;
- (void)setHidden:(_Bool)arg1;
- (_Bool)updateDisplayLinkStatus;
- (void)_updateDisplayRate;
- (_Bool)wantsTimerTick;
- (_Bool)wantsRender;
- (_Bool)canRender;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)didReceiveMemoryWarning;
- (void)transferAnimationsTo:(id)arg1;
- (void)adoptAnimation:(id)arg1;
@property(nonatomic) CADisplay *hostDisplay;
- (void)dealloc;
- (id)initWithContext:(id)arg1 inBackground:(_Bool)arg2;

@end

