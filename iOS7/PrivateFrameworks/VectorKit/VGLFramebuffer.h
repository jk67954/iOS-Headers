/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class VGLContext, VGLScreenCanvas, VGLTexture;

// Not exported
@interface VGLFramebuffer : NSObject
{
    VGLContext *_context;
    VGLScreenCanvas *_canvas;
    unsigned int _framebuffer;
    unsigned int _renderbuffer;
    unsigned int _depthbuffer;
    unsigned int _multisampleFramebuffer;
    unsigned int _multisampleRenderbuffer;
    unsigned int _multisampleDepthbuffer;
    int _width;
    int _height;
    _Bool _createdWithDepth;
    _Bool _createdWithStencil;
    _Bool _isPresentable;
    _Bool _multisampleModeCurrent;
    _Bool _multisampleModeNext;
    VGLTexture *_texture;
    _Bool _usingMagicFramebuffer;
    int _magicFramebufferToken;
}

@property(readonly, nonatomic) unsigned int framebuffer; // @synthesize framebuffer=_framebuffer;
@property(nonatomic) VGLContext *context; // @synthesize context=_context;
@property(nonatomic) VGLScreenCanvas *canvas; // @synthesize canvas=_canvas;
@property(readonly, nonatomic) int height; // @synthesize height=_height;
@property(readonly, nonatomic) int width; // @synthesize width=_width;
@property(readonly, nonatomic) _Bool isPresentable; // @synthesize isPresentable=_isPresentable;
- (void)deleteUnusedFramebuffers;
- (void)deleteResolveFramebuffers;
- (void)deleteFramebuffers;
- (void)finalize;
- (void)makeTarget;
- (void)preloadMultisampleFramebuffer;
- (void)_bindFramebuffers;
- (void)_deallocMultisampleFramebuffer;
- (void)_deallocSecondaryFramebuffer;
- (void)_deallocResolveFramebuffer;
- (_Bool)_createMultisampleFramebufferWithDepth:(_Bool)arg1 stencil:(_Bool)arg2;
- (_Bool)_createSecondaryFramebufferWithDepth:(_Bool)arg1 stencil:(_Bool)arg2;
- (_Bool)_createResolveFramebuffer;
- (void)dealloc;
- (id)initWithContext:(id)arg1 texture:(id)arg2 depth:(_Bool)arg3 stencil:(_Bool)arg4;
- (id)initWithContext:(id)arg1 canvas:(id)arg2 depth:(_Bool)arg3 stencil:(_Bool)arg4 multisampling:(_Bool)arg5;
- (id)initWithContext:(id)arg1 canvas:(id)arg2;
@property(nonatomic) _Bool useMultisampling;

@end

