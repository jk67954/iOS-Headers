/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <VectorKit/VKLabelNavRoadGraph.h>

@interface VKLabelNavRoadGraph (junctionlist)
- (_Bool)isOnScreenRouteBackwardsAtJunction:(id)arg1 navContext:(struct NavContext *)arg2;
- (_Bool)prepareOppositeCarriagewayJunctions;
- (id)oppositeCarriagewayJunctions;
- (unsigned char)computeRoutePositionMaskForPOIAtPixel:(const Vec2Imp_1782d7e3 *)arg1 currentPositionMask:(unsigned char)arg2 context:(struct NavContext *)arg3;
- (_Bool)collideRouteWithLabel:(id)arg1 routeCrossProduct:(float *)arg2 context:(struct NavContext *)arg3;
- (void)_transformRouteToScreenWithContext:(struct NavContext *)arg1;
- (void)_updateSimplifiedRoute;
- (_Bool)isPriorRouteCollinearWithRoad:(id)arg1 distance:(float)arg2;
- (void)_findOffRouteJunctions;
- (id)offRouteGraphJunctionsWithNavContext:(struct NavContext *)arg1 maxJunctions:(unsigned long long)arg2 isOnRoute:(_Bool)arg3;
- (void)_updateIntersectionsForDepth:(unsigned long long)arg1;
- (id)junctionListForDepth:(unsigned long long)arg1;
- (unsigned long long)countReadyJunctionLists;
- (void)evaluateDualCarriagewayForJunction:(id)arg1 outputJunctionList:(id)arg2;
- (_Bool)_checkIfDualCarriageWayConnectorRoad:(id)arg1 fromJunction:(id)arg2 toJunction:(id)arg3 checkShields:(_Bool)arg4;
- (id)overpassJunctionForJunction:(id)arg1;
- (void)addRouteRoadEdge:(const struct VKLabelNavRouteRoadEdge *)arg1 atA:(_Bool)arg2 isRouteRefineJunction:(_Bool)arg3 tile:(id)arg4 junctionList:(id)arg5;
@end

