/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "SSDownloadQueueObserver-Protocol.h"

@class NSMutableSet, NSObject<OS_dispatch_queue>, NSString;

@interface ISNetworkObserver : NSObject <SSDownloadQueueObserver>
{
    NSString *_dataStatusIndicator;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    _Bool _isCellularRestricted;
    double _lastNetworkTypeChangeTime;
    long long _networkUsageCount;
    long long _networkType;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    NSMutableSet *_observedDownloadQueues;
    NSString *_operatorName;
    struct __SCNetworkReachability *_reachability;
    NSString *_registrationStatus;
    struct __CTServerConnection *_telephonyServer;
}

+ (void)setWiFiEnabled:(_Bool)arg1;
+ (void)setAirplaneModeEnabled:(_Bool)arg1;
+ (void)set3GEnabled:(_Bool)arg1;
+ (id)sharedInstance;
- (long long)_setNetworkType:(long long)arg1;
- (void)_reloadNetworkTypeWithReachabilityFlags:(unsigned int)arg1;
- (void)_reloadNetworkType;
- (void)_reloadCellularRestriction;
- (void)_postUsageChangedToValue:(_Bool)arg1;
- (void)_postTypeChangedNotificationFromValue:(long long)arg1 toValue:(long long)arg2;
- (_Bool)_ntsIsUsingNetwork;
- (long long)_networkTypeForReachabilityFlags:(unsigned int)arg1;
- (long long)_networkTypeFromDataIndicator:(id)arg1;
- (id)_dataStatusIndicator;
- (long long)_currentNetworkType;
- (void)_handleTelephonyNotificationWithName:(struct __CFString *)arg1 userInfo:(struct __CFDictionary *)arg2;
- (void)downloadQueueNetworkUsageChanged:(id)arg1;
- (void)downloadQueue:(id)arg1 changedWithRemovals:(id)arg2;
@property long long networkType;
- (void)reloadNetworkType;
@property(readonly) NSString *operatorName;
@property(readonly) NSString *modemRegistrationStatus;
@property(readonly, getter=isWiFiEnabled) _Bool wifiEnabled;
- (_Bool)isCellularDataEnabledForBundleIdentifier:(id)arg1;
@property(readonly) NSString *dataStatusIndicator;
@property(readonly) _Bool shouldShowCellularAutomaticDownloadsSwitch;
@property(readonly) double lastNetworkTypeChangeTime;
@property(readonly, getter=isUsingNetwork) _Bool usingNetwork;
- (void)endUsingNetwork;
- (void)endObservingDownloadQueue:(id)arg1;
- (id)copyValueForCarrierBundleKey:(id)arg1;
@property(readonly) NSString *connectionTypeHeader;
- (void)beginUsingNetwork;
- (void)beginObservingDownloadQueue:(id)arg1;
- (void)dealloc;
- (id)init;

@end

