/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSDateFormatter;

@interface PLDateRangeFormatter : NSObject
{
    _Bool _autoUpdateOnChanges;
    NSDateFormatter *_sameDayDateFormatter;
    NSDateFormatter *_sameDayNoYearDateFormatter;
    NSDateFormatter *_dayOfTheWeekDateFormatter;
    NSDateFormatter *_yearDateFormatter;
    NSDateFormatter *_relativeDateFormatterDay;
    struct UDateIntervalFormat *_monthDayIntervalFormat;
    struct UDateIntervalFormat *_monthDayNoYearIntervalFormat;
    struct UDateIntervalFormat *_differentMonthDayIntervalFormat;
    struct UDateIntervalFormat *_differentMonthDayNoYearIntervalFormat;
    struct UDateIntervalFormat *_yearIntervalFormat;
    struct UDateIntervalFormat *_timeIntervalFormat;
    struct UDateIntervalFormat *_dayOfTheWeekIntervalFormat;
    _Bool _includeDayNumbers;
    _Bool _includeDayNumbersWhenMonthsDiffer;
    _Bool _useRelativeDayFormatting;
    _Bool _useShortMonths;
    _Bool _useShortDaysInRanges;
    _Bool _useTime;
    _Bool _yearOnly;
}

+ (void)_dumpAllDateCombinationsWithFormatters;
@property(nonatomic) _Bool yearOnly; // @synthesize yearOnly=_yearOnly;
@property(nonatomic) _Bool useTime; // @synthesize useTime=_useTime;
@property(nonatomic) _Bool useShortDaysInRanges; // @synthesize useShortDaysInRanges=_useShortDaysInRanges;
@property(nonatomic) _Bool useShortMonths; // @synthesize useShortMonths=_useShortMonths;
@property(nonatomic) _Bool useRelativeDayFormatting; // @synthesize useRelativeDayFormatting=_useRelativeDayFormatting;
@property(nonatomic) _Bool includeDayNumbersWhenMonthsDiffer; // @synthesize includeDayNumbersWhenMonthsDiffer=_includeDayNumbersWhenMonthsDiffer;
@property(nonatomic) _Bool includeDayNumbers; // @synthesize includeDayNumbers=_includeDayNumbers;
- (void)_dumpDateCombinations;
- (void)_dumpRelativeCombinationsForDate:(id)arg1;
- (void)_updateStartAndEndDatesAndDumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned long long)arg5 value:(long long)arg6;
- (void)_updateCurrentDateAndDumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned long long)arg5 value:(long long)arg6;
- (void)_updateDateComponents:(id)arg1 withValueValue:(long long)arg2 forCalendarUnit:(unsigned long long)arg3;
- (void)_dumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4;
- (void)configureForFormatPreset:(unsigned long long)arg1;
- (void)_significantTimeChange:(id)arg1;
- (void)_localeChanged:(id)arg1;
- (void)_postChangeNotification;
@property(nonatomic) _Bool autoUpdateOnChanges;
- (id)formattedDate:(id)arg1;
- (id)formattedDateRangeWithStartDate:(id)arg1 endDate:(id)arg2;
- (id)formattedDateRangeWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3;
- (_Bool)_date:(id)arg1 isWithinDaysInThePast:(long long)arg2;
- (_Bool)_date:(id)arg1 isWithinDaysInThePast:(long long)arg2 fromCurrentDate:(id)arg3;
- (void)updateFormatsWithLocale:(id)arg1;
- (id)_formattedDateWithUDateFormatter:(struct UDateIntervalFormat *)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (void)_releaseUDateFormatter:(struct UDateIntervalFormat *)arg1;
- (struct UDateIntervalFormat *)_newUDateFormatterForLocale:(id)arg1 template:(id)arg2;
- (void)dealloc;
- (id)init;

@end

