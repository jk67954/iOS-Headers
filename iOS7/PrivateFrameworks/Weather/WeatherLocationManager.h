/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "CLLocationManagerDelegate-Protocol.h"

@class CLLocationManager, NSDate, NSTimer;

@interface WeatherLocationManager : NSObject <CLLocationManagerDelegate>
{
    NSTimer *_automaticLocationUpdateTimer;
    NSTimer *_accuracyFallbackTimer;
    int _authorizationStatus;
    _Bool _authorizationStatusSet;
    double _oldestAcceptedTime;
    double _lastLocationUpdateTime;
    double _nextPlannedUpdate;
    _Bool _activelyTrackingLocation;
    _Bool _locationTrackingIsReady;
    float _lastLocationAccuracy;
    CLLocationManager *_locationManager;
    NSDate *_lastLocationTimeStamp;
    id <CLLocationManagerDelegate> _delegate;
    CDStruct_2c43369c _lastLocationCoord;
}

+ (void)clearSharedLocationManager;
+ (id)sharedWeatherLocationManager;
@property(nonatomic) int authorizationStatus; // @synthesize authorizationStatus=_authorizationStatus;
@property(nonatomic) _Bool activelyTrackingLocation; // @synthesize activelyTrackingLocation=_activelyTrackingLocation;
@property(nonatomic) _Bool locationTrackingIsReady; // @synthesize locationTrackingIsReady=_locationTrackingIsReady;
@property(nonatomic) id <CLLocationManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) CDStruct_2c43369c lastLocationCoord; // @synthesize lastLocationCoord=_lastLocationCoord;
@property(nonatomic) float lastLocationAccuracy; // @synthesize lastLocationAccuracy=_lastLocationAccuracy;
@property(copy, nonatomic) NSDate *lastLocationTimeStamp; // @synthesize lastLocationTimeStamp=_lastLocationTimeStamp;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (id)location;
- (double)_lastLocationUpdateTime;
- (double)_nextPlannedUpdate;
- (void)updateLocation:(id)arg1;
- (void)_cleanupLocationTimer;
- (void)_cleanupAccuracyFallbackTimer;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (_Bool)isLocalStaleOrOutOfDate;
- (void)_updateLocation:(id)arg1;
- (_Bool)localWeatherAuthorized;
- (int)forceLoadingAuthorizationStatus;
- (void)setLocationTrackingActive:(_Bool)arg1;
- (void)clearLocalWeatherUpdateState;
- (void)_setUpLocationTimerWithInterval:(float)arg1;
- (_Bool)loadAndPrepareLocationTrackingState;
- (void)setLocationTrackingReady:(_Bool)arg1 activelyTracking:(_Bool)arg2;
- (void)_setAuthorizationStatus:(int)arg1;
- (void)forceLocationUpdate;
- (void)_clearLastLocUpdateTime;
- (void)dealloc;

@end

