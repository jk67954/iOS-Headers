/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "DuetLoggerProtocol-Protocol.h"
#import "DuetSaveAndRestore-Protocol.h"

@class AppLaunchStatsSaveAndRestore, NSDate, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>;

@interface AppLaunchStatsState : NSObject <DuetLoggerProtocol, DuetSaveAndRestore>
{
    _Bool isDeviceInCall;
    _Bool isDeviceUnderThermalPressure;
    _Bool isDeviceInGoodCellularCondition;
    _Bool isDataResourceAvailable;
    _Bool isFetchPowerResourceAvailable;
    _Bool isFetchPushPowerResourceAvailable;
    _Bool doUniformBudget;
    _Bool isWIFIConnected;
    _Bool isBatteryChargerConnected;
    NSObject<OS_dispatch_queue> *stateQueue;
    long long globalDataBudgetCap;
    long long globalPowerBudgetCap;
    long long BGDataBudgetCap;
    AppLaunchStatsSaveAndRestore *saveAndRestoreContext;
    NSDate *startTimeStamp;
    NSDate *startTimeStampOOB;
    NSMutableDictionary *appsAliveInLSTDict;
    NSMutableArray *fireDates;
    NSMutableArray *cacheAppsforFullDebug;
    NSMutableArray *dailyLaunchArrays;
    NSMutableArray *recentLaunchArrays;
    NSMutableArray *weeklyLaunchArrays;
    NSMutableArray *appForecastArray;
    NSMutableArray *dataForecastArray;
    unsigned long long appForecastQuality;
    unsigned long long dataForecastQuality;
    NSMutableArray *powerFetchForecastArray;
    NSMutableArray *powerPushForecastArray;
    NSMutableArray *dailyAppForecastSlots;
    NSMutableArray *dailyDataBudgetSlots;
    NSMutableArray *dailyDataBGBudgetSlots;
    NSMutableArray *dailyDataNDISCBudgetSlots;
    NSMutableArray *dailyPowerFetchBudgetSlots;
    NSMutableArray *dailyPowerPushBudgetSlots;
    NSMutableArray *dailyPowerNDISCBudgetSlots;
    long long endofdayDataBudget;
    long long endofdayBGDataBudget;
    long long endofdayNDISCDataBudget;
    _Bool _enableLiveListCheck;
    _Bool _enableBlackListCheck;
    _Bool _enableOpportunisticFetchCheck;
    _Bool _enableForeGroundAppCheck;
    _Bool _enableBudgetCheck;
    float _globalNonactivePWPC;
    float _globalFetchPWPC;
    float _globalPushPWPC;
    float _dataWifiMultiplier;
    float _dataCellMultiplier;
    long long globalDataCarryCap;
    long long BGDataCarryCap;
    long long _globalMinSlotData;
    long long _BGMinSlotData;
    long long _globalTimeThreshold;
}

@property(readonly, nonatomic) _Bool enableBudgetCheck; // @synthesize enableBudgetCheck=_enableBudgetCheck;
@property(readonly, nonatomic) _Bool enableForeGroundAppCheck; // @synthesize enableForeGroundAppCheck=_enableForeGroundAppCheck;
@property(readonly, nonatomic) _Bool enableOpportunisticFetchCheck; // @synthesize enableOpportunisticFetchCheck=_enableOpportunisticFetchCheck;
@property(nonatomic) _Bool enableBlackListCheck; // @synthesize enableBlackListCheck=_enableBlackListCheck;
@property(readonly, nonatomic) _Bool enableLiveListCheck; // @synthesize enableLiveListCheck=_enableLiveListCheck;
@property(readonly, nonatomic) float dataCellMultiplier; // @synthesize dataCellMultiplier=_dataCellMultiplier;
@property(readonly, nonatomic) float dataWifiMultiplier; // @synthesize dataWifiMultiplier=_dataWifiMultiplier;
@property(readonly, nonatomic) float globalPushPWPC; // @synthesize globalPushPWPC=_globalPushPWPC;
@property(readonly, nonatomic) float globalFetchPWPC; // @synthesize globalFetchPWPC=_globalFetchPWPC;
@property(readonly, nonatomic) float globalNonactivePWPC; // @synthesize globalNonactivePWPC=_globalNonactivePWPC;
@property(readonly, nonatomic) long long globalTimeThreshold; // @synthesize globalTimeThreshold=_globalTimeThreshold;
@property(readonly, nonatomic) long long BGMinSlotData; // @synthesize BGMinSlotData=_BGMinSlotData;
@property(readonly, nonatomic) long long globalMinSlotData; // @synthesize globalMinSlotData=_globalMinSlotData;
@property long long endofdayNDISCDataBudget; // @synthesize endofdayNDISCDataBudget;
@property long long endofdayBGDataBudget; // @synthesize endofdayBGDataBudget;
@property long long endofdayDataBudget; // @synthesize endofdayDataBudget;
@property(readonly, nonatomic) long long BGDataCarryCap; // @synthesize BGDataCarryCap;
@property(readonly, nonatomic) long long BGDataBudgetCap; // @synthesize BGDataBudgetCap;
@property(readonly, nonatomic) long long globalDataBudgetCap; // @synthesize globalDataBudgetCap;
@property(readonly, nonatomic) long long globalDataCarryCap; // @synthesize globalDataCarryCap;
@property(retain, nonatomic) NSMutableArray *dailyDataNDISCBudgetSlots; // @synthesize dailyDataNDISCBudgetSlots;
@property(retain, nonatomic) NSMutableArray *dailyPowerNDISCBudgetSlots; // @synthesize dailyPowerNDISCBudgetSlots;
@property(retain, nonatomic) NSMutableArray *dailyPowerPushBudgetSlots; // @synthesize dailyPowerPushBudgetSlots;
@property(retain, nonatomic) NSMutableArray *dailyPowerFetchBudgetSlots; // @synthesize dailyPowerFetchBudgetSlots;
@property(retain, nonatomic) NSMutableArray *dailyDataBGBudgetSlots; // @synthesize dailyDataBGBudgetSlots;
@property(retain, nonatomic) NSMutableArray *dailyDataBudgetSlots; // @synthesize dailyDataBudgetSlots;
@property(retain, nonatomic) NSMutableArray *dailyAppForecastSlots; // @synthesize dailyAppForecastSlots;
@property(retain, nonatomic) NSMutableArray *powerPushForecastArray; // @synthesize powerPushForecastArray;
@property(retain, nonatomic) NSMutableArray *powerFetchForecastArray; // @synthesize powerFetchForecastArray;
@property(nonatomic) unsigned long long dataForecastQuality; // @synthesize dataForecastQuality;
@property(nonatomic) unsigned long long appForecastQuality; // @synthesize appForecastQuality;
@property(retain, nonatomic) NSMutableArray *dataForecastArray; // @synthesize dataForecastArray;
@property(retain, nonatomic) NSMutableArray *appForecastArray; // @synthesize appForecastArray;
@property(retain, nonatomic) NSMutableArray *weeklyLaunchArrays; // @synthesize weeklyLaunchArrays;
@property(retain, nonatomic) NSMutableArray *recentLaunchArrays; // @synthesize recentLaunchArrays;
@property(retain, nonatomic) NSMutableArray *dailyLaunchArrays; // @synthesize dailyLaunchArrays;
@property(readonly, nonatomic) NSMutableArray *cacheAppsforFullDebug; // @synthesize cacheAppsforFullDebug;
@property(retain) NSMutableArray *fireDates; // @synthesize fireDates;
@property(retain) NSMutableDictionary *appsAliveInLSTDict; // @synthesize appsAliveInLSTDict;
@property _Bool isBatteryChargerConnected; // @synthesize isBatteryChargerConnected;
@property(readonly) _Bool isWIFIConnected; // @synthesize isWIFIConnected;
@property _Bool doUniformBudget; // @synthesize doUniformBudget;
@property _Bool isFetchPushPowerResourceAvailable; // @synthesize isFetchPushPowerResourceAvailable;
@property _Bool isFetchPowerResourceAvailable; // @synthesize isFetchPowerResourceAvailable;
@property _Bool isDataResourceAvailable; // @synthesize isDataResourceAvailable;
@property(readonly) _Bool isDeviceInGoodCellularCondition; // @synthesize isDeviceInGoodCellularCondition;
@property _Bool isDeviceUnderThermalPressure; // @synthesize isDeviceUnderThermalPressure;
@property _Bool isDeviceInCall; // @synthesize isDeviceInCall;
- (void).cxx_destruct;
- (void)logLight:(struct __aslclient *)arg1 withMsg:(struct __aslmsg *)arg2 withLevel:(int)arg3;
- (void)logAll:(struct __aslclient *)arg1 withMsg:(struct __aslmsg *)arg2 withLevel:(int)arg3;
- (void)saveContext:(id)arg1;
- (void)save:(id)arg1;
- (void)restore:(id)arg1;
- (id)popFirstSlotInDailyBudgetQueue:(id)arg1;
- (_Bool)isChargeOnWifiOn;
- (_Bool)hasResourcesAvailable:(_Bool)arg1 forTriggerType:(int)arg2;
- (int)addToOutOfBandAppList:(long long)arg1 withCacheDict:(id)arg2 withAppList:(id)arg3;
- (id)getOutOfBandAppList;
- (_Bool)isOutOfBand;
- (void)updateAppsAliveInLSTList:(id)arg1;
- (void)resetAppsAliveInLSTList;
- (_Bool)getAppsAliveInLSTList:(id)arg1;
- (void)addPredictedSlotsToDailyPowerBudgetQueue:(id)arg1 forcastquality:(long long)arg2 batteryCapacity:(id)arg3;
- (void)convertPCdistributionToInt:(id)arg1 fetchOver:(float)arg2 array:(id)arg3 dailyInt:(int)arg4;
- (void)addPredictedSlotsToDailyDataBudgetQueue:(id)arg1 forcastquality:(long long)arg2;
- (long long)calculateSlotMinDataBudget:(const char *)arg1;
- (long long)calculateDailyDataBudgetFor:(const char *)arg1;
- (void)addPredictedSlotsToDailyAppForecastQueue:(id)arg1;
- (void)addPredictedSlotsToDailyOutOfBandQueue:(id)arg1;
- (int)reloadConfiguration;
- (id)init;

@end

