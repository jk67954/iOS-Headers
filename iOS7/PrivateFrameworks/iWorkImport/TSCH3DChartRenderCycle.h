/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class CALayer<TSCH3DGLLayer>, TSCH3DChartRenderPresenter, TSCH3DGLFramebuffer, TSCH3DSceneRenderPipeline;

// Not exported
@interface TSCH3DChartRenderCycle : NSObject
{
    _Bool mHasFramebuffer;
    TSCH3DSceneRenderPipeline *mPipeline;
    TSCH3DChartRenderPresenter *mPresenter;
    TSCH3DChartRenderPresenter *mRenderPresenterToRestore;
}

+ (id)renderCycleWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;
@property(readonly, nonatomic) _Bool hasFramebuffer; // @synthesize hasFramebuffer=mHasFramebuffer;
@property(readonly, nonatomic) TSCH3DChartRenderPresenter *presenter; // @synthesize presenter=mPresenter;
@property(readonly, nonatomic) TSCH3DSceneRenderPipeline *pipeline; // @synthesize pipeline=mPipeline;
- (void)setLayerVisibleBounds:(struct CGRect)arg1;
- (Class)layerCacheLogicClass;
- (Class)layerClass;
- (_Bool)shouldRenderLegendIntoSeparateLayer;
- (void)restoreDefaultRenderPresenter;
- (void)switchToRenderPresenter:(id)arg1;
- (void)endInteractiveMode;
- (void)beginInteractiveModeWithMinimumBufferSize:(struct CGSize)arg1;
- (_Bool)runPipeline:(id)arg1;
- (void)setupOptionalTextureSizeHintUsingCanvasChartBodyBoundsWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (_Bool)allocateLayerBasedFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (_Bool)setupLayerFromLayerProvider:(id)arg1 canvas:(id)arg2 visible:(struct CGRect)arg3 pixelAlignmentLayer:(id)arg4;
- (void)cleanupRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)presentRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (_Bool)shouldDiscardRenderbuffers;
- (void)layoutWithBoundsSpaces:(const struct ChartProjectedBoundsSpaces *)arg1 scale:(float)arg2;
- (void)destroyFramebuffer;
- (_Bool)usesMultipassRendering;
- (unsigned long long)multisamples;
- (void)p_setRenderPresenter:(id)arg1;
@property(readonly, nonatomic) TSCH3DGLFramebuffer *framebuffer;
- (id)setup;
@property(readonly, nonatomic) CALayer<TSCH3DGLLayer> *layer;
- (void)copyFromChartRenderCycle:(id)arg1;
- (void)dealloc;
- (id)initWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;

@end

