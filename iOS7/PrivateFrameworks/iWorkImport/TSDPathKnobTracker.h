/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <iWorkImport/TSDKnobTracker.h>

#import "TSDDecorator-Protocol.h"

@class TSDEditableBezierPathSourceMorphInfo;

// Not exported
@interface TSDPathKnobTracker : TSDKnobTracker <TSDDecorator>
{
    int mInitialReflectState;
    int mPrevInitialReflectState;
    _Bool mConstrain;
    _Bool mToggleMirrored;
    _Bool mToggleMirrorMagnitude;
    _Bool mToggleNodeType;
    _Bool mIsCreatingNode;
    _Bool mCreateBezierNode;
    _Bool mDidOpenGroup;
    TSDEditableBezierPathSourceMorphInfo *mMorphInfo;
    int mNodeOriginalType;
    int mPrevNodeOriginalType;
    int mNextNodeOriginalType;
    struct CGPoint mOriginalUnscaledKnobPosition;
}

@property(nonatomic) _Bool didOpenGroup; // @synthesize didOpenGroup=mDidOpenGroup;
@property(nonatomic) _Bool createBezierNode; // @synthesize createBezierNode=mCreateBezierNode;
@property(nonatomic) _Bool isCreatingNode; // @synthesize isCreatingNode=mIsCreatingNode;
@property(nonatomic) _Bool toggleNodeType; // @synthesize toggleNodeType=mToggleNodeType;
@property(nonatomic) _Bool toggleMirrorMagnitude; // @synthesize toggleMirrorMagnitude=mToggleMirrorMagnitude;
@property(nonatomic) _Bool toggleMirrored; // @synthesize toggleMirrored=mToggleMirrored;
@property(nonatomic) _Bool constrain; // @synthesize constrain=mConstrain;
@property(readonly, nonatomic) int initialReflectState; // @synthesize initialReflectState=mInitialReflectState;
- (id).cxx_construct;
- (void)endMovingKnob;
- (void)moveKnobToRepPosition:(struct CGPoint)arg1;
- (void)moveSmoothControlKnob:(id)arg1 to:(struct CGPoint)arg2;
- (int)reflectionStateForBendingNodeType:(int)arg1 originalReflectionState:(int)arg2;
- (void)beginMovingKnob;
- (void)updateKnobs;
- (_Bool)shouldHideOtherKnobs;
- (id)decoratorOverlayLayers;
- (id)pathKnob;
- (id)pathRep;
- (id)editablePathSource;
- (void)startWithNodeCreationBlock:(id)arg1;
- (double)delay;
@property(readonly, nonatomic) _Bool createdNode;
- (id)initWithRep:(id)arg1 creatingKnobAtPoint:(struct CGPoint)arg2 initialPoint:(_Bool)arg3 reversed:(_Bool)arg4;
- (id)initWithRep:(id)arg1 knob:(id)arg2;

@end

