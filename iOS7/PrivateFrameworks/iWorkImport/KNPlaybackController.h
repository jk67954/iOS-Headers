/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class CALayer, KNAnimatedSlideView, KNMovieRenderer, KNPlaybackAudioController, KNPlaybackSession, KNShow, KNSlideNode, NSArray, NSIndexSet, NSObject<KNPlaybackConcealer>, NSSet;

// Not exported
@interface KNPlaybackController : NSObject
{
    KNShow *mShow;
    id <TSDCanvasDelegate> mCanvasDelegate;
    id <KNPlaybackControllerDelegate> mDelegate;
    int mPlayMode;
    KNPlaybackSession *mSession;
    KNAnimatedSlideView *mAnimator;
    id mEndShowHandler;
    KNPlaybackAudioController *mSoundtrackController;
    NSObject<KNPlaybackConcealer> *mPlaybackConcealer;
    struct CGColorSpace *mPlaybackColorSpace;
    CALayer *mBaseLayer;
    int mPlaybackState;
    _Bool mAllowsShowToEndInternally;
    _Bool mAutomaticallyPlaysSoundtrack;
    _Bool mPlaysAutomaticEvents;
    _Bool mAutomaticallyPlaysMovies;
    _Bool mRenderingSuspended;
    _Bool mIsCurrentEventNonAutomatic;
    _Bool mIsPaused;
    _Bool mIsHyperlinkInProgress;
    KNMovieRenderer *mMovieRendererWithVisibleHUD;
}

+ (id)keyPathsForValuesAffectingMovieRenderers;
+ (id)keyPathsForValuesAffectingPausedConcealingStyle;
@property(nonatomic) struct CGColorSpace *playbackColorSpace; // @synthesize playbackColorSpace=mPlaybackColorSpace;
@property(nonatomic) _Bool playsAutomaticEvents; // @synthesize playsAutomaticEvents=mPlaysAutomaticEvents;
@property(nonatomic) _Bool automaticallyPlaysSoundtrack; // @synthesize automaticallyPlaysSoundtrack=mAutomaticallyPlaysSoundtrack;
@property(nonatomic) _Bool allowsShowToEndInternally; // @synthesize allowsShowToEndInternally=mAllowsShowToEndInternally;
@property(readonly, nonatomic) int playbackState; // @synthesize playbackState=mPlaybackState;
@property(nonatomic) _Bool automaticallyPlaysMovies; // @synthesize automaticallyPlaysMovies=mAutomaticallyPlaysMovies;
@property(retain, nonatomic) NSObject<KNPlaybackConcealer> *playbackConcealer; // @synthesize playbackConcealer=mPlaybackConcealer;
@property(readonly, nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=mIsPaused;
@property(readonly, nonatomic) CALayer *baseLayer; // @synthesize baseLayer=mBaseLayer;
@property(copy, nonatomic) id endShowHandler; // @synthesize endShowHandler=mEndShowHandler;
@property(nonatomic) int playMode; // @synthesize playMode=mPlayMode;
@property(nonatomic) KNMovieRenderer *movieRendererWithVisibleHUD; // @synthesize movieRendererWithVisibleHUD=mMovieRendererWithVisibleHUD;
@property(readonly, nonatomic) id <TSDCanvasDelegate> canvasDelegate; // @synthesize canvasDelegate=mCanvasDelegate;
@property(nonatomic) _Bool isHyperlinkInProgress; // @synthesize isHyperlinkInProgress=mIsHyperlinkInProgress;
@property(nonatomic) id <KNPlaybackControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) KNShow *show; // @synthesize show=mShow;
- (void)p_resetAnimatorAndSetGoToFirstEvent:(_Bool)arg1;
- (void)p_resetAnimatorAtEventIndex:(unsigned long long)arg1;
- (void)p_setAnimator:(id)arg1;
- (id)p_animator;
- (void)p_gotoPreviousAndJumpToFirstEvent:(_Bool)arg1;
- (void)p_movieEnded:(id)arg1;
- (void)p_movieStarted:(id)arg1;
- (void)p_eventEnded:(id)arg1;
- (void)p_eventAnimationBecameActive:(id)arg1;
- (void)p_eventStarted:(id)arg1;
- (id)p_currentBuildChunks;
- (_Bool)p_processHyperlinkURL:(id)arg1;
- (id)p_hyperlinkURLForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;
- (_Bool)processHyperlinkForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;
- (id)p_topLevelRepsForHitTesting;
- (_Bool)isHyperlinkAtPoint:(struct CGPoint)arg1 hitObject:(id *)arg2 hitRep:(id *)arg3 hitInfo:(id *)arg4;
@property(nonatomic) _Bool shouldAnimateTransitionOnLastSlide;
@property(readonly, nonatomic) NSArray *currentlyVisibleInfos;
@property(nonatomic) _Bool shouldAnimateNullTransitions;
- (id)movieRendererAtPoint:(struct CGPoint)arg1;
- (void)applyMovieControl:(long long)arg1;
@property(readonly, nonatomic) NSSet *movieRenderers;
- (void)resumeSoundtrack;
- (void)pauseSoundtrack;
- (void)stopSoundtrack;
- (void)startSoundtrackAtMediaIndex:(unsigned long long)arg1 time:(double)arg2;
- (void)restartPlaybackIfNeeded;
- (void)stopAnimationsAndGotoCompletionOfEvent;
- (void)stopAnimations;
- (void)resumeAnimationsIfPaused;
- (void)pauseAnimationsWithConcealingStyle:(long long)arg1;
- (void)pauseAnimations;
@property(readonly, nonatomic) long long pausedConcealingStyle;
@property(readonly, nonatomic, getter=isNonMovieAnimationActive) _Bool nonMovieAnimationActive;
@property(readonly, nonatomic, getter=isNonMovieAnimationAnimating) _Bool nonMovieAnimationAnimating;
@property(readonly, nonatomic, getter=isAnimating) _Bool animating;
- (void)resumeRendering;
- (void)suspendRendering;
- (void)playAutomaticEvents;
- (void)gotoNextEventWithoutAnimation;
- (void)gotoNextEventIgnoringDelay:(_Bool)arg1;
- (void)gotoNextEvent;
- (void)gotoFirstEvent;
- (void)gotoPreviousEvent;
- (_Bool)gotoLastVisitedSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (_Bool)gotoSlideNode:(id)arg1 toEventIndex:(unsigned long long)arg2 shouldAnimate:(_Bool)arg3 ignoreDelays:(_Bool)arg4;
- (_Bool)gotoLastSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (_Bool)gotoNextSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (_Bool)gotoPreviousSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (_Bool)gotoFirstSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (void)setBreadCrumbTrail:(id)arg1;
- (id)breadCrumbTrail;
@property(readonly, nonatomic) unsigned long long nextEventIndex;
@property(readonly, nonatomic) unsigned long long visibleEventIndex;
@property(readonly, nonatomic) unsigned long long eventCount;
- (id)nextSlideNodeAfterSlideNode:(id)arg1;
@property(readonly, nonatomic) KNSlideNode *nextSlideNode;
@property(readonly, nonatomic) KNSlideNode *currentSlideNode;
@property(readonly, nonatomic, getter=isAtBeginning) _Bool atBeginning;
- (void)resizeShowToFitBaseLayer;
- (void)tearDownShow;
- (void)endShow;
- (void)p_endShowFromAnimator;
- (void)playPreparedShow;
- (void)renderCurrentEvent;
@property(copy, nonatomic) NSIndexSet *buildEventIndexesToAnimate;
@property(nonatomic) unsigned long long currentEventIndex;
@property(readonly, nonatomic) double buildsToAnimateDuration;
- (double)p_defaultViewScaleForBaseLayer:(id)arg1;
- (void)prepareOnLayer:(id)arg1 atSlideNode:(id)arg2 isBaseLayerVisible:(_Bool)arg3;
- (void)prepareOnLayer:(id)arg1 viewScale:(double)arg2 atSlideNode:(id)arg3 isBaseLayerVisible:(_Bool)arg4;
- (void)dealloc;
- (id)init;
- (id)initWithShow:(id)arg1 canvasDelegate:(id)arg2;

@end

