/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "IMAVControllerDelegate-Protocol.h"

@class IMAVChat, NSMutableArray;

@interface CNFConferenceController : NSObject <IMAVControllerDelegate>
{
    _Bool _isConnected;
    long long _type;
    IMAVChat *_activeAVChat;
    NSMutableArray *_avChatList;
}

+ (struct __CFPhoneNumber *)newPhoneNumberRefForDestinationId:(id)arg1 useNetworkCountryCode:(_Bool)arg2;
+ (_Bool)disconnect;
+ (_Bool)connect;
+ (long long)conferenceControllerType;
+ (id)sharedInstance;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) IMAVChat *avChat; // @synthesize avChat=_activeAVChat;
- (id)currentCallConnectedDate;
- (id)currentCallRemoteUserId;
- (void)activateFaceTime;
- (int)activationState;
- (void)faceTimeHistoryChanged:(id)arg1;
- (_Bool)havePreviouslyConferencedWithID:(id)arg1;
- (void)avChatStateChanged:(id)arg1;
- (void)_handleConferenceEnded:(id)arg1 withReason:(unsigned int)arg2 withError:(int)arg3;
- (void)_handleConferenceConnecting:(id)arg1;
- (void)inviteFailedFromIMHandle:(id)arg1 reason:(long long)arg2;
- (void)invitedToIMAVChat:(id)arg1;
- (_Bool)activeFaceTimeAudioCallExists;
- (_Bool)inFaceTime;
- (_Bool)activeFaceTimeCallExists;
- (_Bool)faceTimeInvitationExists;
- (_Bool)_chat:(id)arg1 isCrossInvitationWithChat:(id)arg2;
- (void)endFaceTime;
- (struct CGSize)localCameraAspectRatioForOrientation:(unsigned int)arg1;
@property(readonly, nonatomic) struct CGSize remoteCameraAspectRatio;
@property(readonly, nonatomic) unsigned int remoteCameraOrientation;
@property(readonly, nonatomic) unsigned int remoteCameraType;
@property(readonly, nonatomic) unsigned int localCameraType;
- (void)setFaceTimePaused:(_Bool)arg1;
- (_Bool)faceTimePaused;
- (void)setFaceTimeMuted:(_Bool)arg1;
- (_Bool)faceTimeMuted;
- (void)declineFaceTimeInvitationForChat:(id)arg1;
- (void)acceptFaceTimeInvitationForChat:(id)arg1;
- (id)avChatForConferenceID:(id)arg1;
- (id)sendFaceTimeInvitationTo:(id)arg1 isVideo:(_Bool)arg2;
- (id)sendFaceTimeInvitationTo:(id)arg1;
- (_Bool)canSendFaceTimeInvitationTo:(id)arg1;
- (_Bool)validFaceTimeAccountExistsForDestinationID:(id)arg1;
- (id)remoteParticipant;
- (_Bool)_activeChatExists;
- (void)_handleEndAVChat:(id)arg1 withReason:(unsigned int)arg2 error:(int)arg3;
- (void)_handleAVChatStateChangedToState:(unsigned int)arg1;
- (_Bool)faceTimeIsAvailable;
- (_Bool)isInvitationListener;
@property(readonly, nonatomic) _Bool isFullConferenceCapable; // @dynamic isFullConferenceCapable;
- (void)_cleanUpAfterAVChat;
- (id)_imHandleFromURL:(id)arg1;
- (id)_imHandleFromID:(id)arg1 countryCode:(id)arg2;
- (id)_countryCode;
- (void)setNeedsPushReliability:(_Bool)arg1;
- (void)disconnectFromService;
- (void)iChatAgentDisconnected;
- (void)iChatAgentConnected;
- (void)connectToService;
- (void)dealloc;
- (id)_initWithType:(long long)arg1;
- (id)init;

@end

