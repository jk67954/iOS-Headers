/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "ML3DatabaseConnectionDelegate-Protocol.h"
#import "ML3DatabaseConnectionPoolDelegate-Protocol.h"

@class ML3AccountCacheDatabase, ML3ArtworkUtility, ML3Container, ML3DatabaseConnection, ML3DatabaseConnectionPool, ML3DatabaseMetadata, ML3UbiquitousDatabase, NSArray, NSCountedSet, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, _LibraryNotification;

@interface ML3MusicLibrary : NSObject <ML3DatabaseConnectionDelegate, ML3DatabaseConnectionPoolDelegate>
{
    NSString *_libraryUID;
    NSObject<OS_dispatch_queue> *_atomicityQueue;
    _Bool _reloadForMediaServiceNeeded;
    ML3AccountCacheDatabase *_accountCacheDatabase;
    ML3UbiquitousDatabase *_ubiquitousDatabase;
    ML3DatabaseConnection *_geniusDatabase;
    NSCountedSet *_notifyNamesToIgnore;
    NSMutableArray *_pendingNotifyPostNames;
    NSMutableDictionary *_pendingLocalNotificationsToPost;
    _LibraryNotification *_libraryChangedNotify;
    _LibraryNotification *_nonContentsNotify;
    _LibraryNotification *_invisiblePropertyNotify;
    _LibraryNotification *_displayValuesNotify;
    _LibraryNotification *_syncGenerationNotify;
    _LibraryNotification *_libraryUIDNotify;
    int _systemLanguageChangedToken;
    id _mcSettingsObserver;
    id _loggingObserver;
    int _willDeleteDatabaseNotifyToken;
    ML3ArtworkUtility *_artworkUtility;
    struct iPhoneSortKeyBuilder *_sortKeyBuilder;
    _Bool _isHomeSharingLibraryLoaded;
    _Bool _isHomeSharingLibrary;
    _Bool _hasEverConnectedTo;
    _Bool _keepPresignedValidyAfterVerification;
    _Bool _currentThreadHasWriterConnectionCheckedOut;
    ML3DatabaseConnectionPool *_connectionPool;
    NSString *_databasePath;
    NSArray *_libraryEntityFilterPredicates;
    NSArray *_libraryContainerFilterPredicates;
}

+ (id)localizedSortingDetailsDictionary;
+ (id)localizedSectionDictionary;
+ (id)_purgeableTrackPredicateWithUrgency:(unsigned long long)arg1;
+ (_Bool)updateTrackIntegrityOnConnection:(id)arg1;
+ (void)enumerateSortMapTablesUsingBlock:(id)arg1;
+ (id)sectionIndexTitleForSectionHeader:(id)arg1;
+ (id)sectionIndexTitles;
+ (id)localizedSectionIndexTitleForSectionHeader:(id)arg1;
+ (id)localizedSectionHeaderForSectionHeader:(id)arg1;
+ (void)initialize;
+ (void)setImportationEnabled:(_Bool)arg1;
+ (_Bool)importationEnabled;
+ (_Bool)processHasDatabaseWritePermissions;
+ (void)disableAutomaticDatabaseValidation;
+ (void)disableSharedLibrary;
+ (id)fallbackGeniusDatabaseFilePath;
+ (id)geniusDatabaseFilePath;
+ (id)sharedLibraryDatabasePath;
+ (id)sharedLibrary;
@property(readonly) _Bool currentThreadHasWriterConnectionCheckedOut; // @synthesize currentThreadHasWriterConnectionCheckedOut=_currentThreadHasWriterConnectionCheckedOut;
@property(retain, nonatomic) NSArray *libraryContainerFilterPredicates; // @synthesize libraryContainerFilterPredicates=_libraryContainerFilterPredicates;
@property(retain, nonatomic) NSArray *libraryEntityFilterPredicates; // @synthesize libraryEntityFilterPredicates=_libraryEntityFilterPredicates;
@property(retain) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(retain) ML3ArtworkUtility *artworkUtility; // @synthesize artworkUtility=_artworkUtility;
@property(retain) ML3DatabaseConnectionPool *connectionPool; // @synthesize connectionPool=_connectionPool;
@property(nonatomic) _Bool keepPresignedValidyAfterVerification; // @synthesize keepPresignedValidyAfterVerification=_keepPresignedValidyAfterVerification;
@property(readonly, nonatomic) _Bool hasEverConnectedToDatabase; // @synthesize hasEverConnectedToDatabase=_hasEverConnectedTo;
- (void).cxx_destruct;
- (void)_delayableNotifyPost:(id)arg1 localNotificationName:(id)arg2;
- (void)_enqueueNotifyPostName:(id)arg1;
- (void)_enqueueLocalNotificationName:(id)arg1 isSourceExternal:(_Bool)arg2;
- (void)_postDisplayValuesChangeNotificationLocalOnly:(_Bool)arg1;
- (void)_postInvisiblePropertyChangeNotificationAndScheduleFlushLocalOnly:(_Bool)arg1;
- (void)_postNonContentsChangeNotificationAndScheduleFlushLocalOnly:(_Bool)arg1;
- (void)_postChangeNotificationAndScheduleFlushLocalOnly:(_Bool)arg1;
- (void)_enumeratePurgeableTracksForUrgency:(unsigned long long)arg1 respectSongMattress:(_Bool)arg2 usingBlock:(id)arg3;
- (void)_teardownMediaLibraryDatabaseConnection:(id)arg1;
- (void)_configureMediaLibraryDatabaseConnection:(id)arg1;
- (_Bool)_canConfigureMediaLibraryDatabaseConnection:(id)arg1;
- (id)_newGeniusDBConnectionAtPath:(id)arg1;
- (void)updateTrackIntegrity;
- (void)deletePresignedValidity;
- (_Bool)verifyPresignedValidity;
- (_Bool)hasPresignedValidity;
- (void)migratePresignedValidity;
- (_Bool)deleteDatabaseProperty:(id)arg1;
- (_Bool)setValue:(id)arg1 forDatabaseProperty:(id)arg2;
- (id)valueForDatabaseProperty:(id)arg1;
- (void)removeOrphanedTracks;
- (void)removeTombstonesForDeletedItems;
- (_Bool)compactArtwork;
- (void)deleteFromArtworkConversionForCacheID:(id)arg1 fromFormatID:(unsigned int)arg2 toFormatID:(unsigned int)arg3;
- (_Bool)deleteArtworkForCacheID:(id)arg1 formatID:(unsigned int)arg2 deleteAllFromConversionTable:(_Bool)arg3;
- (_Bool)deleteArtworkForCacheID:(id)arg1 formatID:(unsigned int)arg2;
- (_Bool)deleteArtworkForCacheID:(id)arg1;
- (_Bool)insertArtworkWithImageData:(id)arg1 forCacheID:(id)arg2 forFormatID:(unsigned int)arg3;
- (_Bool)deleteAllArtwork;
- (_Bool)insertArtworkWithImageData:(id)arg1 artworkCreationDirective:(CDStruct_06d3d77b)arg2 forCacheID:(id)arg3;
- (void)updateArtworkFormatsWithArtworkCreationDirective:(CDStruct_06d3d77b)arg1 forCacheID:(id)arg2;
- (_Bool)writeToDatabaseArtworkForCacheID:(id)arg1 length:(unsigned long long)arg2 formatID:(unsigned int)arg3 imageSubRect:(struct CGRect)arg4;
- (_Bool)hasArtworkForCacheID:(id)arg1 ensureArtworkFileExists:(_Bool)arg2;
- (_Bool)hasArtworkForCacheID:(id)arg1;
- (void)loadArtworkForCacheID:(id)arg1 formatID:(unsigned int)arg2 completionHandler:(id)arg3;
- (id)artworkDataForCacheID:(id)arg1 formatID:(unsigned int)arg2;
- (id)_artworkDataForCacheID:(id)arg1 formatID:(unsigned int)arg2 canCreateIfMissing:(_Bool)arg3;
- (id)_existingArtworkDataForCacheID:(id)arg1 formatID:(unsigned int)arg2;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)arg1 urgency:(unsigned long long)arg2 respectSongMattress:(_Bool)arg3;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)arg1 urgency:(unsigned long long)arg2;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)arg1;
- (long long)autoFilledTracksTotalSizeWithUrgency:(unsigned long long)arg1 respectSongMattress:(_Bool)arg2;
- (long long)autoFilledTracksTotalSizeWithUrgency:(unsigned long long)arg1;
@property(readonly) long long autoFilledTracksTotalSize;
- (_Bool)persistentID:(long long)arg1 changedAfterRevision:(long long)arg2 revisionTrackingCode:(long long)arg3;
- (void)getChangedPersistentIDsAfterRevision:(long long)arg1 revisionTrackingCode:(long long)arg2 usingBlock:(id)arg3;
- (void)enumeratePersistentIDsAfterRevision:(long long)arg1 usingBlock:(id)arg2;
- (void)enumeratePersistentIDsAfterRevision:(long long)arg1 revisionTrackingCode:(unsigned long long)arg2 usingBlock:(id)arg3;
- (_Bool)updateSortMap;
- (long long)addStringToSortMap:(id)arg1;
- (_Bool)requiresNonSchemaUpdatesOnConnection:(id)arg1;
- (_Bool)requiresSchemaOnlyUpdatesOnConnection:(id)arg1;
- (void)savePlaylistsSinceRevision:(long long)arg1 withGrappaID:(unsigned int)arg2;
- (void)savePlaylists;
- (void)saveTrackMetadataSinceRevision:(long long)arg1 withGrappaID:(unsigned int)arg2;
- (void)saveTrackMetadata;
- (void)notifyDisplayValuesPropertyDidChange;
- (void)notifyInvisiblePropertyDidChange;
- (void)notifyNonContentsPropertyDidChange;
- (void)notifyContentsDidChange;
- (unsigned long long)sectionIndexTitleIndexForSectionIndex:(unsigned long long)arg1;
- (id)localizedSectionHeaderForSectionIndex:(unsigned long long)arg1;
- (id)groupingKeysForStrings:(id)arg1;
- (id)groupingKeyForString:(id)arg1;
- (void)accessSortKeyBuilder:(id)arg1;
- (_Bool)populateStaticItemsOfDynamicContainers;
- (id)geniusDatabase;
- (id)ubiquitousDatabase;
- (id)accountCacheDatabase;
- (_Bool)emptyAllTables;
- (_Bool)validateDatabaseWithTimeout:(double)arg1;
- (_Bool)automaticDatabaseValidationDisabled;
- (_Bool)isCurrentThreadInTransaction;
- (void)performReadOnlyDatabaseTransactionWithBlock:(id)arg1;
- (void)performDatabaseTransactionWithBlock:(id)arg1;
- (void)databaseConnectionAllowingWrites:(_Bool)arg1 withBlock:(id)arg2;
- (void)checkInDatabaseConnection:(id)arg1;
- (id)checkoutWriterConnection;
- (id)checkoutReaderConnection;
- (void)reconnectToDatabase;
- (void)connectionPool:(id)arg1 createdNewConnection:(id)arg2;
- (void)connectionWillCloseDatabase:(id)arg1;
- (void)connectionDidOpenDatabase:(id)arg1;
- (void)connectionWillOpenDatabase:(id)arg1;
@property(readonly) _Bool mediaRestrictionEnabled;
@property(readonly) NSArray *preferredSubtitleTracks;
@property(readonly) NSArray *preferredAudioTracks;
@property(readonly) NSArray *localizedSectionIndexTitles;
@property(readonly) ML3DatabaseMetadata *databaseInfo;
@property(readonly) ML3Container *currentDevicePurchasesPlaylist;
@property(copy) NSString *libraryUID;
@property long long syncGenerationID;
@property(readonly) long long currentContentRevision;
@property(readonly) long long currentRevision;
@property(readonly) long long persistentID;
@property(nonatomic) _Bool isHomeSharingLibrary;
- (void)dealloc;
- (id)initWithPath:(id)arg1 readOnly:(_Bool)arg2 populateUnitTestTablesBlock:(id)arg3;
- (id)initWithPath:(id)arg1;

@end

