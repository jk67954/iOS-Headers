/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "MLMediaLibraryServiceClientProtocol-Protocol.h"
#import "MLMediaLibraryServiceProtocol-Protocol.h"

@class NSMutableDictionary, NSObject<OS_dispatch_queue>, NSXPCConnection;

@interface MLMediaLibraryService : NSObject <MLMediaLibraryServiceClientProtocol, MLMediaLibraryServiceProtocol>
{
    NSXPCConnection *_xpcConnection;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_completionQueue;
    id <MLMediaLibraryServiceProtocol> _serviceProxy;
    NSMutableDictionary *_pendingServiceCompletionHandlers;
    _Bool _processRequestsInApp;
    _Bool _connectionOpen;
}

+ (void)_setDaemonProcessInfo:(id)arg1;
+ (id)sharedMediaLibraryService;
@property(readonly, nonatomic) _Bool connectionOpen; // @synthesize connectionOpen=_connectionOpen;
- (void).cxx_destruct;
- (void)__enqueueClientCompletionHandler:(id)arg1 forInterfaceMessage:(SEL)arg2 withBlockFacade:(id)arg3;
- (void)_enqueueClientCompletionHandler:(id)arg1 forInterfaceMessage:(SEL)arg2 withBlockFacade:(id)arg3;
- (void)_onQueueInvalidatePendingCompletionHandlersWithError:(id)arg1;
- (void)_onQueueCloseServiceConnection;
- (void)_invalidatePendingCompletionHandlersWithError:(id)arg1;
- (id)_retrieveCompletionHandlerForToken:(struct NSNumber *)arg1;
- (struct NSNumber *)_addPendingCompletionHandler:(id)arg1;
- (id)serviceProxy;
- (void)closeServiceConnection;
- (void)openServiceConnection;
- (void)validateDatabaseForLibrary:(id)arg1 withCompletionHandler:(id)arg2;
- (oneway void)serviceWillTerminateTransactionWithIdentifier:(id)arg1 replyBlock:(id)arg2;
- (oneway void)serviceTerminatedTransactionWithIdentifier:(id)arg1 error:(id)arg2;
- (oneway void)pollCurrentImportStatus:(id)arg1;
- (oneway void)performImportFromSource:(unsigned long long)arg1 intoDatabaseAtPath:(id)arg2 withTrackData:(id)arg3 options:(id)arg4 completionHandler:(id)arg5;
- (oneway void)setOptions:(id)arg1 withCompletionHandler:(id)arg2;
- (oneway void)executeTemplatedDatabaseOperation:(unsigned long long)arg1 withAttributes:(id)arg2 options:(id)arg3 completionHandler:(id)arg4;
- (oneway void)endTransaction:(id)arg1 shouldCommit:(_Bool)arg2 withCompletionHandler:(id)arg3;
- (oneway void)executeQuery:(id)arg1 withParameters:(id)arg2 options:(id)arg3 onTransaction:(id)arg4 withCompletionHandler:(id)arg5;
- (oneway void)executeUpdate:(id)arg1 withParameters:(id)arg2 onTransaction:(id)arg3 withCompletionHandler:(id)arg4;
- (oneway void)beginTransactionForDatabaseAtPath:(id)arg1 withPriorityLevel:(unsigned long long)arg2 withCompletionHandler:(id)arg3;
- (oneway void)recreateDatabaseAtPath:(id)arg1 withCompletionHandler:(id)arg2;
- (oneway void)validateDatabaseAtPath:(id)arg1 withCompletionHandler:(id)arg2;
- (void)dealloc;
- (id)init;

@end

