/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "AVCaptureFileOutputRecordingDelegate-Protocol.h"
#import "AVCaptureMetadataOutputObjectsDelegate-Protocol.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"
#import "PLCameraEffectsRendererDelegate-Protocol.h"
#import "SBSAccelerometerDelegate-Protocol.h"

@class AVCaptureDevice, AVCaptureDeviceFormat, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCaptureMovieFileOutput, AVCaptureOutput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, NSArray, NSDictionary, NSMutableArray, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, NSTimer, PLCameraEffectsRenderer, SBSAccelerometer;

@interface PLCameraController : NSObject <AVCaptureMetadataOutputObjectsDelegate, PLCameraEffectsRendererDelegate, SBSAccelerometerDelegate, AVCaptureFileOutputRecordingDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
{
    AVCaptureSession *_avCaptureSession;
    AVCaptureDevice *_avCaptureDeviceFront;
    AVCaptureDevice *_avCaptureDeviceBack;
    AVCaptureDevice *_avCaptureDeviceAudio;
    AVCaptureDeviceInput *_avCaptureInputFront;
    AVCaptureDeviceInput *_avCaptureInputBack;
    AVCaptureDeviceInput *_avCaptureInputAudio;
    AVCaptureStillImageOutput *_avCaptureOutputPhoto;
    AVCaptureMovieFileOutput *_avCaptureOutputVideo;
    AVCaptureVideoDataOutput *_avCaptureOutputPanorama;
    AVCaptureVideoDataOutput *_avCaptureOutputEffectPreview;
    AVCaptureMetadataOutput *_avCaptureOutputMetadata;
    AVCaptureDeviceFormat *_mogulFormatBack;
    AVCaptureDeviceFormat *_mogulFormatFront;
    struct OpaqueFigSampleBufferProcessor *_panoramaProcessor;
    struct _CAImageQueue *_panoramaImageQueue;
    struct CGSize _panoramaPreviewSize;
    float _panoramaPreviewScale;
    NSObject<OS_dispatch_queue> *_avCaptureSessionDispatchQueue;
    NSObject<OS_dispatch_queue> *_avCaptureOutputMetadataQueue;
    AVCaptureDevice *_currentDevice;
    AVCaptureDeviceInput *_currentInput;
    AVCaptureOutput *_currentOutput;
    AVCaptureVideoPreviewLayer *_previewLayer;
    struct CGRect _cleanAperture;
    _Bool _shouldBeStopped;
    long long _cameraMode;
    long long _cameraDevice;
    long long _flashMode;
    int _captureOrientation;
    _Bool _imageWriterQueueIsAvailable;
    unsigned long long _ioSurfaceCounter;
    _Bool _hdrEnabled;
    _Bool _hdrCaptureIncludesEV0Image;
    int _hdrEV0PhotoCaptureCount;
    id <PLCameraControllerDelegate> _delegate;
    double _maximumCaptureDuration;
    int _videoCaptureQuality;
    NSString *_videoCapturePath;
    SBSAccelerometer *_accelerometer;
    struct CGImage *_lastVideoPreviewFrameImageRef;
    _Bool _lockFocusLock;
    _Bool _lockFocusAfterFocusFinishes;
    _Bool _isFocusingOnFace;
    long long _cameraOrientation;
    NSTimer *_idleTimerTimer;
    _Bool _delaySuspend;
    NSTimer *_delaySuspendTimer;
    double _maxVideoZoomFactorRear;
    double _maxVideoZoomFactorFront;
    struct {
        unsigned int supportsVideo:1;
        unsigned int supportsFocus:1;
        unsigned int supportsExposure:1;
        unsigned int supportsHDRRear:1;
        unsigned int supportsHDRFront:1;
        unsigned int supportsAvalancheRear:1;
        unsigned int supportsAvalancheFront:1;
        unsigned int supportsMogulRear:1;
        unsigned int supportsMogulFront:1;
        unsigned int supportsLiveEffects:1;
        unsigned int supportsPanorama:1;
        unsigned int supportsVideoStillCapture:1;
        unsigned int supportsPreviewDuringHDR:1;
        unsigned int hasFlash:1;
        unsigned int hasBackCamera:1;
        unsigned int hasFrontCamera:1;
        unsigned int deferStartVideoCapture:1;
        unsigned int inCall:1;
        unsigned int isCapturingPanorama:1;
        unsigned int isProcessingPanorama:1;
        unsigned int focusDisabled:1;
        unsigned int focusWasModified:1;
        unsigned int serverDied:1;
        unsigned int didGetDeviceUnavailableInBackground:1;
        unsigned int didSetLocationData:1;
        unsigned int isChangingMode:1;
        unsigned int flashWillFireAutomatically:1;
        unsigned int isCameraApp:1;
        unsigned int didSendPreviewStartedCallbackToEmptyDelegate:1;
        unsigned int didGetPreviewStartedCallbackAfterResume:1;
        unsigned int logFocusInfo:1;
        unsigned int logPreviewInfo:1;
        unsigned int logCaptureInfo:1;
        unsigned int logFlashInfo:1;
        unsigned int logDebugInfo:1;
        unsigned int logPanoInfo:1;
        unsigned int enable720p60Recording:1;
        unsigned int pptTestDisableAutofocus:1;
        unsigned int isInternalInstall:1;
        unsigned int shouldTearDownPano:1;
        unsigned int convertSampleBufferToJPEG:1;
        unsigned int delegateDidStartSession:1;
        unsigned int delegateWillStartPreview:1;
        unsigned int delegatePreviewDidStart:1;
        unsigned int delegateSessionDidStart:1;
        unsigned int delegateDidStopSession:1;
        unsigned int delegateWillStopSession:1;
        unsigned int delegateSessionDidStop:1;
        unsigned int delegateSessionWasInterrupted:1;
        unsigned int delegateSessionInterruptionEnded:1;
        unsigned int delegateServerDied:1;
        unsigned int delegateCleanApertureDidChange:1;
        unsigned int delegateModeWillChange:1;
        unsigned int delegateModeDidChange:1;
        unsigned int delegateWillTakePhoto:1;
        unsigned int delegateDidTakePhoto:1;
        unsigned int delegateCapturedPhoto:1;
        unsigned int delegateDidChangeCaptureAbility:1;
        unsigned int delegateDidChangePanoramaConfiguration:1;
        unsigned int delegateDidUpdatePanoramaPreview:1;
        unsigned int delegateDidReceivePanoramaIssue:1;
        unsigned int delegateDidStartPanoramaCapture:1;
        unsigned int delegateWillStopPanoramaCapture:1;
        unsigned int delegatePanoramaWillStartProcessing:1;
        unsigned int delegatePanoramaDidStopProcessing:1;
        unsigned int delegateCapturedPanorama:1;
        unsigned int delegateVideoCaptureDidStart:1;
        unsigned int delegateDidStopVideoCapture:1;
        unsigned int delegateVideoCaptureDidStop:1;
        unsigned int delegateWillStartAutofocus:1;
        unsigned int delegateFocusDidStart:1;
        unsigned int delegateFocusDidEnd:1;
        unsigned int delegateFaceMetadataDidChange:1;
        unsigned int delegateVideoZoomFactorDidChange:1;
        unsigned int delegateTorchAvailabilityChanged:1;
        unsigned int delegateHDRSuggestionChanged:1;
    } _cameraFlags;
    NSObject<OS_dispatch_queue> *_dispatchTimerQueue;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    _Bool __previewPaused;
    _Bool __previewLayerEnabledForRenderer;
    _Bool __videoDataOutputEnabledForRenderer;
    _Bool _performingTimedCapture;
    _Bool _disableAllPreviewSuspensionDuringCapture;
    _Bool __atomicEffectsAvailable;
    _Bool __configuringCamera;
    _Bool __atomicModeChangeWaitingForPreviewStarted;
    _Bool __atomicModeChangeWaitingForConfigureSession;
    _Bool __wasStillImageStabilzationOnBeforeTimedCapture;
    id postSessionSetupBlock;
    PLCameraEffectsRenderer *_effectsRenderer;
    NSArray *_supportedCameraModes;
    NSObject<OS_dispatch_queue> *__effectFilterIndexQueue;
    NSDictionary *__effectFilterIndices;
    NSObject<OS_dispatch_queue> *__captureIsolationQueue;
    NSMutableArray *__currentFaceMetadata;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSMutableArray *_currentFaceMetadata; // @synthesize _currentFaceMetadata=__currentFaceMetadata;
@property(readonly, nonatomic) _Bool _wasStillImageStabilzationOnBeforeTimedCapture; // @synthesize _wasStillImageStabilzationOnBeforeTimedCapture=__wasStillImageStabilzationOnBeforeTimedCapture;
@property(getter=_isAtomicModeChangeWaitingForConfigureSession, setter=_setAtomicModeChangeWaitingForConfigureSession:) _Bool _atomicModeChangeWaitingForConfigureSession; // @synthesize _atomicModeChangeWaitingForConfigureSession=__atomicModeChangeWaitingForConfigureSession;
@property(getter=_isAtomicModeChangeWaitingForPreviewStarted, setter=_setAtomicModeChangeWaitingForPreviewStarted:) _Bool _atomicModeChangeWaitingForPreviewStarted; // @synthesize _atomicModeChangeWaitingForPreviewStarted=__atomicModeChangeWaitingForPreviewStarted;
@property(readonly) NSObject<OS_dispatch_queue> *_captureIsolationQueue; // @synthesize _captureIsolationQueue=__captureIsolationQueue;
@property(getter=_isConfiguringCamera, setter=_setConfiguringCamera:) _Bool _configuringCamera; // @synthesize _configuringCamera=__configuringCamera;
@property(retain, nonatomic, setter=_setEffectFilterIndices:) NSDictionary *_effectFilterIndices; // @synthesize _effectFilterIndices=__effectFilterIndices;
@property(readonly) NSObject<OS_dispatch_queue> *_effectFilterIndexQueue; // @synthesize _effectFilterIndexQueue=__effectFilterIndexQueue;
@property(setter=_setAtomicEffectsAvailable:) _Bool _atomicEffectsAvailable; // @synthesize _atomicEffectsAvailable=__atomicEffectsAvailable;
@property(nonatomic) _Bool disableAllPreviewSuspensionDuringCapture; // @synthesize disableAllPreviewSuspensionDuringCapture=_disableAllPreviewSuspensionDuringCapture;
- (void)_setPerformingTimedCapture:(_Bool)arg1;
@property(nonatomic) _Bool performingTimedCapture; // @synthesize performingTimedCapture=_performingTimedCapture;
- (void)_setSupportedCameraModes:(id)arg1;
@property(copy, nonatomic) NSArray *supportedCameraModes; // @synthesize supportedCameraModes=_supportedCameraModes;
- (void)_setEffectsRenderer:(id)arg1;
@property(retain) PLCameraEffectsRenderer *effectsRenderer; // @synthesize effectsRenderer=_effectsRenderer;
@property(nonatomic) int captureOrientation; // @synthesize captureOrientation=_captureOrientation;
@property(copy, nonatomic) id postSessionSetupBlock; // @synthesize postSessionSetupBlock;
@property(readonly, nonatomic) struct CGRect cleanAperture; // @synthesize cleanAperture=_cleanAperture;
@property(readonly, nonatomic) struct CGSize panoramaPreviewSize; // @synthesize panoramaPreviewSize=_panoramaPreviewSize;
@property(readonly, nonatomic) float panoramaPreviewScale; // @synthesize panoramaPreviewScale=_panoramaPreviewScale;
@property(readonly, nonatomic) AVCaptureVideoPreviewLayer *previewLayer; // @synthesize previewLayer=_previewLayer;
@property(readonly, nonatomic) AVCaptureStillImageOutput *imageOutput; // @synthesize imageOutput=_avCaptureOutputPhoto;
@property(nonatomic) AVCaptureOutput *currentOutput; // @synthesize currentOutput=_currentOutput;
@property(nonatomic) AVCaptureDeviceInput *currentInput; // @synthesize currentInput=_currentInput;
@property(nonatomic) AVCaptureDevice *currentDevice; // @synthesize currentDevice=_currentDevice;
@property(readonly, nonatomic) AVCaptureSession *currentSession; // @synthesize currentSession=_avCaptureSession;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)cameraEffectsRenderer:(id)arg1 didFinishTransitionToShowGrid:(_Bool)arg2;
- (void)cameraEffectsRenderer:(id)arg1 didStartTransitionToShowGrid:(_Bool)arg2 animated:(_Bool)arg3;
- (void)cameraEffectsRenderer:(id)arg1 willTransitionToShowGrid:(_Bool)arg2;
- (void)cameraEffectsRenderer:(id)arg1 requestsVideoDataOutputEnabled:(_Bool)arg2;
- (void)cameraEffectsRenderer:(id)arg1 requestsPreviewLayerEnabled:(_Bool)arg2;
- (void)cameraEffectsRendererDidStartPreview:(id)arg1;
- (void)_updateEffectsVideoDataOutputEnabled;
@property(nonatomic, setter=_setVideoDataOutputEnabledForRenderer:) _Bool _videoDataOutputEnabledForRenderer; // @synthesize _videoDataOutputEnabledForRenderer=__videoDataOutputEnabledForRenderer;
- (void)_updatePreviewLayerEnabled;
@property(nonatomic, setter=_setPreviewLayerEnabledForRenderer:) _Bool _previewLayerEnabledForRenderer; // @synthesize _previewLayerEnabledForRenderer=__previewLayerEnabledForRenderer;
@property(nonatomic, getter=_isPreviewPaused, setter=_setPreviewPaused:) _Bool _previewPaused; // @synthesize _previewPaused=__previewPaused;
- (void)resumePreview;
- (void)pausePreview;
- (id)recentFaceMetadata;
- (void)finishTimedCapture;
- (void)continueTimedCapture;
- (void)startTimedCapture;
- (id)_mogulFormatFromDevice:(id)arg1;
- (double)mogulFrameRate;
- (double)currentMaxFrameDuration;
- (double)currentMinFrameDuration;
@property(nonatomic, setter=_setEffectsAvailable:) _Bool _effectsAvailable;
- (void)setEffectFilterIndices:(id)arg1 forceStateChange:(_Bool)arg2;
- (id)effectFilterIndices;
- (void)_notifyEffectFilterIndexChanged;
- (void)setEffectFilterIndex:(unsigned long long)arg1 forMode:(long long)arg2;
- (unsigned long long)_sanitizeEffectFilterIndex:(unsigned long long)arg1 forMode:(long long)arg2;
- (unsigned long long)effectFilterIndexForMode:(long long)arg1;
@property(readonly, nonatomic) NSArray *activeFilters;
- (unsigned long long)_activeFilterIndex;
- (void)_updateEffectsRendererFilterIndexForceStateChange:(_Bool)arg1 renderNotifyBlock:(id)arg2;
- (void)_updateEffectsRendererMirroring;
- (void)_updateSupportedCameraModes;
- (void)cancelVideoZoomRamp;
- (void)rampToVideoZoomFactor:(double)arg1 withRate:(float)arg2;
@property(nonatomic) double videoZoomFactor;
- (double)_limitZoomFactor:(double)arg1 forDevice:(id)arg2;
- (void)_setOrientationEventsEnabled:(_Bool)arg1;
@property(readonly, nonatomic) long long cameraOrientation;
- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(int)arg2;
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;
- (void)postOrientationChangedNotification:(long long)arg1 force:(_Bool)arg2;
- (_Bool)supportsLiveEffects;
- (_Bool)supportsAvalancheForDevice:(long long)arg1;
- (void)_synchronizeHDRSettings;
- (_Bool)_isCountingHDREV0Captures;
- (_Bool)supportsPreviewDuringHDR;
- (_Bool)supportsHDRForDevice:(long long)arg1;
@property(readonly, nonatomic) _Bool supportsHDR;
@property(nonatomic, getter=isHDREnabled) _Bool HDREnabled; // @synthesize HDREnabled=_hdrEnabled;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)isTorchDisabled;
- (void)_updateTorchAvailability;
- (_Bool)isTorchOn;
- (_Bool)flashWillFire;
@property(nonatomic) long long flashMode;
- (_Bool)hasFlash;
- (void)_setFlashMode:(long long)arg1 force:(_Bool)arg2;
- (void)_torchLevelChanged;
- (void)_flashStateChanged;
- (void)setFaceDetectionEnabled:(_Bool)arg1;
- (void)_setFaceDetectionEnabled:(_Bool)arg1 forCaptureDevice:(id)arg2 captureOutput:(id)arg3;
- (void)_faceMetadataDidChange:(id)arg1;
- (void)_faceRectangleChanged;
- (struct CGRect)faceRectangle;
- (_Bool)isFocusingOnFace;
- (void)_whiteBalanceCompleted;
- (void)_whiteBalanceStarted;
- (void)_exposureCompleted;
- (_Bool)isExposing;
- (void)_exposureStarted;
- (void)_focusHasChanged:(id)arg1;
- (void)_focusStarted;
- (void)_focusCompleted;
- (void)_lockedFocusOperationFinished;
- (void)_autofocusOperationFinished;
- (void)_focusOperationFinished;
- (void)_commonFocusFinished;
- (void)setFocusDisabled:(_Bool)arg1;
- (_Bool)isFocusing;
- (void)lockFocusForTimedCapture;
- (void)lockFocusForRecording;
- (void)lockFocusAndExposureForPano;
- (void)userInitiatedLockFocus;
- (void)_lockFocus:(_Bool)arg1 lockExposure:(_Bool)arg2 lockWhiteBalance:(_Bool)arg3;
- (_Bool)isExposureLockSupported;
- (_Bool)isFocusLockSupported;
- (_Bool)canLockFocus;
- (void)_cancelDelayedFocusRequests;
- (void)performAutofocusAfterCapture;
- (void)_autofocusAfterCapture;
- (void)autofocus;
- (void)_autofocus:(_Bool)arg1 autoExpose:(_Bool)arg2;
- (void)_pptTestSetAutofocusDisabled:(_Bool)arg1;
- (void)restartAutoFocus;
- (long long)currentFocusMode;
- (void)smoothFocusAtCenter;
- (void)focusAtAdjustedPoint:(struct CGPoint)arg1;
- (_Bool)canFocusAtPoint;
- (_Bool)isFocusAllowed;
- (void)_panoShouldEnd;
- (void)_cleanupPanoramaOnSessionQueue:(_Bool)arg1;
- (void)_setupPanoramaForDevice:(id)arg1 output:(id)arg2 options:(out const struct __CFDictionary **)arg3;
- (void)_panoramaDidReceiveErrorNotificationString:(struct __CFString *)arg1;
- (void)_panoramaDidReceiveWarningNotificationString:(struct __CFString *)arg1;
- (void)_panoramaDidReceiveIssueWithPanoramaString:(struct __CFString *)arg1;
- (void)_panoramaDidReceiveStatusNotificationString:(struct __CFString *)arg1;
- (void)setPanoramaCaptureDirection:(int)arg1;
- (void)captureOutput:(id)arg1 didDropSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)_processSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)panoramaProcessorOutputCallbackWithStatus:(int)arg1 buffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)_panoramaDidStop;
- (void)stopPanoramaCapture;
- (void)startPanoramaCapture;
- (void)setPanoramaImageQueueLayer:(id)arg1;
- (_Bool)isCapturingPanorama;
- (_Bool)canCapturePanorama;
- (_Bool)supportsPanorama;
- (void)setVideoCaptureMaximumDuration:(double)arg1;
- (void)setVideoCaptureQuality:(int)arg1;
- (id)videoCapturePath;
- (void)stopVideoCapture;
- (double)minimumVideoCaptureDuration;
- (void)startVideoCapture;
- (void)_setVideoCapturePath:(id)arg1;
- (id)_videoMetadataArrayIncludingSensitiveProperties:(_Bool)arg1;
- (void)_setOrientation;
- (void)_setOrientationForConnection:(id)arg1;
- (_Bool)canCaptureVideo;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3;
- (void)_movieFileRecordingCompleted:(id)arg1;
- (void)_verifyVideoConsolidationForVideoAtPath:(id)arg1 outUserInfo:(id *)arg2;
- (void)_removeVideoCaptureFileAndDirectoryAtPath:(id)arg1;
- (_Bool)isCapturingVideo;
- (struct __IOSurface *)_newFilteredSurfaceFromSurface:(struct __IOSurface *)arg1 filters:(id)arg2;
- (void)capturePhoto;
- (_Bool)imageWriterQueueIsAvailable;
- (_Bool)canCapturePhotoDuringRecording;
- (_Bool)canCapturePhoto;
- (void)_didTakePhoto;
- (void)_willTakePhoto;
- (void)_capturedPhotoWithDictionary:(id)arg1 error:(id)arg2;
- (void)_processCapturedPhotoWithDictionary:(id)arg1 error:(id)arg2;
- (_Bool)_sanityCheckSessionCanCaptureWithOutput:(id)arg1;
- (void)_sessionRuntimeErrored:(id)arg1;
- (void)_interruptionEnded:(id)arg1;
- (void)_wasInterrupted:(id)arg1;
- (void)_resetIdleTimer;
- (void)_delayIdleTimerByTimeInterval:(double)arg1;
- (void)_serverDied:(id)arg1;
- (void)_recoverFromServerError;
- (void)stopPreview;
- (void)_previewStarted;
- (void)_clearPreviewLayer;
- (_Bool)isPreviewMirrored;
@property(nonatomic) int previewOrientation;
- (void)startPreview;
- (void)startPreview:(id)arg1;
- (void)_startPreview:(id)arg1;
- (void)_startPreviewWithCameraDevice:(long long)arg1 cameraMode:(long long)arg2 effectFilterIndices:(id)arg3;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (_Bool)_didSendPreviewStartedCallbackToEmptyDelegate;
- (void)_sessionStopped:(id)arg1;
- (void)_sessionStarted:(id)arg1;
- (void)_deviceStarted:(id)arg1;
- (void)_tearDownCamera;
- (void)_setDelaySuspend:(_Bool)arg1;
- (void)_forceDelaySuspendTimeout;
- (void)_teardownDelaySuspendTimer;
- (void)_destroyCamera;
- (_Bool)_setupCamera;
- (id)_currentVideoConnection;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_debug_checkIris;
- (void)_debug_cancelWaitForIris;
- (void)_debug_waitForIrisToOpen;
- (id)_debug_dispatchTimerQueue;
- (void)_debug_teardownDispatchTimer;
- (void)_jankyPreviewStartedWorkaround;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationSuspended:(id)arg1;
- (double)maximumZoomFactorForDevice:(long long)arg1;
- (double)minimumZoomFactorForDevice:(long long)arg1;
- (void)_unlockCurrentDeviceForConfiguration;
- (_Bool)_lockCurrentDeviceForConfiguration;
@property(nonatomic) _Bool isCameraApp;
- (void)_setLocationEnabled:(_Bool)arg1;
- (_Bool)_modeUsesCompassHeading;
- (_Bool)_isVideoMode:(long long)arg1;
- (void)_inputPortFormatDescriptionDidChange:(id)arg1;
@property(nonatomic) _Bool convertSampleBufferToJPEG;
@property(nonatomic) long long cameraDevice;
- (_Bool)hasRearCamera;
- (_Bool)hasFrontCamera;
- (void)_setDefaultPrewarmDate:(id)arg1;
@property(nonatomic, getter=_isModeChangeWaitingForConfigureSession, setter=_setModeChangeWaitingForConfigureSession:) _Bool _modeChangeWaitingForConfigureSession;
@property(nonatomic, getter=_isModeChangeWaitingForPreviewStarted, setter=_setModeChangeWaitingForPreviewStarted:) _Bool _modeChangeWaitingForPreviewStarted;
- (void)_notifyControllerModeDidChange;
- (void)_setCameraMode:(long long)arg1 cameraDevice:(long long)arg2;
@property(nonatomic) long long cameraMode;
- (id)_videoModeSessionPreset;
- (_Bool)_configureSessionWithCameraMode:(long long)arg1 cameraDevice:(long long)arg2;
- (_Bool)_safeSetCameraMode:(long long)arg1 cameraDevice:(long long)arg2;
- (_Bool)supportsVideoCapture;
- (_Bool)isChangingModes;
- (void)executeBlockOnMainQueue:(id)arg1;
- (void)enqueueBlockOnMainQueue:(id)arg1;
- (void)enqueueBlockInCaptureSessionQueue:(id)arg1;
- (_Bool)isReady;
- (void)_imageWriterQueueAvailabilityChanged;
- (void)releaseIOSurface;
- (void)captureIOSurface;
- (_Bool)hasInheritedForegroundState;
- (_Bool)inCall;
- (void)_inCallStatusChanged:(_Bool)arg1;
- (void)_callStateDidChange:(id)arg1;
- (void)_updateCallStatus;
- (void)dealloc;
- (id)init;

@end

