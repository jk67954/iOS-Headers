/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "UIView.h"

#import "GEOResourceManifestTileGroupObserver-Protocol.h"
#import "MKAnnotationContainerViewDelegate-Protocol.h"
#import "MKAnnotationManagerDelegate-Protocol.h"
#import "MKAnnotationMarkerContainer-Protocol.h"
#import "MKMapGestureControllerDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "VKMapViewDelegate-Protocol.h"

@class GEOMapRegion, MKAnnotationView, MKBasicMapView, MKMapAnnotationManager, MKMapGestureController, MKNewAnnotationContainerView, MKUserLocation, NSArray, NSMutableSet, NSTimer, UIGestureRecognizer, UIImageView, UILabel, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITapGestureRecognizer, UITextView, VKLabelMarker, VKMapView, VKPuckAnimator;

@interface MKWorldView : UIView <VKMapViewDelegate, UIGestureRecognizerDelegate, MKAnnotationManagerDelegate, MKAnnotationMarkerContainer, MKMapGestureControllerDelegate, GEOResourceManifestTileGroupObserver, MKAnnotationContainerViewDelegate>
{
    UIView *_contentView;
    MKBasicMapView *_basicMapView;
    VKMapView *_mapView;
    MKMapAnnotationManager *_annotationManager;
    MKNewAnnotationContainerView *_annotationContainer;
    id <MKWorldViewDelegate> _delegate;
    MKUserLocation *_userLocation;
    MKAnnotationView *_userLocationView;
    long long _userTrackingMode;
    UILabel *_debugView;
    NSTimer *_debugTimer;
    UIGestureRecognizer *_debugConsoleGesture;
    UITextView *_vectorKitDebugView;
    UIPanGestureRecognizer *_vectorKitStyleDebugGesture;
    UITapGestureRecognizer *_selectingTapGestureRecognizer;
    UITapGestureRecognizer *_nonselectingTapGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    VKPuckAnimator *_userLocationAnimator;
    NSTimer *_defaultLocationTimer;
    id _annotationRectTest;
    id _annotationCoordinateTest;
    unsigned long long _effectsPauseCount;
    long long _originalLoopRate;
    long long _preGesturingLoopRate;
    UIImageView *_attributionBadgeView;
    struct CGSize _attributionAnchorOffset;
    MKMapGestureController *_gestureController;
    _Bool _shouldSplitRouteLine;
    MKAnnotationView *_longPressStartAnnotationView;
    NSMutableSet *_rasterOverlays;
    id _debugConsoleAdditionalInfoProvider;
    id _selectAnnotationViewAfterRedrawBlock;
    struct {
        unsigned int showsUserLocation:1;
        unsigned int ignoreLocationUpdates:1;
        unsigned int debugConsoleEnabled:1;
        unsigned int vectorKitConsoleEnabled:1;
        unsigned int inactive:1;
        unsigned int gesturing:1;
        unsigned int panning:1;
        unsigned int zooming:1;
        unsigned int rotating:1;
        unsigned int animatingRegionChange:1;
        unsigned int didStartPanningDeceleration:1;
        unsigned int regionChangeIsAnimated:1;
        unsigned int canSelectPOIs:1;
        unsigned int canSelectAllLabels:1;
        unsigned int isDraggingAnnotationMarker:1;
        unsigned int userInteractionPausesLocationUpdates:1;
        unsigned int locationPropagationEnabled:1;
        unsigned int locationPulseEnabled:1;
        unsigned int allowsRotation:1;
        unsigned int rotationEnabled:1;
        unsigned int allowsTilt:1;
        unsigned int tiltEnabled:1;
        unsigned int allowsMotionControl:1;
        unsigned int motionControlEnabled:1;
        unsigned int motionPermitted:1;
        unsigned int loading:1;
        unsigned int hasCustomLabelScaleFactor:1;
        unsigned int scrollWasEnabledBeforeProgrammaticPan:1;
        unsigned int hasFinishedInitialRender:1;
        unsigned int hasPendingCameraChange:1;
        unsigned int delegateImplementsDidStartLoading:1;
        unsigned int delegateImplementsDidFinishLoading:1;
        unsigned int delegateImplementsDidFailLoading:1;
        unsigned int delegateImplementsDidBecomeFullyDrawn:1;
        unsigned int delegateImplementsCalloutAccessoryControlTapped:1;
        unsigned int delegateImplementsWillAnimateInAnnotationViews:1;
        unsigned int delegateImplementsDidAnimateInAnnotationViews:1;
        unsigned int delegateImplementsPainterForOverlay:1;
        unsigned int delegateImplementsDidChangeMapType:1;
        unsigned int delegateImplementsWillChangeToMapDisplayStyle:1;
        unsigned int delegateImplementsDidChangeMapDisplayStyle:1;
        unsigned int delegateImplementsDidUpdateUserLocation:1;
        unsigned int delegateImplementsDidFailToLocateUser:1;
        unsigned int delegateImplementsDidChangeUserTrackingModeButton:1;
        unsigned int delegateImplementsDidChangeUserTrackingMode:1;
        unsigned int delegateImplementsRegionWillChangeAnimated:1;
        unsigned int delegateImplementsRegionDidChangeAnimated:1;
        unsigned int delegateImplementsDidChangeVisibleRegion:1;
        unsigned int delegateImplementsShouldSelectLabelMarker:1;
        unsigned int delegateImplementsWillSelectLabelMarker:1;
        unsigned int delegateImplementsDidSelectLabelMarker:1;
        unsigned int delegateImplementsLabelMarkerCalloutAccessoryControlTapped:1;
        unsigned int delegateImplementsDidDeselectLabelMarker:1;
        unsigned int delegateImplementsDidBecomePitched:1;
        unsigned int delegateImplementsCanEnter3DModeDidChange:1;
        unsigned int delegateImplementsAllowsRotationDidChange:1;
        unsigned int delegateImplementsAllowsTiltDidChange:1;
        unsigned int delegateImplementsAllowsMotionControlDidChange:1;
        unsigned int delegateImplementsDidStartUserInteraction:1;
        unsigned int delegateImplementsDidStopUserInteraction:1;
        unsigned int delegateImplementsWillStartRespondingToGesture:1;
        unsigned int delegateImplementsDidStopRespondingToGesture:1;
        unsigned int delegateImplementsShouldDelayTapResponseForAnnotationView:1;
        unsigned int delegateImplementsRectToAvoidForCallout:1;
        unsigned int delegateImplementsCurrentRouteMatch:1;
        unsigned int delegateImplementsCanShowFlyover:1;
        unsigned int delegateImplementsShowingFlyover:1;
    } _flags;
}

+ (id)mapRegionWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomScale:(double)arg2 size:(struct CGSize)arg3;
@property(copy, nonatomic) id debugConsoleAdditionalInfoProvider; // @synthesize debugConsoleAdditionalInfoProvider=_debugConsoleAdditionalInfoProvider;
@property(nonatomic) struct CGSize attributionAnchorOffset; // @synthesize attributionAnchorOffset=_attributionAnchorOffset;
@property(readonly, nonatomic) VKMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) long long userTrackingMode; // @synthesize userTrackingMode=_userTrackingMode;
@property(readonly, nonatomic) UITapGestureRecognizer *nonselectingTapGestureRecognizer; // @synthesize nonselectingTapGestureRecognizer=_nonselectingTapGestureRecognizer;
@property(nonatomic) _Bool shouldSplitRouteLine; // @synthesize shouldSplitRouteLine=_shouldSplitRouteLine;
@property(nonatomic) id <MKWorldViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)removeRasterOverlay:(id)arg1;
- (void)addRasterOverlay:(id)arg1;
- (void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg1;
- (struct CGRect)annotationContainerVisibleRect:(id)arg1;
- (struct CGRect)visibleCenteringRectInView:(id)arg1;
- (struct CGRect)visibleRectInView:(id)arg1;
- (void)annotationContainerDidDropPins:(id)arg1;
- (void)annotationContainerWillDropPins:(id)arg1;
- (void)annotationContainerDidAnimateBubble:(id)arg1;
- (void)annotationContainerWillAnimateBubble:(id)arg1;
- (double)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(CDStruct_c3b9c2ee)arg2 maxDistance:(double *)arg3 startPoint:(struct CGPoint *)arg4 shadowStartPoint:(struct CGPoint *)arg5;
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(CDStruct_c3b9c2ee)arg3 completionHandler:(id)arg4;
- (void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (_Bool)annotationContainerIsRotated:(id)arg1;
- (_Bool)annotationContainerShouldAlignToPixels:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(CDStruct_31142d93)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_31142d93)arg2 course:(double)arg3;
- (void)puckAnimator:(id)arg1 runAnimation:(id)arg2;
- (void)setTracePlaybackSpeedMultiplier:(double)arg1;
- (_Bool)shouldHideOffscreenSelectedAnnotation;
- (id)annotationCoordinateTest;
- (id)annotationRectTest;
- (void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(CDStruct_c3b9c2ee)arg2 animated:(_Bool)arg3 duration:(double)arg4;
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2;
- (void)showCalloutIfNecessaryForAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)selectAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)removeAnnotationRepresentation:(id)arg1;
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;
- (void)_handleStyleDebugGesture:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)hitSomethingAtTouch:(id)arg1;
- (void)_handleLongPress:(id)arg1;
- (void)_annotationViewDragStateChanged:(id)arg1;
- (void)_handleTapToDeselect:(id)arg1;
- (void)_handleTapToSelect:(id)arg1;
- (double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (void)selectLabelMarker:(id)arg1 animated:(_Bool)arg2;
- (void)selectLabelMarker:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)_toggleDebugConsole:(id)arg1;
@property(nonatomic, getter=isVectorKitStyleDebugEnabled) _Bool vectorKitStyleDebugEnabled;
@property(nonatomic, getter=isVectorKitConsoleEnabled) _Bool vectorKitConsoleEnabled;
@property(nonatomic, getter=isDebugConsoleEnabled) _Bool debugConsoleEnabled;
- (struct CGRect)_debugViewFrame;
- (void)_updateDebugViewFrameWithEdgeInsets;
- (void)_updateDebugConsole;
- (id)_descriptionForLocation:(id)arg1 compact:(_Bool)arg2;
- (void)_updateUserLocationEffects;
- (void)setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2;
- (void)_setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2 fromTrackingButton:(_Bool)arg3;
@property(nonatomic) long long userTrackingZoomStyle;
- (void)_updateHeadingOrientation;
- (long long)_interfaceOrientation;
- (_Bool)canRotateForHeading;
@property(readonly, nonatomic) MKUserLocation *userLocation;
@property(readonly, nonatomic) _Bool hasUserLocation;
@property(nonatomic) _Bool showsUserLocation;
- (void)resumeUserLocationUpdates;
- (void)pauseUserLocationUpdates;
@property(nonatomic) _Bool userInteractionPausesLocationUpdates;
- (void)_stopUpdatingUserLocation;
- (void)_startUpdatingUserLocation;
@property(nonatomic) _Bool showingTraffic;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (id)mapView:(id)arg1 painterForOverlay:(id)arg2;
- (void)mapView:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;
- (void)deselectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) MKAnnotationView *selectedAnnotationView;
@property(nonatomic) _Bool canSelectAllLabels;
@property(nonatomic) _Bool canSelectPOIs;
- (void)deselectLabelMarkerAnimated:(_Bool)arg1;
@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;
- (void)dismissExpandedCallout;
- (_Bool)isCalloutExpanded;
- (id)calloutPopoverController;
- (void)addViewsForAnnotations:(id)arg1;
- (id)viewForAnnotation:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *annotationViews;
@property(readonly, nonatomic) NSArray *annotations;
- (void)replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)addAnnotations:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)addAnnotation:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)addAnnotations:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (void)stopScenicAnimation;
- (void)performScenicAnimationForLocation:(CDStruct_c3b9c2ee)arg1 animationType:(int)arg2;
- (void)prepareScenicAnimationForLocation:(CDStruct_c3b9c2ee)arg1 animationType:(int)arg2 completion:(id)arg3;
@property(nonatomic) _Bool rendersInBackground;
- (id)snapshotImage;
- (void)stopPlaceCardAnimation;
- (void)startPlaceCardAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 andDistance:(double)arg2;
@property(readonly, nonatomic) _Bool canShowAnimationForPlaceCard;
- (void)showAnimationForSearchResult:(id)arg1 withMapRegion:(id)arg2;
- (_Bool)canShowAnimationForSearchResultWithMapRegion:(id)arg1;
@property(readonly, nonatomic, getter=isGoingToDefaultLocation) _Bool goingToDefaultLocation;
- (void)goToDefaultLocation;
@property(readonly, nonatomic) _Bool canShowFlyover;
@property(readonly, nonatomic, getter=isShowingFlyover) _Bool showingFlyover;
@property(readonly, nonatomic, getter=isMotionControlActive) _Bool motionControlActive;
- (void)stopMotionControl;
- (void)startMotionControl;
@property(readonly, nonatomic) _Bool canEnter3DMode;
@property(readonly, nonatomic, getter=isPitched) _Bool pitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (CDStruct_90e2a262)mapRectThatFits:(CDStruct_90e2a262)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (void)goToCoordinateRegion:(CDStruct_90e2a262)arg1 animationType:(int)arg2;
- (void)goToCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(double)arg2 animationType:(int)arg3;
- (void)_goToMapRegion:(id)arg1 animationType:(int)arg2;
- (id)_mapRegionWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomScale:(double)arg2;
@property(readonly) double zoomLevel;
- (double)_zoomScale;
- (double)_zoomScaleForMapRegion:(id)arg1;
- (void)setMapRegion:(id)arg1 animationDuration:(double)arg2 pitch:(double)arg3 yaw:(double)arg4 completion:(id)arg5;
- (void)setMapRegion:(id)arg1 animated:(_Bool)arg2 completion:(id)arg3;
- (void)setMapRegion:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) GEOMapRegion *mapRegion;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1;
- (void)zoomOut;
- (void)zoomIn;
- (void)_zoomWithAmount:(double)arg1;
- (id)mapRegionThatFits:(id)arg1 edgePadding:(struct UIEdgeInsets)arg2;
@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 animated:(_Bool)arg2;
@property(nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) double yaw;
@property(nonatomic) _Bool panWithMomentum;
@property(nonatomic, getter=isTiltEnabled) _Bool tiltEnabled;
@property(readonly, nonatomic, getter=isZooming) _Bool zooming;
@property(readonly, nonatomic, getter=isRotating) _Bool rotating;
@property(nonatomic, getter=isRotationEnabled) _Bool rotationEnabled;
@property(nonatomic, getter=isZoomEnabled) _Bool zoomEnabled;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (_Bool)isUserInteractionEnabled;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_sizeDidChange;
- (void)setHidden:(_Bool)arg1;
@property(nonatomic) long long mapDisplayStyle;
@property(nonatomic) unsigned long long mapType;
- (_Bool)_supportsVKMapType:(long long)arg1;
- (void)stopEffects;
- (void)startEffects;
@property(readonly, nonatomic) _Bool regionChangeIsUserInitiated;
@property(readonly, nonatomic, getter=isChangingRegion) _Bool changingRegion;
- (id)mapView:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 showingFlyoverDidChange:(_Bool)arg2;
- (void)mapView:(id)arg1 canShowFlyoverDidChange:(_Bool)arg2;
- (void)mapView:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;
- (void)mapView:(id)arg1 didFinishChangingMapDisplayStyle:(long long)arg2;
- (void)mapView:(id)arg1 didBecomePitched:(_Bool)arg2;
- (void)mapView:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4;
- (void)gestureControllerDidStopTiltingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartTilting:(id)arg1;
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartRotating:(id)arg1;
- (void)gestureControllerDidStopTwoFingerLongPress:(id)arg1;
- (void)gestureControllerWillStartTwoFingerLongPress:(id)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 willDecelerate:(_Bool)arg3;
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(_Bool)arg2;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)mapView:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)mapViewDidStopRegionAnimation:(id)arg1 completed:(_Bool)arg2;
- (void)mapViewWillStartRegionAnimation:(id)arg1;
- (void)_updateIconsShouldAlignToPixels;
- (_Bool)_iconsShouldAlignToPixels;
- (void)mapViewDidChangeVisibleRegion:(id)arg1;
- (void)_didChangeRegion;
- (void)_willChangeRegion:(_Bool)arg1 userInitiated:(_Bool)arg2;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
- (void)mapViewDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(_Bool)arg2;
- (void)mapViewDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapViewDidFinishLoadingTiles:(id)arg1;
- (void)mapViewDidStartLoadingTiles:(id)arg1;
- (void)mapViewDidDraw:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)_addDebugGesture;
- (struct UIEdgeInsets)defaultInsetsForPinAnnotations;
@property(nonatomic) struct UIEdgeInsets fullyOccludedEdgeInsets;
@property(nonatomic) struct UIEdgeInsets edgeInsets;
- (void)restoreViewportFromDictionary:(id)arg1;
- (id)viewportDictionary;
@property(nonatomic, getter=isLoadingEnabled) _Bool loadingEnabled;
@property(nonatomic, getter=isLocationPulseEnabled) _Bool locationPulseEnabled;
@property(nonatomic, getter=isLocationPropagationEnabled) _Bool locationPropagationEnabled;
@property(nonatomic) _Bool allowsPopoverWhenNotInWindow;
@property(nonatomic) _Bool motionPermitted;
- (void)_updateMotionState;
- (void)_updateAllowsMotionControl;
@property(readonly, nonatomic) _Bool allowsMotionControl;
- (void)_updateAllowsTilt;
@property(readonly, nonatomic) _Bool allowsTilt;
- (void)_updateAllowsRotation;
@property(readonly, nonatomic) _Bool allowsRotation;
- (id)detailedDescription;
- (id)mapAttributionWithStringAttributes:(id)arg1;
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (void)geoDefaultsDidChange:(id)arg1;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)_updateAttribution;
@property(readonly, nonatomic, getter=isFullyDrawn) _Bool fullyDrawn;
@property(nonatomic) long long labelScaleFactor;
@property(nonatomic) double longPressDuration;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 gestureRecognizerHostView:(id)arg2 motionPermitted:(_Bool)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

