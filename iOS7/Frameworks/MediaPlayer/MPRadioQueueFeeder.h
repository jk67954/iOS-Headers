/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <MediaPlayer/MPQueueFeeder.h>

@class ADBannerView, MPRadioAdObserver, NSArray, NSData, NSMapTable, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, RadioStation;

@interface MPRadioQueueFeeder : MPQueueFeeder
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    MPRadioAdObserver *_adObserver;
    _Bool _didFailToFetchTracks;
    NSMutableDictionary *_fetchingTracksCompletionHandlersByStation;
    ADBannerView *_skipAdView;
    NSData *_skipAdTrackData;
    NSMapTable *_startTimesByRadioTrack;
    RadioStation *_station;
    NSObject<OS_dispatch_queue> *_trackHistoryQueue;
    NSObject<OS_dispatch_queue> *_trackRemovalQueue;
    NSMutableArray *_tracks;
    _Bool _wasUsingBackgroundNetwork;
}

+ (void)_updateIsExplicitContentRestrictedAndPostNotification:(_Bool)arg1 removeTracks:(_Bool)arg2;
+ (id)_profileConnectionObserver;
+ (_Bool)shouldRestorePlaybackQueue;
+ (id)imageCache;
+ (void)setUserDefaultExplicitTracksEnabled:(_Bool)arg1;
+ (void)setMinimumDurationToPlayToCountForHistory:(double)arg1;
+ (_Bool)isUserDefaultExplicitTracksEnabled;
+ (_Bool)isExplicitTracksEnabled;
+ (void)_isProfileExplicitContentRestrictedDidChangeNotification:(id)arg1;
- (void).cxx_destruct;
- (void)_updateTracksKeepingExistingTracks:(_Bool)arg1 keepingCurrentTrack:(_Bool)arg2 invalidatingContent:(_Bool)arg3;
- (id)_tracksWithPromotionalContentFromTracks:(id)arg1;
- (void)_recordTrackTimeForItem:(id)arg1;
- (void)_prefetchArtworkForNextTrack;
- (void)_insertAdTrack:(id)arg1 afterCurrentItemIndex:(unsigned long long)arg2;
- (unsigned long long)_indexOfCurrentItem;
- (void)_fetchAdditionalTracksWithCompletionHandler:(id)arg1;
- (_Bool)_endPlaybackIfNecessaryForNetworkType;
- (void)_cancelScheduledAds;
- (_Bool)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(_Bool)arg2 startPlayback:(_Bool)arg3;
@property(copy, nonatomic) NSArray *tracks;
@property(retain, nonatomic) RadioStation *station;
- (void)setStartTime:(double)arg1 forRadioTrack:(id)arg2;
- (void)removeStartTimeForRadioTrack:(id)arg1;
- (void)removeAllStartTimes;
- (void)reloadTracksForPlayingStationAndKeepExistingTracks:(_Bool)arg1;
- (void)reloadTracksForPlayingStation;
- (void)loadArtworkImageForItem:(id)arg1 completionHandler:(id)arg2;
- (void)_songBeganResponseNotification:(id)arg1;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_playbackStateDidChangeNotification:(id)arg1;
- (void)_networkTypeDidChangeNotification:(id)arg1;
- (void)_itemIsBannedDidChangedNotification:(id)arg1;
- (void)_itemDidFinishLoadingNotification:(id)arg1;
- (void)_itemWillChangeNotification:(id)arg1;
- (void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1;
- (void)_didFailToLoadAdNotification:(id)arg1;
- (void)_cellularNetworkingAllowedDidChangeNotification:(id)arg1;
- (void)_bufferingStateDidChangeNotification:(id)arg1;
- (void)_applicationWillTerminateNotification:(id)arg1;
- (unsigned long long)initialPlaybackQueueDepth;
- (_Bool)shouldBeginPlaybackOfItem:(id)arg1 error:(id *)arg2;
- (void)setAVController:(id)arg1;
- (_Bool)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(_Bool)arg2;
- (unsigned long long)realRepeatType;
- (_Bool)playerPreparesItemsForPlaybackAsynchronously;
- (int)playbackMode;
- (id)localizedPositionInPlaylistString:(id)arg1;
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3;
- (unsigned long long)itemTypeForIndex:(unsigned long long)arg1;
- (unsigned long long)itemCount;
- (Class)itemClass;
- (_Bool)hasValidItemAtIndex:(unsigned long long)arg1;
- (id)copyRawItemAtIndex:(unsigned long long)arg1;
- (void)controller:(id)arg1 willChangePlaybackIndexBy:(long long)arg2 deltaType:(int)arg3 ignoreElapsedTime:(_Bool)arg4 allowSkippingAds:(_Bool)arg5;
- (id)_trackAtIndex:(unsigned long long)arg1;
- (id)playbackInfoAtIndex:(unsigned long long)arg1;
- (_Bool)canSkipToPreviousItem;
- (_Bool)canSkipItem:(id)arg1;
- (_Bool)canSeek;
- (void)dealloc;
- (id)init;

@end

