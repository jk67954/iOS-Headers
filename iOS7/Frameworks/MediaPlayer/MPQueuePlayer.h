/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "MPAudioDeviceControllerDelegate-Protocol.h"

@class AVPlayer, AVPlayerItem, AVQueuePlayer, MPAudioDeviceController, NSArray, NSDictionary, NSError, NSMutableArray, NSObject<OS_dispatch_queue>, NSString;

@interface MPQueuePlayer : NSObject <MPAudioDeviceControllerDelegate>
{
    MPAudioDeviceController *_audioDeviceController;
    AVPlayerItem *_currentItem;
    CDStruct_1b6d18a9 _currentTime;
    _Bool _isExternalPlaybackActive;
    _Bool _pausedForPlaybackQueueTransaction;
    NSDictionary *_pickedRouteDescription;
    id _playbackQueueCommitHandler;
    long long _playbackQueueTransactionCount;
    AVQueuePlayer *_player;
    NSMutableArray *_queuedOperations;
    NSObject<OS_dispatch_queue> *_queuedOperationsAccessQueue;
    float _rate;
    float _rateBeforePlaybackQueueTransaction;
    _Bool _routeDidChangeDuringPlaybackQueueTransaction;
    long long _status;
    long long _defaultItemEQPresetType;
    _Bool _outputObscuredDueToInsufficientExternalProtection;
}

@property(nonatomic) long long defaultItemEQPresetType; // @synthesize defaultItemEQPresetType=_defaultItemEQPresetType;
@property(copy, nonatomic) id playbackQueueCommitHandler; // @synthesize playbackQueueCommitHandler=_playbackQueueCommitHandler;
- (void).cxx_destruct;
- (void)audioDeviceControllerAudioRoutesChanged:(id)arg1;
- (float)_userVolume;
- (void)_setWantsVolumeChangesWhenPausedOrInactive:(_Bool)arg1;
- (void)_setUserVolume:(float)arg1;
- (void)_setStoppingFadeOutDuration:(float)arg1;
- (void)_setPreferredLanguageList:(id)arg1;
- (void)_setPreparesItemsForPlaybackAsynchronously:(_Bool)arg1;
@property(copy, nonatomic) NSString *externalPlaybackVideoGravity;
- (void)_setEQPreset:(int)arg1;
@property(nonatomic) _Bool disallowsAMRAudio;
- (void)_setClientName:(id)arg1;
- (void)_setCALayerDestinationIsTVOut:(_Bool)arg1;
- (_Bool)_resumePlayback:(double)arg1 error:(id *)arg2;
- (_Bool)_CALayerDestinationIsTVOut;
@property(readonly, nonatomic) _Bool outputObscuredDueToInsufficientExternalProtection;
@property(readonly, nonatomic) id playerAVAudioSession;
@property(nonatomic) _Bool usesExternalPlaybackWhileExternalScreenIsActive;
@property(nonatomic) _Bool usesAudioOnlyModeForExternalPlayback;
@property(readonly, nonatomic) long long status;
@property(nonatomic) float rate;
- (void)setMediaSelectionCriteria:(id)arg1 forMediaCharacteristic:(id)arg2;
@property(nonatomic) _Bool allowsExternalPlayback;
@property(nonatomic) long long actionAtItemEnd;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)setCurrentPlaybackQueueTransactionDisplayTime:(CDStruct_1b6d18a9)arg1;
@property(nonatomic, getter=isClosedCaptionDisplayEnabled) _Bool closedCaptionDisplayEnabled;
- (void)removeTimeObserver:(id)arg1;
- (void)removeItem:(id)arg1;
- (void)prepareItem:(id)arg1 withCompletionHandler:(id)arg2;
@property(readonly, nonatomic) AVPlayer *_player;
- (void)play;
- (void)pause;
@property(readonly, nonatomic) NSArray *items;
@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive;
- (void)insertItem:(id)arg1 afterItem:(id)arg2;
@property(readonly, nonatomic) long long _externalProtectionStatus;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) long long externalPlaybackType;
- (CDStruct_1b6d18a9)currentTime;
@property(readonly, nonatomic) AVPlayerItem *currentItem;
- (void)commitPlaybackQueueTransaction;
@property(readonly, nonatomic) _Bool isPlaybackQueueTransactionActive;
- (void)beginPlaybackQueueTransactionAndPause:(_Bool)arg1;
- (void)advanceToNextItem;
- (id)addBoundaryTimeObserverForTimes:(id)arg1 queue:(id)arg2 usingBlock:(id)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)init;

@end

