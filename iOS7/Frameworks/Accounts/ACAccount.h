/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "NSSecureCoding-Protocol.h"

@class ACAccountCredential, ACAccountStore, ACAccountType, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSURL;

@interface ACAccount : NSObject <NSSecureCoding>
{
    ACAccountStore *_store;
    NSString *_identifier;
    NSString *_accountDescription;
    NSString *_owningBundleID;
    NSString *_username;
    NSString *_authenticationType;
    NSString *_credentialType;
    NSString *_clientToken;
    _Bool _haveCheckedForClientToken;
    ACAccountType *_accountType;
    ACAccountCredential *_credential;
    NSMutableDictionary *_properties;
    NSMutableDictionary *_dataclassProperties;
    _Bool _accountAccessAvailable;
    _Bool _authenticated;
    _Bool _active;
    _Bool _supportsAuthentication;
    NSURL *_objectID;
    NSDate *_date;
    NSDate *_lastCredentialRenewalRejectionDate;
    ACAccount *_parentAccount;
    _Bool _haveCheckedForParentAccount;
    NSString *_parentAccountIdentifier;
    _Bool _haveCheckedForChildAccounts;
    NSArray *_childAccounts;
    NSMutableSet *_enabledDataclasses;
    NSMutableSet *_provisionedDataclasses;
    NSMutableSet *_dirtyProperties;
    NSMutableSet *_dirtyAccountProperties;
    id _credentialsDidChangeObserver;
    id _accountPropertiesTransformer;
    _Bool _creatingFromManagedObject;
}

+ (id)_createNewAccountUID;
+ (_Bool)supportsSecureCoding;
@property(copy) id accountPropertiesTransformer; // @synthesize accountPropertiesTransformer=_accountPropertiesTransformer;
@property(readonly, nonatomic) NSSet *dirtyAccountProperties; // @synthesize dirtyAccountProperties=_dirtyAccountProperties;
@property(readonly, nonatomic) NSSet *dirtyProperties; // @synthesize dirtyProperties=_dirtyProperties;
- (void).cxx_destruct;
- (id)diffAccount:(id)arg1;
@property(readonly, nonatomic) NSString *shortDebugName;
- (void)setCreatingFromManagedObject:(_Bool)arg1;
- (_Bool)addClientToken:(id)arg1;
@property(readonly, nonatomic) NSString *clientToken;
- (id)accountByCleaningThirdPartyTransformations;
- (void)_loadAllCachedProperties;
- (void)refresh;
- (void)reload;
- (void)takeValuesFromModifiedAccount:(id)arg1;
- (void)_setObjectID:(id)arg1;
@property(readonly, nonatomic) NSURL *objectID;
- (void)setProperties:(id)arg1 forDataclass:(id)arg2;
- (id)propertiesForDataclass:(id)arg1;
- (void)setDataclassProperties:(id)arg1;
@property(readonly, nonatomic) NSDictionary *dataclassProperties;
- (_Bool)isProvisionedForDataclass:(id)arg1;
- (void)setEnabled:(_Bool)arg1 forDataclass:(id)arg2;
- (_Bool)isEnabledToSyncDataclass:(id)arg1;
- (id)enabledAndSyncableDataclasses;
- (_Bool)isEnabledForDataclass:(id)arg1;
@property(retain, nonatomic) NSMutableSet *enabledDataclasses;
@property(retain, nonatomic) NSMutableSet *provisionedDataclasses;
- (void)_clearCachedChildAccounts;
- (id)childAccountsWithAccountTypeIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *childAccounts;
@property(readonly, nonatomic) ACAccount *displayAccount;
@property(retain, nonatomic) ACAccount *parentAccount;
@property(readonly, nonatomic) NSString *parentAccountIdentifier;
@property(retain, nonatomic) ACAccountType *accountType;
@property(readonly, nonatomic) ACAccountStore *accountStore;
- (void)_setAccountStore:(id)arg1;
@property(readonly, nonatomic) _Bool supportsPush;
@property(nonatomic) _Bool supportsAuthentication;
@property(nonatomic, getter=isActive) _Bool active;
@property(retain, nonatomic) NSDate *lastCredentialRenewalRejectionDate;
@property(nonatomic, getter=isAuthenticated) _Bool authenticated;
- (_Bool)authenticated;
- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;
- (id)accountPropertyForKey:(id)arg1;
- (void)setAccountProperties:(id)arg1;
@property(readonly, nonatomic) NSDictionary *accountProperties;
@property(retain, nonatomic) NSDate *creationDate;
- (void)setOwningBundleID:(id)arg1;
- (id)owningBundleID;
@property(copy, nonatomic) NSString *accountDescription;
@property(retain, nonatomic) ACAccountCredential *credential;
- (id)credentialWithError:(id *)arg1;
@property(readonly, nonatomic) NSString *userFullName;
@property(copy, nonatomic) NSString *username;
- (void)setCredentialType:(id)arg1;
@property(readonly, nonatomic) NSString *credentialType;
- (void)setAuthenticationType:(id)arg1;
@property(readonly, nonatomic) NSString *authenticationType;
- (void)setIdentifier:(id)arg1;
@property(readonly, nonatomic) NSString *identifier;
- (void)_clearDirtyProperties;
- (void)_markCredentialDirty;
- (void)_markAccountPropertyDirty:(id)arg1;
- (void)_markPropertyDirty:(id)arg1;
- (_Bool)_useParentForCredentials;
- (void)markAllPropertiesDirty;
- (_Bool)isPropertyDirty:(id)arg1;
@property(readonly, nonatomic, getter=isDirty) _Bool dirty;
- (void)credentialsChanged:(id)arg1;
- (void)_clearCachedCredentials;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_installCredentialsChangedObserver;
- (id)initWithCoder:(id)arg1;
- (id)initWithManagedAccount:(id)arg1;
- (id)initWithManagedAccount:(id)arg1 accountStore:(id)arg2;
- (id)initWithAccountType:(id)arg1;

@end

