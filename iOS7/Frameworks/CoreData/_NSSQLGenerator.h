/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSMutableArray, NSMutableDictionary, NSMutableString, NSSQLAdapter, NSSQLStatement, NSSQLStoreMappingGenerator;

// Not exported
@interface _NSSQLGenerator : NSObject
{
    NSSQLStatement *_statement;
    NSSQLAdapter *_adapter;
    NSMutableString *_sqlString;
    NSMutableDictionary *_aliasMap;
    NSSQLStoreMappingGenerator *_aliasNamer;
    NSMutableString *_joinClause;
    NSMutableString *_whereClause;
    NSMutableString *_selectList;
    NSMutableString *_orderByClause;
    _Bool _allowToManyKeyPath;
    _Bool _useDistinct;
    _Bool _autoDistinct;
    unsigned int _scopedByORPredicate;
    NSMutableArray *_comparisonPredicateScopedItem;
}

+ (void)initialize;
- (_Bool)foldComparisonPredicate:(id)arg1;
- (_Bool)_isForeignObjectExpression:(id)arg1;
- (void)setAutoDistinct:(_Bool)arg1;
- (_Bool)autoDistinct;
- (void)_preparePredicate:(id)arg1;
- (id)_reducedSubpredicates:(id)arg1;
- (void)prepareComparisonPredicate:(id)arg1;
- (_Bool)_isNullExpression:(id)arg1;
- (void)prepareEndsWith:(id)arg1;
- (void)prepareBeginsWith:(id)arg1;
- (void)_prepareSubstringWith:(id)arg1 wildStart:(_Bool)arg2 wildEnd:(_Bool)arg3;
- (void)prepareLike:(id)arg1;
- (void)prepareBetween:(id)arg1;
- (void)prepareMatches:(id)arg1;
- (void)prepareIn:(id)arg1 swap:(_Bool)arg2;
- (void)_preparePredicateExpression:(id)arg1;
- (_Bool)_prepareFunctionExpression:(id)arg1;
- (void)_appendWhereClauseForConstantCollection:(id)arg1;
- (void)_appendWhereClauseForExpressionCollection:(id)arg1;
- (void)_prepareString:(id)arg1 expressionPath:(id)arg2 sensitiveOptions:(unsigned int)arg3 wildStart:(_Bool)arg4 wildEnd:(_Bool)arg5 allowToMany:(_Bool)arg6;
- (id)_newWildSubStringForGlob:(id)arg1 wildStart:(_Bool)arg2 wildEnd:(_Bool)arg3;
- (void)_prepareConst:(id)arg1 inAttribute:(id)arg2 sensitiveOptions:(unsigned int)arg3;
- (void)_prepareConst:(id)arg1 inToMany:(id)arg2;
- (void)_prepareConst:(id)arg1 inManyToMany:(id)arg2;
- (void)prepareCountStatementWithFetchRequest:(id)arg1;
- (void)prepareSelectStatementWithFetchRequest:(id)arg1 ignoreInheritance:(_Bool)arg2;
- (id)_newPredicateWithInheritanceForFetchRequest:(id)arg1;
- (void)prepareDeleteStatementWithRow:(id)arg1;
- (void)prepareUpdateStatementWithRow:(id)arg1 originalRow:(id)arg2;
- (void)buildWhereClauseForRow:(id)arg1 optLock:(long long)arg2;
- (void)buildWhereClauseWithSimplePredicate:(id)arg1;
- (void)buildOrderByClauseWithSortDescriptors:(id)arg1;
- (void)appendClause:(id)arg1 forKeyPathExpression:(id)arg2 allowToMany:(_Bool)arg3;
- (void)appendClause:(id)arg1 forKeyPath:(id)arg2 allowToMany:(_Bool)arg3;
- (void)appendCountClause:(id)arg1 forToManyKeyPath:(id)arg2;
- (_Bool)isToManyCountKeyPath:(id)arg1;
- (id)addJoinForDirectToManyToMany:(id)arg1;
- (void)addJoinForManyToManyRelationship:(id)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)addJoinForToManyRelationship:(id)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)addJoinForToOneRelationship:(id)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)appendClause:(id)arg1 forProperty:(id)arg2 keypath:(id)arg3;
- (void)buildWhereClauseWithSelectPredicate:(id)arg1;
- (void)prepareDeleteStatementWithCorrelation:(id)arg1;
- (void)prepareUpdateStatementWithCorrelation:(id)arg1;
- (void)prepareInsertStatementWithCorrelation:(id)arg1;
- (void)prepareInsertStatementWithRow:(id)arg1;
- (void)_appendWhereClauseForConstVal:(id)arg1;
- (void)_addBindVarForConstVal1:(id)arg1;
- (void)_addBindVarForConstVal2:(id)arg1;
- (unsigned int)sqlTypeForPropertyAtEndOfKeyPath:(id)arg1;
- (void)_preparePredicateOperator:(id)arg1;
- (id)_retainedPrimaryKeyNumberForObject:(id)arg1;
- (id)_retainedPrimaryKeyNumberForObjectID:(struct _NSScalarObjectID *)arg1;
- (void)appendLimitClauseToSQL:(unsigned int)arg1;
- (void)appendOrderByClauseToSQL;
- (void)appendWhereClauseToSQL;
- (void)appendJoinClauseToSQL;
- (void)appendSelectListToSQLForRequest:(id)arg1;
- (id)whereClause;
- (void)appendSQL:(id)arg1;
- (void)_startSQL:(id)arg1;
- (void)appendWhereClause:(id)arg1;
- (unsigned int)sqlTypeForExpressionConstantValue:(id)arg1;
- (id)sqlString;
- (id)initWithStatement:(id)arg1 forAdapter:(id)arg2;
- (void)dealloc;

@end

