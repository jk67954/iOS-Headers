//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVCaptureAudioDataOutputSampleBufferDelegate.h"

@class AVAssetWriter, AVCaptureAudioDataOutput, AVCaptureSession, NSDate, NSMutableArray, NSObject<OS_dispatch_queue>, NSURL, NSUUID;

@interface RCCaptureAudioFileOutput : NSObject <AVCaptureAudioDataOutputSampleBufferDelegate>
{
    AVCaptureSession *_captureSession;
    BOOL _captureTerminatedAbnormally;
    BOOL _waitingForCaptureSessionDidStart;
    BOOL _captureSessionFailedToStart;
    int _captureSessionStartupState;
    BOOL _processingSamples;
    unsigned int _sampleBuffersWritten;
    NSMutableArray *_delegateBlocks;
    BOOL _manageSessionRunState;
    BOOL _finalizedAssetEncounteredError;
    unsigned int _maxRecordedFileSize;
    id <RCCaptureAudioFileOutputRecordingDelegate> _recordingDelegate;
    NSURL *_recordingURL;
    int _state;
    NSObject<OS_dispatch_queue> *_queue;
    NSUUID *_recordingSessionID;
    AVCaptureAudioDataOutput *_sampleBufferDataOutput;
    NSObject<OS_dispatch_queue> *_sampleBufferQueue;
    NSURL *_outputFileURL;
    NSDate *_recordingCreationDate;
    AVAssetWriter *_assetWriter;
    double _maxRecordedDuration;
    double _finalizedAssetDuration;
}

@property(retain, nonatomic) AVAssetWriter *assetWriter; // @synthesize assetWriter=_assetWriter;
@property(retain, nonatomic) NSDate *recordingCreationDate; // @synthesize recordingCreationDate=_recordingCreationDate;
@property(copy, nonatomic) NSURL *outputFileURL; // @synthesize outputFileURL=_outputFileURL;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sampleBufferQueue; // @synthesize sampleBufferQueue=_sampleBufferQueue;
@property(retain, nonatomic) AVCaptureAudioDataOutput *sampleBufferDataOutput; // @synthesize sampleBufferDataOutput=_sampleBufferDataOutput;
@property(copy, nonatomic) NSUUID *recordingSessionID; // @synthesize recordingSessionID=_recordingSessionID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) int state; // @synthesize state=_state;
@property(readonly, nonatomic) NSURL *recordingURL; // @synthesize recordingURL=_recordingURL;
@property(readonly, nonatomic) BOOL finalizedAssetEncounteredError; // @synthesize finalizedAssetEncounteredError=_finalizedAssetEncounteredError;
@property(readonly, nonatomic) double finalizedAssetDuration; // @synthesize finalizedAssetDuration=_finalizedAssetDuration;
@property(nonatomic) __weak id <RCCaptureAudioFileOutputRecordingDelegate> recordingDelegate; // @synthesize recordingDelegate=_recordingDelegate;
@property(readonly, nonatomic) BOOL manageSessionRunState; // @synthesize manageSessionRunState=_manageSessionRunState;
@property(readonly, nonatomic) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
- (void).cxx_destruct;
- (int)_state;
- (void)_setState:(int)arg1;
- (void)_checkIfRecordingSessionEverStarted:(id)arg1;
- (BOOL)_setupAssetWriter:(id *)arg1 sampleBufferRef:(struct opaqueCMSampleBuffer *)arg2;
- (void)_setupSampleBufferDataOutput;
- (void)_scheduleMainThreadDelegateBlock:(CDUnknownBlockType)arg1;
- (void)_unregisterForCatpureSessionNotifications;
- (void)_registerForCatpureSessionNotifications;
- (void)_sessionErrored:(id)arg1;
- (void)_sessionDidStopRunning:(id)arg1;
- (BOOL)_handleNotificationAsSessionStartFailure;
- (void)_sessionDidStartRunning:(id)arg1;
- (void)_interruptionDidBegin:(id)arg1;
- (BOOL)isRecordingPaused;
- (BOOL)isRecording;
@property(nonatomic) unsigned int maxRecordedFileSize; // @synthesize maxRecordedFileSize=_maxRecordedFileSize;
@property(nonatomic) double maxRecordedDuration; // @synthesize maxRecordedDuration=_maxRecordedDuration;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)_finalizeAssetWriting;
- (void)_clearSampleDataOutput;
- (void)stopCaptureSession;
- (BOOL)startCaptureSession;
- (void)endRecording;
- (void)resumeRecording;
- (void)pauseRecording;
- (BOOL)startRecordingToOutputFileURL:(id)arg1 creationDate:(id)arg2 recordingDelegate:(id)arg3;
- (id)connectionWithMediaType:(id)arg1;
@property(readonly, nonatomic) double assetWritingCheckpointInterval;
- (void)dealloc;
- (id)initWithCaptureSession:(id)arg1 manageSessionRunState:(BOOL)arg2;

@end

