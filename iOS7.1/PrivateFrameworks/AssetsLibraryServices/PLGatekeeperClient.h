//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSObject<OS_dispatch_queue>, NSObject<OS_xpc_object>;

@interface PLGatekeeperClient : NSObject
{
    NSObject<OS_dispatch_queue> *_serialReplyQueue;
    NSObject<OS_xpc_object> *connection;
}

+ (id)securityPolicyErrorForMissingEntitlement:(id)arg1;
+ (id)sharedInstance;
@property(nonatomic) NSObject<OS_xpc_object> *connection; // @synthesize connection;
- (id)videoMetadataAtPath:(id)arg1;
- (long long)estimatedOutputFileLengthForVideoURL:(id)arg1 fallbackFilePath:(id)arg2 exportPreset:(id)arg3 exportProperties:(id)arg4;
- (int)getCurrentModelVersion;
- (void)downloadAsset:(id)arg1 requestThumbnail:(BOOL)arg2 shouldPrioritize:(BOOL)arg3 shouldExtendTimer:(BOOL)arg4;
- (void)rebuildAllThumbnails;
- (void)resetDupesAnalysis;
- (void)rebuildCloudFeed;
- (void)analyzeMomentList:(id)arg1;
- (void)analyzeMoment:(id)arg1;
- (void)analyzeInvalidMomentsAndDupesIfNeeded;
- (void)analyzeAllMoments;
- (void)rebuildMomentLists;
- (void)rebuildMomentsIncremental:(BOOL)arg1;
- (void)automaticallyDeleteEmptyAlbum:(id)arg1;
- (void)setPersonInfoDictionary:(id)arg1 forPersonID:(id)arg2;
- (id)personInfoDictionaryForPersonID:(id)arg1;
- (id)emailAddressForKey:(int)arg1;
- (int)keyForEmailAddress:(id)arg1;
- (unsigned long long)attemptToPurgeSharedAssetsSpace:(unsigned long long)arg1;
- (unsigned long long)purgeableSharedAssetsSpace;
- (void)updateSharedAlbumsCachedServerConfigurationLimits;
- (void)waitUntilConnectionSendsAllMessages;
- (void)sendDaemonJob:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (void)cleanupForStoreDemoMode;
- (void)clearAllBulletinsWithLastClearedRecordID:(unsigned int)arg1;
- (id)getThumbnailImageDataForBulletinWithRecordID:(unsigned int)arg1;
- (int)getCurrentApplicationBadgeCount;
- (id)getCurrentBulletins;
- (void)repairSingletonObjects;
- (void)createPhotostreamAlbumWithStreamID:(id)arg1;
- (void)enablePhotostreamsWithStreamID:(id)arg1;
- (void)recoverFromCrashIfNeeded;
- (void)clearChangeStore;
- (BOOL)hasCompletedMomentAnalysis;
- (BOOL)hasCompletedRestorePostProcessing;
- (void)recalculateCachedAlbumCounts;
- (void)notifyAboutTerminationDueToUncaughtException:(id)arg1;
- (void)dataMigrationWillFinish;
- (void)repairPotentialModelCorruption;
- (void)cleanupModelAfteriTunesRestore;
- (unsigned int)secondsNeededToCleanupModelAfteriTunesRestore;
- (void)writeDataInBackground:(id)arg1 toFileURL:(id)arg2;
- (void)updateRestoredAssetWithUUID:(id)arg1 paths:(id)arg2;
- (void)finalizeOTARestoreRecreatingAlbums:(BOOL)arg1;
- (void)updateModelAfterOTARestore;
- (void)updateCameraPreviewWellImage:(id)arg1;
- (void)updateThumbnailsForPhotos:(id)arg1 waitForReply:(BOOL)arg2 assignNewIndex:(BOOL)arg3 forceRefresh:(BOOL)arg4;
- (void)setLargePreviewImageForAssetWithURL:(id)arg1 imageData:(id)arg2 properties:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)getLibrarySizes:(CDUnknownBlockType)arg1;
- (void)getPhotosAndVideosCountWithHandler:(CDUnknownBlockType)arg1;
- (void)launchAssetsd;
- (void)importFileSystemAssetsWaitingForReply:(BOOL)arg1;
- (void)createPhotoLibraryDatabase;
- (void)setExternalUsageIntent:(unsigned int)arg1 forAssetWithURL:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)deleteAssetWithURL:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)addAssetWithURL:(id)arg1 toAlbumWithUUID:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)addGroupWithName:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)imageDataForAsset:(id)arg1 format:(int)arg2;
- (void)requestImageDataForAsset:(id)arg1 format:(int)arg2 handler:(CDUnknownBlockType)arg3;
- (id)fileURLForNewAssetWithType:(unsigned int)arg1 extension:(id)arg2;
- (void)batchSaveAssetsWithJobDictionaries:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)saveAssetWithJobDictionary:(id)arg1 handler:(CDUnknownBlockType)arg2 imageSurface:(void *)arg3 previewImageSurface:(void *)arg4;
- (id)fileURLForAssetURL:(id)arg1 withAdjustments:(BOOL)arg2;
- (int)fileDescriptorForAssetURL:(id)arg1;
- (void)requestAccessWithHandler:(CDUnknownBlockType)arg1;
- (id)init;
- (id)deviceSpecificReplyQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *replyQueue;
- (id)sendQueue;

@end

