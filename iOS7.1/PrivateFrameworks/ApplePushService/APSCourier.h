//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "APSAppLaunchStatsDelegate.h"
#import "APSConnectionServerDelegate.h"
#import "APSCourierConnectionDelegate.h"
#import "APSNetworkMonitorDelegate.h"
#import "APSOutgoingMessageQueueDelegate.h"
#import "APSSystemMonitorListener.h"
#import "APSTopicManagerDelegate.h"
#import "PCInterfaceMonitorDelegate.h"

@class APSCourierConnection, APSEnvironment, APSNetworkMonitor, APSOutgoingMessageQueue, APSOutgoingQueue, APSProtocolParser, APSPushHistory, APSTopicManager, NSData, NSDate, NSMutableArray, NSMutableDictionary, NSString, NSTimer, PCPersistentTimer;

@interface APSCourier : NSObject <APSTopicManagerDelegate, APSNetworkMonitorDelegate, APSCourierConnectionDelegate, APSConnectionServerDelegate, APSOutgoingMessageQueueDelegate, APSSystemMonitorListener, PCInterfaceMonitorDelegate, APSAppLaunchStatsDelegate>
{
    id <APSCourierDelegate> _delegate;
    APSEnvironment *_environment;
    NSMutableArray *_connections;
    struct __SecIdentity *_clientIdentity;
    APSPushHistory *_pushHistory;
    APSCourierConnection *_courierConnection;
    APSProtocolParser *_protocolParser;
    NSData *_cachedPublicToken;
    BOOL _shouldRun;
    BOOL _enabled;
    BOOL _enableCriticalReliability;
    NSTimer *_criticalFlushTimer;
    BOOL _isConnectedToService;
    BOOL _useAlternatePort;
    unsigned int _consecutiveConnectionFailureCount;
    NSDate *_lastConnectionAttempt;
    PCPersistentTimer *_pendingMessageReconnectTimer;
    double _lastClientRequestedKeepaliveTime;
    double _lastLateCriticalOutgoingMessageAcknowledgmentReconnectTime;
    APSNetworkMonitor *_networkMonitor;
    NSString *_lastPushRAT;
    int _lastPushLQ;
    NSMutableDictionary *_connectionPortNamesToConnections;
    NSMutableDictionary *_hashesToEnabledTopics;
    NSMutableDictionary *_hashesToIgnoredTopics;
    NSMutableDictionary *_hashesToOpportunisticTopics;
    APSTopicManager *_topicManager;
    PCPersistentTimer *_criticalReliabilityTimer;
    void *_criticalReliabilityPowerAssertion;
    APSOutgoingMessageQueue *_outgoingMessageQueue;
    APSOutgoingQueue *_tokenRequestQueue;
    double _slowReceiveThreshold;
}

@property(readonly, nonatomic) APSEnvironment *environment; // @synthesize environment=_environment;
@property(nonatomic) BOOL isConnectedToService; // @synthesize isConnectedToService=_isConnectedToService;
- (void)_clearKeepAliveResponseTimerOnInterface:(int)arg1;
- (void)_startKeepAliveResponseTimerOnInterface:(int)arg1;
- (void)_clearConnectionEstablishTimerOnInterface:(int)arg1;
- (void)_startConnectionEstablishTimerOnInterface:(int)arg1;
- (BOOL)shouldForceShortTimeouts;
- (void)outgoingMessageQueue:(id)arg1 requestCriticalMessageFlushWithPaddingLength:(unsigned int)arg2;
- (void)outgoingMessageQueueShortMessageTimeoutExceeded:(id)arg1;
- (void)outgoingMessageQueue:(id)arg1 lateAcknowledgmentForCriticalOutgoingMessage:(id)arg2;
- (void)_handleOutgoingMessageAcknowledgment:(id)arg1 onInterface:(int)arg2;
- (void)_sendQueuedOutgoingMessages;
- (void)_sendOutgoingMessage:(id)arg1;
- (void)_handleAppTokenGenerateResponse:(id)arg1 onInterface:(int)arg2;
- (void)_handleFlushMessage:(id)arg1 onInterface:(int)arg2;
- (void)_handleKeepAliveResponseMessage:(id)arg1 onInterface:(int)arg2;
- (void)_performKeepAliveOnInterface:(int)arg1;
- (void)_performFlushWithPaddingLength:(unsigned int)arg1;
- (id)_copyParsedPayload:(id)arg1 messageId:(id *)arg2 errorString:(id *)arg3;
- (void)_handleMessageMessage:(id)arg1 onInterface:(int)arg2;
- (void)_notePush;
- (void)_notifyForIncomingMessage:(id)arg1;
- (void)_sendFilterMessageOnInterface:(int)arg1;
- (void)_processInvalidIdentity;
- (void)_handleConnectedMessage:(id)arg1 onInterface:(int)arg2;
- (void)_pendingMessageReconnectTimerFired;
- (void)_handleConnectionFailureOnInterface:(int)arg1 forceDelayedReconnect:(BOOL)arg2;
- (void)courierConnection:(id)arg1 errorOccured:(id)arg2 onInterface:(int)arg3;
- (void)courierConnection:(id)arg1 streamEndedOnInterface:(int)arg2;
- (unsigned int)courierConnection:(id)arg1 dataReceived:(id)arg2 onInterface:(int)arg3;
- (void)courierConnectionHasConnected:(id)arg1 onInterface:(int)arg2;
- (void)courierConnection:(id)arg1 hasDeterminedServerHostname:(id)arg2 onInterface:(int)arg3;
- (void)courierConnection:(id)arg1 receivedServerBag:(id)arg2;
- (void)courierConnection:(id)arg1 connectionEstablishTimerFiredOnInterface:(int)arg2;
- (void)courierConnection:(id)arg1 keepAliveResponseTimerFiredOnInterface:(int)arg2;
- (void)courierConnection:(id)arg1 disconnectStreamOnInterface:(int)arg2;
- (void)courierConnection:(id)arg1 connectionManager:(id)arg2 handleEvent:(int)arg3 onInterface:(int)arg4;
- (void)interfaceRadioHotnessChanged:(id)arg1;
- (void)interfaceReachabilityChanged:(id)arg1;
- (void)interfaceLinkQualityChanged:(id)arg1 previousLinkQuality:(int)arg2;
- (void)networkMonitorWiFiBecameAssociated:(id)arg1;
- (void)networkMonitor:(id)arg1 shouldUseDualModeChanged:(BOOL)arg2;
- (void)topicManagerRequestToSendFilter:(id)arg1;
- (void)_logTopics;
- (void)_schedulePendingWorkUpdate;
- (void)_updatePendingWork;
- (void)_processLowPriorityIncomingMessage:(id)arg1;
- (void)_processPendingWorkForTopic:(id)arg1;
- (void)resourceUpdate:(unsigned int)arg1 withStatus:(unsigned int)arg2;
- (void)pendingWorkCanProcess:(id)arg1;
- (void)systemDidUnlock;
- (void)systemDidLock;
- (void)_dumpLogsForInconsistencyIfNecessary;
- (void)__dumpLogsForInconsistencyIfNecessary;
- (BOOL)_isWiFiLinkQualityBetter;
- (void)_deleteClientIdentityRequestingReplacement;
- (struct __SecIdentity *)_getClientIdentity;
- (void)_disconnectStreamForInterface:(int)arg1;
- (void)_disconnectAllStreams;
- (BOOL)_connectStreamWithInterfacePreference:(int)arg1;
- (void)_adjustConnection;
- (BOOL)_adjustConnectionWithInterfacePreference:(int)arg1;
@property(readonly, nonatomic) BOOL shouldRun;
- (void)_processShouldRunChangeIfNecessary;
- (void)setEnabled:(BOOL)arg1;
- (void)_processStoredOutgoingMessages;
- (void)_processStoredIncomingMessages;
@property(readonly, nonatomic) double currentKeepAliveInterval; // @dynamic currentKeepAliveInterval;
- (void)setMessageSize:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int messageSize; // @dynamic messageSize;
- (void)setPublicToken:(id)arg1 fromServer:(BOOL)arg2;
@property(readonly, nonatomic) NSData *publicToken; // @dynamic publicToken;
@property(readonly, nonatomic) NSString *ifname;
- (void)_recreateCacheDictionaries;
- (void)_setTopicsForCategory:(int)arg1;
- (void)_processIsPowerEfficientToSendChange;
- (void)periodicSignalFired;
- (void)invalidateDeviceIdentity;
- (void)requestConnectionIfNeeded;
- (void)_criticalReliabilityTimerFired;
- (void)_criticalReliabilityFlushTimerFired;
- (void)_requestKeepAlive:(BOOL)arg1 orConnection:(BOOL)arg2;
- (void)_requestKeepAlive:(BOOL)arg1 orConnection:(BOOL)arg2 onInterface:(int)arg3;
- (void)_recalculateCriticalReliability;
- (void)connection:(id)arg1 handleAckIncomingMessageWithGuid:(id)arg2;
- (void)connection:(id)arg1 didInvalidatePublicTokenForTopic:(id)arg2 identifier:(id)arg3;
- (void)connection:(id)arg1 didRequestPublicTokenForTopic:(id)arg2 identifier:(id)arg3;
- (void)connection:(id)arg1 didReceiveFakeMessageToSend:(id)arg2;
- (void)connection:(id)arg1 didReceiveCancellationForOutgoingMessageWithID:(unsigned int)arg2;
- (void)connection:(id)arg1 didReceiveOutgoingMessageToSend:(id)arg2;
- (void)connectionChangedCriticalReliability:(id)arg1;
- (BOOL)connectionDelegateIsConnectedToService:(id)arg1;
- (BOOL)connectionDelegateHasIdentity:(id)arg1;
- (void)connectionWasClosed:(id)arg1;
- (void)connectionTopicsChanged:(id)arg1;
- (void)removeConnectionForConnectionPortName:(id)arg1;
- (BOOL)isInternetReachableOnInterface:(int)arg1;
- (int)linkQualityForInterface:(int)arg1;
- (unsigned int)connectionTypeForInterface:(int)arg1;
- (id)connectionForConnectionPortName:(id)arg1;
@property(readonly, nonatomic) BOOL hasIdentity;
- (void)addConnection:(id)arg1;
- (id)debugDescription;
- (void)dealloc;
- (id)initWithEnvironment:(id)arg1 delegate:(id)arg2;

@end

