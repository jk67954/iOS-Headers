//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVCaptureFileOutputRecordingDelegate.h"
#import "AVCaptureMetadataOutputObjectsDelegate.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate.h"
#import "PLCameraEffectsRendererDelegate.h"
#import "SBSAccelerometerDelegate.h"

@class AVCaptureDevice, AVCaptureDeviceFormat, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCaptureMovieFileOutput, AVCaptureOutput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, NSArray, NSDictionary, NSMutableArray, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, NSTimer, PLCameraEffectsRenderer, SBSAccelerometer;

@interface PLCameraController : NSObject <AVCaptureMetadataOutputObjectsDelegate, PLCameraEffectsRendererDelegate, SBSAccelerometerDelegate, AVCaptureFileOutputRecordingDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
{
    AVCaptureSession *_avCaptureSession;
    AVCaptureDevice *_avCaptureDeviceFront;
    AVCaptureDevice *_avCaptureDeviceBack;
    AVCaptureDevice *_avCaptureDeviceAudio;
    AVCaptureDeviceInput *_avCaptureInputFront;
    AVCaptureDeviceInput *_avCaptureInputBack;
    AVCaptureDeviceInput *_avCaptureInputAudio;
    AVCaptureStillImageOutput *_avCaptureOutputPhoto;
    AVCaptureMovieFileOutput *_avCaptureOutputVideo;
    AVCaptureVideoDataOutput *_avCaptureOutputPanorama;
    AVCaptureVideoDataOutput *_avCaptureOutputEffectPreview;
    AVCaptureMetadataOutput *_avCaptureOutputMetadata;
    AVCaptureDeviceFormat *_mogulFormatBack;
    AVCaptureDeviceFormat *_mogulFormatFront;
    id _panoramaProcessor;
    id _panoramaImageQueue;
    struct CGSize _panoramaPreviewSize;
    float _panoramaPreviewScale;
    NSObject<OS_dispatch_queue> *_avCaptureSessionDispatchQueue;
    NSObject<OS_dispatch_queue> *_avCaptureOutputMetadataQueue;
    AVCaptureDevice *_currentDevice;
    AVCaptureDeviceInput *_currentInput;
    AVCaptureOutput *_currentOutput;
    AVCaptureVideoPreviewLayer *_previewLayer;
    struct CGRect _cleanAperture;
    BOOL _shouldBeStopped;
    int _cameraMode;
    int _cameraDevice;
    int _flashMode;
    int _captureOrientation;
    BOOL _imageWriterQueueIsAvailable;
    unsigned int _ioSurfaceCounter;
    BOOL _hdrCaptureIncludesEV0Image;
    int _hdrEV0PhotoCaptureCount;
    id <PLCameraControllerDelegate> _delegate;
    double _maximumCaptureDuration;
    int _videoCaptureQuality;
    NSString *_videoCapturePath;
    SBSAccelerometer *_accelerometer;
    struct CGImage *_lastVideoPreviewFrameImageRef;
    BOOL _lockFocusLock;
    BOOL _lockFocusAfterFocusFinishes;
    BOOL _isFocusingOnFace;
    int _cameraOrientation;
    NSTimer *_idleTimerTimer;
    BOOL _delaySuspend;
    NSTimer *_delaySuspendTimer;
    float _maxVideoZoomFactorRear;
    float _maxVideoZoomFactorFront;
    struct {
        unsigned int supportsVideo:1;
        unsigned int supportsFocus:1;
        unsigned int supportsExposure:1;
        unsigned int supportsHDRRear:1;
        unsigned int supportsHDRFront:1;
        unsigned int supportsSuggestedHDRRear:1;
        unsigned int supportsSuggestedHDRFront:1;
        unsigned int supportsAvalancheRear:1;
        unsigned int supportsAvalancheFront:1;
        unsigned int supportsMogulRear:1;
        unsigned int supportsMogulFront:1;
        unsigned int supportsLiveEffects:1;
        unsigned int supportsPanorama:1;
        unsigned int supportsVideoStillCapture:1;
        unsigned int supportsPreviewDuringHDR:1;
        unsigned int hasFlash:1;
        unsigned int hasBackCamera:1;
        unsigned int hasFrontCamera:1;
        unsigned int deferStartVideoCapture:1;
        unsigned int inCall:1;
        unsigned int isCapturingPanorama:1;
        unsigned int isProcessingPanorama:1;
        unsigned int focusDisabled:1;
        unsigned int focusWasModified:1;
        unsigned int serverDied:1;
        unsigned int didGetDeviceUnavailableInBackground:1;
        unsigned int didSetLocationData:1;
        unsigned int isChangingMode:1;
        unsigned int flashWillFireAutomatically:1;
        unsigned int torchWillFireAutomatically:1;
        unsigned int isCameraApp:1;
        unsigned int didSendPreviewStartedCallbackToEmptyDelegate:1;
        unsigned int didGetPreviewStartedCallbackAfterResume:1;
        unsigned int logFocusInfo:1;
        unsigned int logPreviewInfo:1;
        unsigned int logCaptureInfo:1;
        unsigned int logFlashInfo:1;
        unsigned int logDebugInfo:1;
        unsigned int logPanoInfo:1;
        unsigned int enable720p60Recording:1;
        unsigned int pptTestDisableAutofocus:1;
        unsigned int isInternalInstall:1;
        unsigned int shouldTearDownPano:1;
        unsigned int convertSampleBufferToJPEG:1;
        unsigned int delegateDidStartSession:1;
        unsigned int delegateWillStartPreview:1;
        unsigned int delegatePreviewDidStart:1;
        unsigned int delegateSessionDidStart:1;
        unsigned int delegateDidStopSession:1;
        unsigned int delegateWillStopSession:1;
        unsigned int delegateSessionDidStop:1;
        unsigned int delegateSessionWasInterrupted:1;
        unsigned int delegateSessionInterruptionEnded:1;
        unsigned int delegateServerDied:1;
        unsigned int delegateCleanApertureDidChange:1;
        unsigned int delegateModeWillChange:1;
        unsigned int delegateModeDidChange:1;
        unsigned int delegateWillTakePhoto:1;
        unsigned int delegateDidTakePhoto:1;
        unsigned int delegateCapturedPhoto:1;
        unsigned int delegateDidChangeCaptureAbility:1;
        unsigned int delegateDidChangePanoramaConfiguration:1;
        unsigned int delegateDidUpdatePanoramaPreview:1;
        unsigned int delegateDidReceivePanoramaIssue:1;
        unsigned int delegateDidStartPanoramaCapture:1;
        unsigned int delegateWillStopPanoramaCapture:1;
        unsigned int delegatePanoramaWillStartProcessing:1;
        unsigned int delegatePanoramaDidStopProcessing:1;
        unsigned int delegateCapturedPanorama:1;
        unsigned int delegateVideoCaptureDidStart:1;
        unsigned int delegateDidStopVideoCapture:1;
        unsigned int delegateVideoCaptureDidStop:1;
        unsigned int delegateWillStartAutofocus:1;
        unsigned int delegateFocusDidStart:1;
        unsigned int delegateFocusDidEnd:1;
        unsigned int delegateFaceMetadataDidChange:1;
        unsigned int delegateVideoZoomFactorDidChange:1;
        unsigned int delegateFlashWillFireChanged:1;
        unsigned int delegateTorchActiveChanged:1;
        unsigned int delegateTorchAvailabilityChanged:1;
        unsigned int delegateHDRSuggestionChanged:1;
    } _cameraFlags;
    NSObject<OS_dispatch_queue> *_dispatchTimerQueue;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    BOOL __previewPaused;
    BOOL __previewLayerEnabledForRenderer;
    BOOL __videoDataOutputEnabledForRenderer;
    BOOL _HDRDetectionEnabled;
    BOOL _performingTimedCapture;
    BOOL _disableAllPreviewSuspensionDuringCapture;
    BOOL __atomicEffectsAvailable;
    BOOL __configuringCamera;
    BOOL __atomicModeChangeWaitingForPreviewStarted;
    BOOL __atomicModeChangeWaitingForConfigureSession;
    BOOL __wasStillImageStabilzationOnBeforeTimedCapture;
    CDUnknownBlockType postSessionSetupBlock;
    PLCameraEffectsRenderer *_effectsRenderer;
    NSArray *_supportedCameraModes;
    NSObject<OS_dispatch_queue> *__effectFilterIndexQueue;
    NSDictionary *__effectFilterIndices;
    NSObject<OS_dispatch_queue> *__captureIsolationQueue;
    NSObject<OS_dispatch_queue> *__effectRenderingQueue;
    NSMutableArray *__currentFaceMetadata;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSMutableArray *_currentFaceMetadata; // @synthesize _currentFaceMetadata=__currentFaceMetadata;
@property(readonly, nonatomic) BOOL _wasStillImageStabilzationOnBeforeTimedCapture; // @synthesize _wasStillImageStabilzationOnBeforeTimedCapture=__wasStillImageStabilzationOnBeforeTimedCapture;
@property(getter=_isAtomicModeChangeWaitingForConfigureSession, setter=_setAtomicModeChangeWaitingForConfigureSession:) BOOL _atomicModeChangeWaitingForConfigureSession; // @synthesize _atomicModeChangeWaitingForConfigureSession=__atomicModeChangeWaitingForConfigureSession;
@property(getter=_isAtomicModeChangeWaitingForPreviewStarted, setter=_setAtomicModeChangeWaitingForPreviewStarted:) BOOL _atomicModeChangeWaitingForPreviewStarted; // @synthesize _atomicModeChangeWaitingForPreviewStarted=__atomicModeChangeWaitingForPreviewStarted;
@property(readonly) NSObject<OS_dispatch_queue> *_effectRenderingQueue; // @synthesize _effectRenderingQueue=__effectRenderingQueue;
@property(readonly) NSObject<OS_dispatch_queue> *_captureIsolationQueue; // @synthesize _captureIsolationQueue=__captureIsolationQueue;
@property(getter=_isConfiguringCamera, setter=_setConfiguringCamera:) BOOL _configuringCamera; // @synthesize _configuringCamera=__configuringCamera;
@property(retain, nonatomic, setter=_setEffectFilterIndices:) NSDictionary *_effectFilterIndices; // @synthesize _effectFilterIndices=__effectFilterIndices;
@property(readonly) NSObject<OS_dispatch_queue> *_effectFilterIndexQueue; // @synthesize _effectFilterIndexQueue=__effectFilterIndexQueue;
@property(setter=_setAtomicEffectsAvailable:) BOOL _atomicEffectsAvailable; // @synthesize _atomicEffectsAvailable=__atomicEffectsAvailable;
@property(nonatomic) BOOL disableAllPreviewSuspensionDuringCapture; // @synthesize disableAllPreviewSuspensionDuringCapture=_disableAllPreviewSuspensionDuringCapture;
- (void)_setPerformingTimedCapture:(BOOL)arg1;
@property(nonatomic) BOOL performingTimedCapture; // @synthesize performingTimedCapture=_performingTimedCapture;
- (void)_setSupportedCameraModes:(id)arg1;
@property(copy, nonatomic) NSArray *supportedCameraModes; // @synthesize supportedCameraModes=_supportedCameraModes;
- (void)_setEffectsRenderer:(id)arg1;
@property(retain) PLCameraEffectsRenderer *effectsRenderer; // @synthesize effectsRenderer=_effectsRenderer;
@property(nonatomic, getter=isHDRDetectionEnabled) BOOL HDRDetectionEnabled; // @synthesize HDRDetectionEnabled=_HDRDetectionEnabled;
@property(nonatomic) int captureOrientation; // @synthesize captureOrientation=_captureOrientation;
@property(copy, nonatomic) CDUnknownBlockType postSessionSetupBlock; // @synthesize postSessionSetupBlock;
@property(readonly, nonatomic) struct CGRect cleanAperture; // @synthesize cleanAperture=_cleanAperture;
@property(readonly, nonatomic) struct CGSize panoramaPreviewSize; // @synthesize panoramaPreviewSize=_panoramaPreviewSize;
@property(readonly, nonatomic) float panoramaPreviewScale; // @synthesize panoramaPreviewScale=_panoramaPreviewScale;
@property(readonly, nonatomic) AVCaptureVideoPreviewLayer *previewLayer; // @synthesize previewLayer=_previewLayer;
@property(readonly, nonatomic) AVCaptureStillImageOutput *imageOutput; // @synthesize imageOutput=_avCaptureOutputPhoto;
@property(nonatomic) AVCaptureOutput *currentOutput; // @synthesize currentOutput=_currentOutput;
@property(nonatomic) AVCaptureDeviceInput *currentInput; // @synthesize currentInput=_currentInput;
@property(nonatomic) AVCaptureDevice *currentDevice; // @synthesize currentDevice=_currentDevice;
@property(readonly, nonatomic) AVCaptureSession *currentSession; // @synthesize currentSession=_avCaptureSession;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)cameraEffectsRenderer:(id)arg1 didFinishTransitionToShowGrid:(BOOL)arg2;
- (void)cameraEffectsRenderer:(id)arg1 didStartTransitionToShowGrid:(BOOL)arg2 animated:(BOOL)arg3;
- (void)cameraEffectsRenderer:(id)arg1 willTransitionToShowGrid:(BOOL)arg2;
- (void)cameraEffectsRenderer:(id)arg1 requestsVideoDataOutputEnabled:(BOOL)arg2;
- (void)cameraEffectsRenderer:(id)arg1 requestsPreviewLayerEnabled:(BOOL)arg2;
- (void)cameraEffectsRendererDidStartPreview:(id)arg1;
- (void)_updateEffectsVideoDataOutputEnabled;
@property(nonatomic, setter=_setVideoDataOutputEnabledForRenderer:) BOOL _videoDataOutputEnabledForRenderer; // @synthesize _videoDataOutputEnabledForRenderer=__videoDataOutputEnabledForRenderer;
- (void)_updatePreviewLayerEnabled;
@property(nonatomic, setter=_setPreviewLayerEnabledForRenderer:) BOOL _previewLayerEnabledForRenderer; // @synthesize _previewLayerEnabledForRenderer=__previewLayerEnabledForRenderer;
@property(nonatomic, getter=_isPreviewPaused, setter=_setPreviewPaused:) BOOL _previewPaused; // @synthesize _previewPaused=__previewPaused;
- (void)resumePreview;
- (void)pausePreview;
- (id)recentFaceMetadata;
- (void)finishTimedCapture;
- (void)continueTimedCapture;
- (void)startTimedCapture;
- (id)_mogulFormatFromDevice:(id)arg1;
- (double)mogulFrameRate;
- (double)currentMaxFrameDuration;
- (double)currentMinFrameDuration;
@property(nonatomic, setter=_setEffectsAvailable:) BOOL _effectsAvailable;
- (void)setEffectFilterIndices:(id)arg1 forceStateChange:(BOOL)arg2;
- (id)effectFilterIndices;
- (void)_notifyEffectFilterIndexChanged;
- (void)setEffectFilterIndex:(unsigned int)arg1 forMode:(int)arg2;
- (unsigned int)_sanitizeEffectFilterIndex:(unsigned int)arg1 forMode:(int)arg2;
- (unsigned int)effectFilterIndexForMode:(int)arg1;
@property(readonly, nonatomic) NSArray *activeFilters;
- (unsigned int)_activeFilterIndex;
- (void)_updateEffectsRendererFilterIndexForceStateChange:(BOOL)arg1 renderNotifyBlock:(CDUnknownBlockType)arg2;
- (void)_updateEffectsRendererMirroring;
- (void)_updateSupportedCameraModes;
- (void)cancelVideoZoomRamp;
- (void)rampToVideoZoomFactor:(float)arg1 withRate:(float)arg2;
@property(nonatomic) float videoZoomFactor;
- (float)_limitZoomFactor:(float)arg1 forDevice:(id)arg2;
- (void)_setOrientationEventsEnabled:(BOOL)arg1;
@property(readonly, nonatomic) int cameraOrientation;
- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(int)arg2;
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;
- (void)postOrientationChangedNotification:(int)arg1 force:(BOOL)arg2;
- (BOOL)supportsLiveEffects;
- (BOOL)supportsAvalancheForDevice:(int)arg1;
- (void)_synchronizeHDRSettings;
- (BOOL)supportsPreviewDuringHDR;
- (void)_suggestedHDRChanged;
@property(readonly, nonatomic, getter=isHDRSuggested) BOOL HDRSuggested;
- (BOOL)_supportsHDRSuggestionForCaptureDevice:(id)arg1;
- (BOOL)supportsHDRSuggestionForDevice:(int)arg1;
@property(readonly, nonatomic) BOOL supportsHDRSuggestion;
- (BOOL)supportsHDRForDevice:(int)arg1 mode:(int)arg2;
@property(readonly, nonatomic) BOOL supportsHDR;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)isTorchDisabled;
- (void)_updateTorchAvailability;
- (BOOL)isTorchOn;
- (BOOL)isTorchActive;
- (BOOL)flashWillFire;
@property(nonatomic) int flashMode;
- (BOOL)hasFlash;
- (void)_setFlashMode:(int)arg1 force:(BOOL)arg2;
- (void)_torchLevelChanged;
- (void)_runOnMainThreadImmediatelyIfPossibleWithBlock:(CDUnknownBlockType)arg1;
- (void)_torchActiveChanged;
- (void)_flashStateChanged;
- (void)setFaceDetectionEnabled:(BOOL)arg1;
- (void)_setFaceDetectionEnabled:(BOOL)arg1 forCaptureDevice:(id)arg2 captureOutput:(id)arg3;
- (void)_faceMetadataDidChange:(id)arg1;
- (void)_faceRectangleChanged;
- (struct CGRect)faceRectangle;
- (BOOL)isFocusingOnFace;
- (void)_whiteBalanceCompleted;
- (void)_whiteBalanceStarted;
- (void)_exposureCompleted;
- (BOOL)isExposing;
- (void)_exposureStarted;
- (void)_focusHasChanged:(id)arg1;
- (void)_focusStarted;
- (void)_focusCompleted;
- (void)_lockedFocusOperationFinished;
- (void)_autofocusOperationFinished;
- (void)_focusOperationFinished;
- (void)_commonFocusFinished;
- (void)setFocusDisabled:(BOOL)arg1;
- (BOOL)isFocusing;
- (void)lockFocusForTimedCapture;
- (void)lockFocusForRecording;
- (void)lockFocusAndExposureForPano;
- (void)userInitiatedLockFocus;
- (void)_lockFocus:(BOOL)arg1 lockExposure:(BOOL)arg2 lockWhiteBalance:(BOOL)arg3;
- (BOOL)isExposureLockSupported;
- (BOOL)isFocusLockSupported;
- (BOOL)canLockFocus;
- (void)_cancelDelayedFocusRequests;
- (void)performAutofocusAfterCapture;
- (void)_autofocusAfterCapture;
- (void)autofocus;
- (void)_autofocus:(BOOL)arg1 autoExpose:(BOOL)arg2;
- (void)_pptTestSetAutofocusDisabled:(BOOL)arg1;
- (void)restartAutoFocus;
- (int)currentFocusMode;
- (void)smoothFocusAtCenter;
- (void)focusAtAdjustedPoint:(struct CGPoint)arg1;
- (BOOL)canFocusAtPoint;
- (BOOL)isFocusAllowed;
- (void)_panoramaDidStop;
- (void)stopPanoramaCapture;
- (void)startPanoramaCapture;
- (void)setPanoramaImageQueueLayer:(id)arg1;
- (BOOL)isCapturingPanorama;
- (BOOL)canCapturePanorama;
- (BOOL)supportsPanorama;
- (void)setVideoCaptureMaximumDuration:(double)arg1;
- (void)setVideoCaptureQuality:(int)arg1;
- (id)videoCapturePath;
- (void)stopVideoCapture;
- (double)minimumVideoCaptureDuration;
- (void)startVideoCapture;
- (void)_setVideoCapturePath:(id)arg1;
- (id)_videoMetadataArrayIncludingSensitiveProperties:(BOOL)arg1;
- (void)_setOrientation;
- (void)_setOrientationForConnection:(id)arg1;
- (BOOL)canCaptureVideo;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3;
- (void)_movieFileRecordingCompleted:(id)arg1;
- (void)_verifyVideoConsolidationForVideoAtPath:(id)arg1 outUserInfo:(id *)arg2;
- (void)_removeVideoCaptureFileAndDirectoryAtPath:(id)arg1;
- (BOOL)isCapturingVideo;
- (void *)_newFilteredSurfaceFromSurface:(void *)arg1 filters:(id)arg2;
- (BOOL)capturePhotoUsingHDR:(BOOL)arg1;
- (void)capturePhoto;
- (BOOL)imageWriterQueueIsAvailable;
- (BOOL)canCapturePhotoDuringRecording;
- (BOOL)canCapturePhoto;
- (void)_didTakePhoto;
- (void)_willTakePhoto;
- (void)_capturedPhotoWithDictionary:(id)arg1 error:(id)arg2 HDRUsed:(BOOL)arg3;
- (void)_processCapturedPhotoWithDictionary:(id)arg1 error:(id)arg2 HDRUsed:(BOOL)arg3;
- (BOOL)_sanityCheckSessionCanCaptureWithOutput:(id)arg1;
- (void)_sessionRuntimeErrored:(id)arg1;
- (void)_interruptionEnded:(id)arg1;
- (void)_wasInterrupted:(id)arg1;
- (void)_resetIdleTimer;
- (void)_delayIdleTimerByTimeInterval:(double)arg1;
- (void)_serverDied:(id)arg1;
- (void)_recoverFromServerError;
- (void)stopPreview;
- (void)_previewStarted;
- (void)_clearPreviewLayer;
- (BOOL)isPreviewMirrored;
@property(nonatomic) int previewOrientation;
- (void)startPreview;
- (void)startPreview:(CDUnknownBlockType)arg1;
- (void)_startPreview:(CDUnknownBlockType)arg1;
- (void)_startPreviewWithCameraDevice:(int)arg1 cameraMode:(int)arg2 effectFilterIndices:(id)arg3;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)_didSendPreviewStartedCallbackToEmptyDelegate;
- (void)_sessionStopped:(id)arg1;
- (void)_sessionStarted:(id)arg1;
- (void)_deviceStarted:(id)arg1;
- (void)_tearDownCamera;
- (void)_setDelaySuspend:(BOOL)arg1;
- (void)_forceDelaySuspendTimeout;
- (void)_teardownDelaySuspendTimer;
- (void)_destroyCamera;
- (BOOL)_setupCamera;
- (id)_currentVideoConnection;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_debug_checkIris;
- (void)_debug_cancelWaitForIris;
- (void)_debug_waitForIrisToOpen;
- (id)_debug_dispatchTimerQueue;
- (void)_debug_teardownDispatchTimer;
- (void)_jankyPreviewStartedWorkaround;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationSuspended:(id)arg1;
- (float)maximumZoomFactorForDevice:(int)arg1;
- (float)minimumZoomFactorForDevice:(int)arg1;
- (void)_unlockCurrentDeviceForConfiguration;
- (BOOL)_lockCurrentDeviceForConfiguration;
@property(nonatomic) BOOL isCameraApp;
- (void)_setLocationEnabled:(BOOL)arg1;
- (BOOL)_modeUsesCompassHeading;
- (BOOL)_isVideoMode:(int)arg1;
- (void)_inputPortFormatDescriptionDidChange:(id)arg1;
@property(nonatomic) BOOL convertSampleBufferToJPEG;
@property(nonatomic) int cameraDevice;
- (BOOL)hasRearCamera;
- (BOOL)hasFrontCamera;
- (void)_setDefaultPrewarmDate:(id)arg1;
@property(nonatomic, getter=_isModeChangeWaitingForConfigureSession, setter=_setModeChangeWaitingForConfigureSession:) BOOL _modeChangeWaitingForConfigureSession;
@property(nonatomic, getter=_isModeChangeWaitingForPreviewStarted, setter=_setModeChangeWaitingForPreviewStarted:) BOOL _modeChangeWaitingForPreviewStarted;
- (void)_notifyControllerModeDidChange;
- (void)_setCameraMode:(int)arg1 cameraDevice:(int)arg2;
@property(nonatomic) int cameraMode;
- (id)_videoModeSessionPreset;
- (BOOL)_configureSessionWithCameraMode:(int)arg1 cameraDevice:(int)arg2 HDRDetectionEnabled:(BOOL)arg3;
- (BOOL)_safeSetCameraMode:(int)arg1 cameraDevice:(int)arg2;
- (BOOL)supportsVideoCapture;
- (BOOL)isChangingModes;
- (void)executeBlockOnMainQueue:(CDUnknownBlockType)arg1;
- (void)enqueueBlockOnMainQueue:(CDUnknownBlockType)arg1;
- (void)enqueueBlockInCaptureSessionQueue:(CDUnknownBlockType)arg1;
- (BOOL)isReady;
- (void)_imageWriterQueueAvailabilityChanged;
- (void)releaseIOSurface;
- (void)captureIOSurface;
- (BOOL)hasInheritedForegroundState;
- (BOOL)inCall;
- (void)_inCallStatusChanged:(BOOL)arg1;
- (void)_callStateDidChange:(id)arg1;
- (void)_updateCallStatus;
- (void)dealloc;
- (id)init;

@end

