//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSDictionary, NSIndexSet, NSLock, NSMutableDictionary, NSMutableSet, PLLargeImageLoader, PLPhotoLibrary;

@interface PLThumbnailManager : NSObject
{
    PLPhotoLibrary *_photoLibrary;
    NSLock *_lock;
    NSIndexSet *_occupiedIndexes;
    NSDictionary *_changedPhotosMap;
    NSArray *_changedPhotos;
    NSMutableDictionary *_thumbManagersByFormat;
    id <PLThumbPersistenceManager> _lastUsedThumbManager;
    int _lastUsedThumbManagerFormat;
    PLLargeImageLoader *_largeImageLoaderFullSize;
    PLLargeImageLoader *_largeImageLoaderFullScreen;
    PLLargeImageLoader *_largeImageLoaderFilledScreen;
    PLLargeImageLoader *_largeImageLoaderFilledHalfScreen;
    NSMutableSet *_previouslyRequestedThumbnailFixOIDs;
    NSMutableSet *_requestedThumbnailFixAssets;
    id _observerToken;
}

+ (void)saveCameraPreviewWellImage:(struct CGImage *)arg1 uuid:(id)arg2;
+ (void)saveCameraPreviewWellImageForAsset:(id)arg1;
+ (id)cameraPreviewWellAssetUUID;
+ (id)cameraPreviewWellImage;
+ (id)cameraPreviewWellImageFileURL;
+ (id)cameraPreviewWellImageQueue;
+ (int)largestNonJPEGThumbnailFormat;
+ (id)supportedThumbnailFormats;
+ (id)_allPossibleThumbnailFormats;
+ (void)handleRebuildThumbnailRequestPersistentFailure;
+ (BOOL)hasExceededRebuildThumbnailRequestLimit;
+ (BOOL)isRebuildingThumbnails;
+ (void)rebuildAllMissingThumbnails;
+ (void)removeRebuildThumbnailsRequest:(const char *)arg1;
+ (BOOL)hasRebuildThumbnailsRequest;
+ (void)addRebuildThumbnailsRequest;
+ (void)resetThumbnails;
+ (BOOL)isMissingThumbnailTables;
+ (BOOL)hasObsoleteThumbnailTables;
+ (int)thumbnailFormat;
+ (int)thumbnailVersion;
+ (int)thumbnailVersionCurrent;
+ (void)removeObsoleteMetadata;
+ (id)defaultThumbnailsDirectoryV2;
+ (id)defaultThumbnailsDirectory;
+ (BOOL)useImageTableForFormat:(int)arg1;
+ (BOOL)shouldUseLargerNonJPEGThumbnailFormat;
@property(retain, nonatomic) id observerToken; // @synthesize observerToken=_observerToken;
@property(readonly, nonatomic) NSMutableDictionary *thumbManagersByFormat; // @synthesize thumbManagersByFormat=_thumbManagersByFormat;
@property(nonatomic) PLPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
- (id)_thumbManagerForFormat:(int *)arg1;
- (id)_dataForInFlightAsset:(id)arg1 format:(int)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 imageDataOffset:(int *)arg8 imageDataFormat:(int *)arg9;
- (id)_dataForAsset:(id)arg1 format:(int)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 imageDataOffset:(int *)arg8 imageDataFormat:(int *)arg9;
- (id)thumbnailJPEGPathForPhoto:(id)arg1;
- (id)preheatItemSourceForFormat:(int)arg1;
- (id)_tableDescriptions;
- (id)compactImageTables;
- (id)preflightImageTableCompactionForPhotos:(id)arg1;
- (id)_anyImageTable;
- (id)dataForPhoto:(id)arg1 format:(int)arg2 width:(int *)arg3 height:(int *)arg4 bytesPerRow:(int *)arg5 dataWidth:(int *)arg6 dataHeight:(int *)arg7 imageDataOffset:(int *)arg8 allowPlaceholder:(BOOL)arg9;
- (void)deleteThumbnailsWithIdentifier:(id)arg1 orIndex:(unsigned int)arg2 uuid:(id)arg3;
- (void)setThumbnailsForPhoto:(id)arg1 withImage:(id)arg2;
- (void)_horse_setThumbnailsForPhoto:(id)arg1 withImage:(id)arg2;
- (void)endThumbnailSafePropertyUpdatesOnAsset:(id)arg1 withToken:(id)arg2;
- (id)beginThumbnailSafePropertyUpdatesOnAsset:(id)arg1;
- (BOOL)copyThumbnailsFromAsset:(id)arg1 toAsset:(id)arg2;
- (struct __CFDictionary *)placeholderThumbnailDataByFormatID;
- (void)setThumbnails:(struct __CFDictionary *)arg1 forPhoto:(id)arg2;
- (id)newImageForPhoto:(id)arg1 withFormat:(int)arg2 outImageProperties:(const struct __CFDictionary **)arg3 allowPlaceholder:(BOOL)arg4;
- (void)dealloc;
- (void)clearPhotoLibrary;
- (id)initWithWeakPhotoLibrary:(id)arg1;
- (int)_rebuildAssetThumbnailsWithLimit:(int)arg1 error:(id *)arg2;

@end

