//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CALayer.h"

#import "VGLCanvas.h"

@class VGLContext, VGLFramebuffer, VGLLayer;

__attribute__((visibility("hidden")))
@interface VGLScreenCanvas : CALayer <VGLCanvas>
{
    VGLContext *_targetContext;
    int _canvasWidth;
    int _canvasHeight;
    BOOL _useDepthBuffer;
    BOOL _useStencilBuffer;
    BOOL _useMultisampling;
    BOOL _requiresMultisampling;
    struct _VGLColor _glClearColor;
    struct CGContext *_snapshotContext;
    BOOL _forceRecreateFramebuffer;
    BOOL _forceRecreateFramebufferAndKeepMultisampleFramebuffer;
    VGLFramebuffer *_targetBuffer;
    float _contentScale;
    VGLLayer *_glLayer;
    BOOL _isInBackground;
}

+ (Class)contextClass;
@property(readonly, nonatomic) VGLLayer *glLayer; // @synthesize glLayer=_glLayer;
@property(nonatomic) float contentScale; // @synthesize contentScale=_contentScale;
@property(nonatomic) struct _VGLColor glClearColor; // @synthesize glClearColor=_glClearColor;
@property(nonatomic) BOOL useStencilBuffer; // @synthesize useStencilBuffer=_useStencilBuffer;
@property(nonatomic) BOOL useDepthBuffer; // @synthesize useDepthBuffer=_useDepthBuffer;
@property(readonly, nonatomic) VGLContext *vglContext; // @synthesize vglContext=_targetContext;
- (id).cxx_construct;
- (void)setBackgroundColor:(struct CGColor *)arg1;
- (void)setContentsGravity:(id)arg1;
- (void)setOpaque:(BOOL)arg1;
- (void)setNeedsDisplayOnBoundsChange:(BOOL)arg1;
- (void)setContentsScale:(float)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_destroyFramebufferAndKeepMultisampleFramebuffer;
- (void)_destroyFramebuffer;
- (void)_createFramebuffer;
- (void)_destroyAndCreateFramebufferAndKeepMultisampleFramebuffer;
- (void)_destroyAndCreateFramebuffer;
- (void)frameBufferDestroyed;
- (BOOL)isEffectivelyHidden;
@property(readonly, nonatomic) BOOL currentSceneRequiresMSAA;
@property(nonatomic) BOOL useMultisampling;
- (void)preloadResources;
@property(readonly, nonatomic) struct CGSize sizeInPixels;
@property(readonly, nonatomic) struct CGSize size;
- (void)createContextIfNecessary;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (BOOL)shouldRender;
- (BOOL)wantsRender;
- (BOOL)canRender;
- (void)didReceiveMemoryWarning;
- (void)didPresent;
- (void)present;
- (void)didDrawView;
- (void)drawWithTimestamp:(double)arg1;
- (void)willDrawView;
- (void)layoutSublayers;
- (void)_updateForceRecreateFramebuffer;
- (void)setNeedsDisplay;
- (void)_createGLLayerIfNecessary;
- (void)display;
- (void)dealloc;
- (id)initWithContext:(id)arg1 inBackground:(BOOL)arg2;
- (void)renderInContext:(struct CGContext *)arg1;
@property(readonly, nonatomic, getter=isDrawable) BOOL drawable;

@end

