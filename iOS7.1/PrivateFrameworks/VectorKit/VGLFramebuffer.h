//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class VGLContext, VGLScreenCanvas, VGLTexture;

__attribute__((visibility("hidden")))
@interface VGLFramebuffer : NSObject
{
    VGLContext *_context;
    VGLScreenCanvas *_canvas;
    unsigned int _framebuffer;
    unsigned int _renderbuffer;
    unsigned int _depthbuffer;
    unsigned int _multisampleFramebuffer;
    unsigned int _multisampleRenderbuffer;
    unsigned int _multisampleDepthbuffer;
    int _width;
    int _height;
    BOOL _createdWithDepth;
    BOOL _createdWithStencil;
    BOOL _isPresentable;
    BOOL _multisampleModeCurrent;
    BOOL _multisampleModeNext;
    VGLTexture *_texture;
    BOOL _usingMagicFramebuffer;
    int _magicFramebufferToken;
}

@property(readonly, nonatomic) unsigned int framebuffer; // @synthesize framebuffer=_framebuffer;
@property(nonatomic) VGLContext *context; // @synthesize context=_context;
@property(nonatomic) VGLScreenCanvas *canvas; // @synthesize canvas=_canvas;
@property(readonly, nonatomic) int height; // @synthesize height=_height;
@property(readonly, nonatomic) int width; // @synthesize width=_width;
@property(readonly, nonatomic) BOOL isPresentable; // @synthesize isPresentable=_isPresentable;
- (void)deleteUnusedFramebuffers;
- (void)deleteResolveFramebuffers;
- (void)deleteFramebuffers;
- (void)finalize;
- (void)makeTarget;
- (void)preloadMultisampleFramebuffer;
- (void)_bindFramebuffers;
- (void)_deallocMultisampleFramebuffer;
- (void)_deallocSecondaryFramebuffer;
- (void)_deallocResolveFramebuffer;
- (BOOL)_createMultisampleFramebufferWithDepth:(BOOL)arg1 stencil:(BOOL)arg2;
- (BOOL)_createSecondaryFramebufferWithDepth:(BOOL)arg1 stencil:(BOOL)arg2;
- (BOOL)_createResolveFramebuffer;
- (void)dealloc;
- (id)initWithContext:(id)arg1 texture:(id)arg2 depth:(BOOL)arg3 stencil:(BOOL)arg4;
- (id)initWithContext:(id)arg1 canvas:(id)arg2 depth:(BOOL)arg3 stencil:(BOOL)arg4 multisampling:(BOOL)arg5;
- (id)initWithContext:(id)arg1 canvas:(id)arg2;
@property(nonatomic) BOOL useMultisampling;

@end

