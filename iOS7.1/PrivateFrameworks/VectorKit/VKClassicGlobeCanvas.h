//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <VectorKit/VKScreenCanvas.h>

#import "GEOResourceManifestTileGroupObserver.h"
#import "LabelManagerDelegate.h"
#import "VKAnnotationModelDelegate.h"
#import "VKCameraControllerDelegate.h"
#import "VKGlobeLineContainerDelegate.h"
#import "VKInteractiveMap.h"

@class GEOMapRegion, NSArray, NSMutableArray, NSObject<OS_dispatch_queue>, NSSet, VKAnchorContext, VKAnchorWrapper, VKAnnotationModel, VKGlobeCameraController, VKGlobeLineContainer, VKGlobePointCache, VKGlobeViewWrapperImp, VKViewTransform;

__attribute__((visibility("hidden")))
@interface VKClassicGlobeCanvas : VKScreenCanvas <VKAnnotationModelDelegate, VKCameraControllerDelegate, LabelManagerDelegate, GEOResourceManifestTileGroupObserver, VKGlobeLineContainerDelegate, VKInteractiveMap>
{
    struct Viewer *_viewer;
    struct RenderThread *_thread;
    struct RenderThread *_noThread;
    id <VKInteractiveMapDelegate> _delegate;
    VKGlobeCameraController *_cameraController;
    VKAnnotationModel *_annotationModel;
    VKAnchorContext *_anchorContext;
    VKGlobePointCache *_pointCache;
    VKViewTransform *_viewTransform;
    BOOL _labelMarkerSelectionEnabled;
    BOOL _localizeLabels;
    int _labelScaleFactor;
    int _mapType;
    int _mapDisplayStyle;
    VKGlobeViewWrapperImp *_wrapper;
    VKGlobeLineContainer *_lineContainer;
    NSObject<OS_dispatch_queue> *_rootLayoutQueue;
    NSObject<OS_dispatch_queue> *_layoutQueue;
    NSObject<OS_dispatch_queue> *_rootRenderQueue;
    NSObject<OS_dispatch_queue> *_renderQueue;
    BOOL _tracking;
    BOOL _forceRepaint;
    BOOL _searchAnimationEnabled;
    int _defaultHeight;
    BOOL _disableRoads;
    BOOL _disableLabels;
    struct shared_ptr<vk::VKGlobeStylesheet> _globeStyleSheet;
    struct AltitudeDebugSettings _debugSettings;
    struct GlobeAdapter *_globeAdapter;
    BOOL _pendingAnimation;
    CDStruct_2c43369c _animationCoordinate;
    double _animationZoom;
    BOOL _initialized;
    BOOL _canShowFlyover;
    struct shared_ptr<bool> _isDead;
    BOOL _isLoading;
    BOOL _isDownloading;
    BOOL _wasPitched;
    BOOL _couldEnter3DMode;
    BOOL _updateCalledNeedsRedraw;
    CDUnknownBlockType _sceneDidLoadCallback;
    int _shieldSize;
    int _navigationShieldSize;
    int _shieldIdiom;
    BOOL _showsPointsOfInterest;
    BOOL _showsBuildings;
    CDUnknownBlockType _artworkIsReadyBlock;
    NSArray *_externalTrafficIncidents;
    struct PolylineCoordinate _routeUserOffset;
    NSMutableArray *_externalAnchors;
}

+ (BOOL)supportsMapType:(int)arg1 scale:(int)arg2;
@property(nonatomic) BOOL disableLabels; // @synthesize disableLabels=_disableLabels;
@property(nonatomic) BOOL disableRoads; // @synthesize disableRoads=_disableRoads;
@property(nonatomic) BOOL showsBuildings; // @synthesize showsBuildings=_showsBuildings;
@property(copy, nonatomic) CDUnknownBlockType sceneDidLoadCallback; // @synthesize sceneDidLoadCallback=_sceneDidLoadCallback;
@property(nonatomic) BOOL showsPointsOfInterest; // @synthesize showsPointsOfInterest=_showsPointsOfInterest;
@property(nonatomic) int shieldIdiom; // @synthesize shieldIdiom=_shieldIdiom;
@property(nonatomic) int navigationShieldSize; // @synthesize navigationShieldSize=_navigationShieldSize;
@property(nonatomic) int shieldSize; // @synthesize shieldSize=_shieldSize;
@property(readonly, nonatomic) BOOL flyoverAvailable; // @synthesize flyoverAvailable=_canShowFlyover;
@property(nonatomic) BOOL forceRepaint; // @synthesize forceRepaint=_forceRepaint;
@property(nonatomic) id <VKInteractiveMapDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) int labelScaleFactor; // @synthesize labelScaleFactor=_labelScaleFactor;
@property(nonatomic) BOOL localizeLabels; // @synthesize localizeLabels=_localizeLabels;
@property(nonatomic) BOOL labelMarkerSelectionEnabled; // @synthesize labelMarkerSelectionEnabled=_labelMarkerSelectionEnabled;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)removeExternalAnchor:(id)arg1;
- (void)addExternalAnchor:(id)arg1;
@property(readonly, nonatomic) VKAnchorWrapper *externalAnchors;
- (void)_reachabilityChanged:(id)arg1;
- (void)waitForLoading;
- (void)_updateDebugSettings;
- (void)setBackgroundViewLoading:(BOOL)arg1;
- (unsigned int)getTotalDownloaded;
@property(readonly, nonatomic, getter=isFullyDrawn) BOOL fullyDrawn;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)didReceiveMemoryWarning;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
@property(readonly, nonatomic) NSSet *persistentOverlays;
@property(readonly, nonatomic) NSArray *overlays;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)cameraController:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)cameraController:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)cameraController:(id)arg1 didChangeRegionAnimated:(BOOL)arg2;
- (void)cameraController:(id)arg1 willChangeRegionAnimated:(BOOL)arg2;
- (void)cameraControllerDidChangeCameraState:(id)arg1;
- (struct VKPoint)pointForHandle:(id)arg1 atCoordinate:(CDStruct_c3b9c2ee)arg2 withHighPrecision:(BOOL)arg3;
- (void)removeHandle:(id)arg1;
- (id)addHandleAtCoordinate:(CDStruct_c3b9c2ee)arg1 withHighPrecision:(BOOL)arg2;
- (CDUnknownBlockType)annotationMarkerDeselectionCallback;
- (id)selectedAnnotationMarker;
- (id)annotationMarkers;
- (BOOL)shouldHideOffscreenSelectedAnnotation;
- (CDUnknownBlockType)annotationCoordinateTest;
- (CDUnknownBlockType)annotationRectTest;
- (void)setAnnotationMarkerDeselectionCallback:(CDUnknownBlockType)arg1;
- (void)selectAnnotationMarker:(id)arg1;
- (void)deselectAnnotationMarker:(id)arg1;
- (void)removeAnnotationMarker:(id)arg1;
- (void)addAnnotationMarker:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)lineContainerNeedsDisplay:(id)arg1;
- (void)labelManager:(struct LabelManager *)arg1 pendingArtworkIsReady:(BOOL)arg2;
- (void)labelManager:(struct LabelManager *)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)labelManager:(struct LabelManager *)arg1 setNeedsDisplay:(BOOL)arg2;
- (void)labelManager:(struct LabelManager *)arg1 setNeedsLayout:(BOOL)arg2;
- (BOOL)currentZoomLevelAllowsRotation;
- (void)panWithOffset:(struct CGPoint)arg1 relativeToScreenPoint:(struct CGPoint)arg2 animated:(BOOL)arg3 duration:(double)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)annotationModel:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;
- (void)annotationModel:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2;
- (void)annotationModel:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2;
- (void)deselectLabelMarker;
- (id)selectedLabelMarker;
- (void)selectLabelMarker:(id)arg1;
- (id)labelMarkers;
- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(BOOL)arg2;
- (id)annotationMarkerForSelectionAtPoint:(struct CGPoint)arg1 avoidCurrent:(BOOL)arg2;
- (BOOL)isShowingNoDataPlaceholders;
- (id)attributionsForCurrentRegion;
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (CDStruct_071ac149)centerCoordinate;
- (void)debugShowTourJump:(BOOL)arg1;
- (void)debugHighlightLabelAtPoint:(struct CGPoint)arg1;
- (struct VKPoint)screenPointForPoint:(struct CGPoint)arg1;
- (void)drawVK;
- (void)draw:(BOOL)arg1 threaded:(BOOL)arg2;
- (void)layout:(BOOL)arg1 threaded:(BOOL)arg2 timestamp:(double)arg3;
- (void)layoutVK:(BOOL)arg1 timestamp:(double)arg2;
- (BOOL)_viewTransformSetup;
- (void)frameBufferDestroyed;
- (void)didPresent;
- (void)drawWithTimestamp:(double)arg1;
- (void)updateCameraForFrameResize;
- (void)updateAndDrawWithTimestamp:(double)arg1;
- (void)_update;
- (void)onTimerFired:(id)arg1;
- (BOOL)wantsRender;
- (BOOL)canRender;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToLayer:(id)arg2;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromLayer:(id)arg2;
- (struct CGPoint)convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toMapPointFromLayer:(id)arg2;
- (void)stopAnimations;
- (void)stopSearchResultAnimation;
- (void)stopPlaceCardAnimation;
- (void)startPlaceCardAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 andDistance:(double)arg2;
- (void)showSearchResultAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 withMapRegion:(id)arg2;
- (void)_runPendingAnimation;
- (void)_setAnimationCoordinate:(CDStruct_c3b9c2ee)arg1 andZoom:(double)arg2;
- (BOOL)canShowAnimationForSearchResultWithMapRegion:(id)arg1;
- (void)startLoadPosition:(CDStruct_c3b9c2ee)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)setLodMode:(int)arg1;
@property(nonatomic) id <VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation;
@property(nonatomic) struct PolylineCoordinate routeUserOffset;
@property(retain, nonatomic) NSArray *externalTrafficIncidents;
@property(readonly, nonatomic, getter=isTrackingHeading) BOOL trackingHeading;
@property(readonly, nonatomic) id <VKTrackableAnnotation> trackingAnnotation;
@property(readonly, nonatomic, getter=isAnimatingToTrackAnnotation) BOOL animatingToTrackAnnotation;
- (void)stopTrackingAnnotation;
- (void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3;
@property(nonatomic) int annotationTrackingZoomStyle;
- (BOOL)restoreViewportFromInfo:(id)arg1;
- (id)viewportInfo;
@property(nonatomic) BOOL staysCenteredDuringRotation;
@property(nonatomic) BOOL staysCenteredDuringPinch;
- (id)camera;
- (void)updateCameraFromGlobe;
@property(readonly, nonatomic) double pitch;
@property(readonly, nonatomic) double presentationYaw;
@property(readonly, nonatomic) double yaw;
@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;
@property(retain, nonatomic) GEOMapRegion *mapRegion;
- (void)setYaw:(double)arg1 animated:(BOOL)arg2;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7;
@property(readonly, nonatomic) double altitude;
- (double)durationToAnimateToMapRegion:(id)arg1;
- (void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2;
- (void)transferCamera:(id)arg1;
- (void)stopSnappingAnimations;
@property(readonly, nonatomic) BOOL isMotionControlActive;
- (void)stopMotionControl;
- (void)startMotionControlWithProvider:(id)arg1;
- (BOOL)canEnter3DMode;
@property(readonly, nonatomic, getter=isFullyPitched) BOOL fullyPitched;
@property(readonly, nonatomic, getter=isPitched) BOOL pitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (id)detailedDescription;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)setContentsScale:(float)arg1;
- (id)stylesheet;
- (void)_reloadStylesheet;
- (id)consoleString:(BOOL)arg1;
- (void)dealloc;
- (void)initialize;
- (void)setBounds:(struct CGRect)arg1;
- (id)initWithContext:(id)arg1 inBackground:(BOOL)arg2;
- (void)setHidden:(BOOL)arg1;
- (double)maximumZoomLevelForTileSize:(int)arg1;
@property(readonly, nonatomic) double maximumZoomLevel;
- (double)topDownMinimumZoomLevelForTileSize:(int)arg1;
- (double)minimumZoomLevelForTileSize:(int)arg1;
@property(readonly, nonatomic) double minimumZoomLevel;
- (void)setNightMode:(BOOL)arg1;
- (void)_setStyleTransitionProgress:(float)arg1 targetStyle:(int)arg2 step:(int)arg3;
- (float)_styleTransitionProgress;
- (void)stylesheetAnimationDidEnd:(BOOL)arg1;
- (void)stylesheetAnimationDidProgress:(float)arg1;
- (void)stylesheetAnimationWillStartFromStyle:(int)arg1 toStyle:(int)arg2;
- (void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(int)arg2 setupHandler:(CDUnknownBlockType)arg3;
@property(nonatomic) int mapType;
@property(nonatomic) struct VKEdgeInsets edgeInsets;
@property(nonatomic, getter=isSearchAnimationEnabled) BOOL searchAnimationEnabled;
@property(nonatomic) BOOL trafficEnabled;
@property(nonatomic) BOOL isPitchable;
- (BOOL)isPointValidForGesturing:(struct CGPoint)arg1;
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)didStartPanningDeceleration;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1;
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)zoomToLevel:(double)arg1 withFocusPoint:(struct CGPoint)arg2;
- (double)zoomLevelAdjustmentForTileSize:(int)arg1;
- (BOOL)canZoomOutForTileSize:(int)arg1;
- (BOOL)canZoomInForTileSize:(int)arg1;
- (double)currentZoomLevelForTileSize:(int)arg1;
- (double)currentZoomLevel;

@end

