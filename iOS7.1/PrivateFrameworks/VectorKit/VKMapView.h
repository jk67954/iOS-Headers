//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CALayer.h"

#import "VKInteractiveMapDelegate.h"

@class CADisplay, GEOMapRegion, NSArray, NSString, VKAnimation, VKClassicGlobeCanvas, VKLabelMarker, VKMapCanvas, VKPolylineOverlayPainter;

@interface VKMapView : CALayer <VKInteractiveMapDelegate>
{
    int _mapType;
    VKMapCanvas *_canvas;
    VKClassicGlobeCanvas *_globe;
    id <VKMapViewDelegate> _mapDelegate;
    BOOL _loaderOpen;
    NSString *_tileLoaderClientID;
    int _mapDisplayStyle;
    VKAnimation *_mapDisplayStyleAnimation;
    VKAnimation *_edgeInsetAnimation;
    struct VKEdgeInsets _animatingToEdgeInsets;
    BOOL _isChangingMapType;
}

+ (id)installedStylesheetNames;
@property(nonatomic) id <VKMapViewDelegate> mapDelegate; // @synthesize mapDelegate=_mapDelegate;
- (id).cxx_construct;
- (void)removeExternalAnchor:(id)arg1;
- (void)addExternalAnchor:(id)arg1;
- (void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3;
@property(nonatomic) double userZoomFocusStyleMaxGroundspanMeters;
@property(nonatomic) double userZoomFocusStyleMinGroundspanMeters;
@property(nonatomic) double userZoomFocusStyleGroundspanMeters;
- (void)setDebugDynamicMapModesEnabled:(BOOL)arg1;
- (BOOL)debugDynamicMapModesEnabled;
- (void)setRouteLineSplitAnnotation:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(struct VKPoint)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_cc67e4ef *)arg2;
@property(nonatomic) BOOL rendersInBackground;
- (void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4;
- (BOOL)gridDisabled;
- (BOOL)realisticLandDisabled;
- (BOOL)realisticRoadsDisabled;
- (BOOL)rastersDisabled;
- (BOOL)buildingFootprintsDisabled;
- (BOOL)polygonsDisabled;
- (BOOL)labelsDisabled;
- (BOOL)roadsDisabled;
@property(readonly, nonatomic, getter=isFullyDrawn) BOOL fullyDrawn;
- (BOOL)roadClassDisabled:(int)arg1;
- (void)setDisableGrid:(BOOL)arg1;
- (void)setDisableRealisticLand:(BOOL)arg1;
- (void)setDisableRealisticRoads:(BOOL)arg1;
- (void)setDisableRoadClass:(BOOL)arg1 forRoadClass:(int)arg2;
- (void)setDisableRasters:(BOOL)arg1;
- (void)setEnabledBlackRoadLines:(BOOL)arg1;
- (void)setDisableBuildingFootprints:(BOOL)arg1;
- (void)setDisablePolygons:(BOOL)arg1;
- (void)setDisableLabels:(BOOL)arg1;
- (void)setDisableRoads:(BOOL)arg1;
- (void)stopSnappingAnimations;
- (BOOL)isPointValidForGesturing:(struct CGPoint)arg1;
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)didStartPanningDeceleration;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1;
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)zoomToLevel:(double)arg1 withFocusPoint:(struct CGPoint)arg2;
- (void)map:(id)arg1 willTransitionFrom:(int)arg2 to:(int)arg3 duration:(double)arg4;
- (void)map:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)mapDidFinishChangingMapDisplayStyle:(int)arg1;
- (void)map:(id)arg1 canShowFlyoverDidChange:(BOOL)arg2;
- (void)map:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)map:(id)arg1 canZoomOutDidChange:(BOOL)arg2;
- (void)map:(id)arg1 canZoomInDidChange:(BOOL)arg2;
- (void)map:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)mapDidBecomePartiallyDrawn:(id)arg1;
- (void)mapDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(BOOL)arg2;
- (id)map:(id)arg1 painterForOverlay:(id)arg2;
- (void)map:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;
- (void)map:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2;
- (void)map:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2;
- (id)map:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)map:(id)arg1 didChangeRegionAnimated:(BOOL)arg2;
- (void)map:(id)arg1 willChangeRegionAnimated:(BOOL)arg2;
- (void)mapDidDraw:(id)arg1;
- (void)mapDidChangeVisibleRegion:(id)arg1;
- (void)mapDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapDidFinishLoadingTiles:(id)arg1;
- (void)mapDidStartLoadingTiles:(id)arg1;
@property(retain, nonatomic) VKPolylineOverlayPainter *focusedLabelsPolylinePainter;
- (BOOL)restoreViewportFromInfo:(id)arg1;
- (id)viewportInfo;
- (void)setCurrentLocationText:(id)arg1;
- (void)setRouteUserOffset:(struct PolylineCoordinate)arg1;
- (void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2;
- (void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)removeRasterOverlay:(id)arg1;
- (void)addRasterOverlay:(id)arg1;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)setTracePlaybackSpeedMultiplier:(double)arg1;
@property(readonly, nonatomic, getter=isAnimatingToTrackAnnotation) BOOL animatingToTrackAnnotation;
- (void)stopTrackingAnnotation;
- (void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3;
@property(nonatomic) int annotationTrackingZoomStyle;
@property(nonatomic) double trackingZoomScale;
@property(readonly, nonatomic) NSArray *labelMarkers;
@property(readonly, nonatomic) NSArray *annotationMarkers;
@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;
- (BOOL)shouldHideOffscreenSelectedAnnotation;
- (CDUnknownBlockType)annotationCoordinateTest;
- (CDUnknownBlockType)annotationRectTest;
- (void)setAnnotationMarkerDeselectionCallback:(CDUnknownBlockType)arg1;
- (void)deselectAnnotationMarker:(id)arg1;
- (void)selectAnnotationMarker:(id)arg1;
- (void)removeAnnotationMarker:(id)arg1;
- (void)addAnnotationMarker:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)panWithOffset:(struct CGPoint)arg1 relativeToScreenPoint:(struct CGPoint)arg2 animated:(BOOL)arg3 duration:(double)arg4 completionHandler:(CDUnknownBlockType)arg5;
@property(readonly, nonatomic) BOOL canShowFlyover;
@property(readonly, nonatomic, getter=isShowingFlyover) BOOL showingFlyover;
- (void)stopMotionControl;
- (void)startMotionControlWithProvider:(id)arg1;
@property(readonly, nonatomic) BOOL isMotionControlActive;
@property(readonly, nonatomic) BOOL canEnter3DMode;
@property(readonly, nonatomic, getter=isFullyPitched) BOOL fullyPitched;
@property(readonly, nonatomic, getter=isPitched) BOOL pitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (void)deselectLabelMarker;
- (void)selectLabelMarker:(id)arg1;
- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(BOOL)arg2;
- (id)annotationMarkerForSelectionAtPoint:(struct CGPoint)arg1 avoidCurrent:(BOOL)arg2;
@property(retain, nonatomic) NSArray *externalTrafficIncidents;
@property(retain, nonatomic) id <VKRoutePreloadSession> routePreloadSession;
- (void)preloadNavigationSceneAnimationResourcesForDisplayStyle:(int)arg1;
- (void)preloadNavigationSceneResources;
@property(nonatomic) int trackingCameraPanStyle;
- (void)setShouldLimitTrackingCameraHeight:(BOOL)arg1;
- (void)transitionToTracking:(BOOL)arg1 mapMode:(int)arg2 pounceCompletionHandler:(CDUnknownBlockType)arg3;
- (void)pauseTracking;
- (void)stopTracking;
- (void)updateCameraContext:(id)arg1;
- (void)preparePlaceCardAnimationForLocation:(CDStruct_c3b9c2ee)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopScenicAnimation;
- (void)stopPlaceCardAnimation;
- (void)startPlaceCardAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 andDistance:(double)arg2;
@property(readonly, nonatomic) BOOL canShowAnimationForPlaceCard;
- (void)showSearchResultAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 withMapRegion:(id)arg2;
- (BOOL)canShowAnimationForSearchResultWithMapRegion:(id)arg1;
@property(nonatomic) struct VKEdgeInsets labelEdgeInsets;
@property(nonatomic) struct VKEdgeInsets fullyOccludedEdgeInsets;
@property(nonatomic) struct VKEdgeInsets edgeInsets;
- (void)setEdgeInsets:(struct VKEdgeInsets)arg1 duration:(double)arg2 timingFunction:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToLayer:(id)arg2;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;
- (struct CGPoint)convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toMapPointFromLayer:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromLayer:(id)arg2;
- (void)setCenterCoordinate:(CDStruct_071ac149)arg1 animated:(BOOL)arg2;
- (double)durationToAnimateToMapRegion:(id)arg1;
- (void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4;
- (void)setYaw:(double)arg1 animated:(BOOL)arg2;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2;
- (void)runAnimation:(id)arg1;
- (void)setContentsScale:(float)arg1;
- (void)dealloc;
- (id)initWithGlobe:(BOOL)arg1 shouldRasterize:(BOOL)arg2 inBackground:(BOOL)arg3;
@property(nonatomic) BOOL allowDatelineWraparound;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7;
@property(nonatomic) CDStruct_071ac149 centerCoordinate;
- (id)consoleString:(BOOL)arg1;
@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;
@property(retain, nonatomic) GEOMapRegion *mapRegion;
@property(readonly, nonatomic) double altitude;
@property(readonly, nonatomic) double pitch;
@property(readonly, nonatomic) double presentationYaw;
@property(readonly, nonatomic) double yaw;
- (struct CGRect)mapRegionBounds;
- (void)setBounds:(struct CGRect)arg1;
- (void)_setStyleTransitionProgress:(float)arg1 targetStyle:(int)arg2 step:(int)arg3;
- (float)_styleTransitionProgress;
- (void)setMapDisplayStyle:(int)arg1 animated:(BOOL)arg2;
@property(nonatomic) int mapDisplayStyle;
@property(nonatomic) int mapType;
- (BOOL)supportsNightMode;
- (BOOL)supportsMapType:(int)arg1;
- (void)_initializeGlobe;
- (void)_createGlobe;
- (void)setCanonicalSkyHeight:(double)arg1;
@property(nonatomic) BOOL dynamicMapModesEnabled;
- (void)setDesiredMapMode:(int)arg1 immediate:(BOOL)arg2;
@property(nonatomic) BOOL showsBuildings;
@property(nonatomic) BOOL showsPointsOfInterest;
@property(nonatomic) int shieldIdiom;
@property(nonatomic) int navigationShieldSize;
@property(nonatomic) int shieldSize;
- (double)zoomLevelAdjustmentForTileSize:(int)arg1;
- (double)currentZoomLevelForTileSize:(int)arg1;
@property(readonly, nonatomic) double currentZoomLevel;
- (double)maximumZoomLevelForTileSize:(int)arg1;
@property(readonly, nonatomic) double maximumZoomLevel;
- (double)topDownMinimumZoomLevelForTileSize:(int)arg1;
- (double)minimumZoomLevelForTileSize:(int)arg1;
@property(readonly, nonatomic) double minimumZoomLevel;
- (BOOL)canZoomOutForTileSize:(int)arg1;
- (BOOL)canZoomInForTileSize:(int)arg1;
@property(nonatomic) BOOL iconsShouldAlignToPixels;
@property(nonatomic, getter=isGesturing) BOOL gesturing;
- (id)detailedDescription;
@property(nonatomic) BOOL shouldLoadMapMargin;
@property(nonatomic) BOOL shouldLoadFallbackTiles;
- (void)debugHighlightLabelAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) BOOL enableDebugLabelHighlighting;
@property(retain, nonatomic) CADisplay *hostDisplay;
@property(nonatomic) BOOL useTimerDisplayLink;
- (void)setHidden:(BOOL)arg1;
- (void)clearScene;
- (void)setNeedsDisplay;
- (void)setNeedsLayout;
- (void)debugShowTourJump:(BOOL)arg1;
- (void)debugRunPerformanceTestWithOutputHeader:(id)arg1;
@property(readonly, nonatomic) float debugFramesPerSecond;
@property(nonatomic) BOOL debugEnableMultisampling;
@property(nonatomic) BOOL debugLayoutContinuously;
@property(nonatomic) BOOL debugDrawContinuously;
@property(nonatomic) BOOL debugPaintFrameRateGraph;
@property(nonatomic) BOOL isPitchable;
@property(nonatomic) BOOL staysCenteredDuringRotation;
@property(nonatomic) BOOL staysCenteredDuringPinch;
@property(nonatomic) int labelScaleFactor;
@property(nonatomic) BOOL localizeLabels;
- (BOOL)currentZoomLevelAllowsRotation;
- (void)didEnterBackground;
- (void)willEnterForeground;
@property(nonatomic) int displayRate;
@property(nonatomic) BOOL trafficEnabled;
@property(nonatomic) int targetDisplay;
- (void)setStylesheet:(id)arg1;
- (id)stylesheet;
- (id)stylesheetName;
- (void)setStylesheetName:(id)arg1;
- (BOOL)isShowingNoDataPlaceholders;
- (id)attributionsForCurrentRegion;
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (void)forceLayout;
- (id)secondaryCanvas;
- (id)currentCanvas;
- (void)closeLoaderConnection;
- (void)openLoaderConnection;
- (void)resetContext;
- (void)forceSceneLoad;
@property(nonatomic, getter=isLabelMarkerSelectionEnabled) BOOL labelMarkerSelectionEnabled;
@property(readonly, nonatomic) VKMapCanvas *mapCanvas;
- (void)_resetMaximumZoomLevel;
- (void)_setMaximumZoomLevel:(double)arg1;

@end

