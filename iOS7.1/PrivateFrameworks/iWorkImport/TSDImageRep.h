//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <iWorkImport/TSDMediaRep.h>

#import "TSDMagicMoveMatching.h"
#import "TSDShapeControlRep.h"

@class CALayer, CAShapeLayer, NSCache, NSMutableArray, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSRecursiveLock, TSDImageRepSizingState, TSDInstantAlphaTracker, TSDLayoutGeometry;

__attribute__((visibility("hidden")))
@interface TSDImageRep : TSDMediaRep <TSDMagicMoveMatching, TSDShapeControlRep>
{
    TSDLayoutGeometry *mLastImageGeometryInRoot;
    TSDLayoutGeometry *mLastMaskGeometryInRoot;
    struct CGAffineTransform mLastLayoutToImageTransform;
    struct CGRect mFrameInUnscaledCanvasRelativeToSuper;
    BOOL mFrameInUnscaledCanvasIsValid;
    CALayer *mContentsLayer;
    CAShapeLayer *mMaskPathLayer;
    CAShapeLayer *mIAMaskLayer;
    CAShapeLayer *mMaskSublayer;
    struct CGAffineTransform mLastPictureFrameLayerTransform;
    BOOL mDirectlyManagesLayerContent;
    BOOL mShowImageHighlight;
    BOOL mInInstantAlphaMode;
    TSDInstantAlphaTracker *mInstantAlphaTracker;
    struct CGImage *mInstantAlphaImage;
    struct CGAffineTransform mBaseMaskLayoutTransform;
    NSRecursiveLock *mLayerUpdateAndSizingStateLock;
    TSDImageRepSizingState *mSizingState;
    BOOL mSizingStateReady;
    NSObject<OS_dispatch_queue> *mSizedImageAccessQueue;
    struct CGImage *mSizedImage;
    struct CGSize mSizedImageSize;
    int mSizedImageOrientation;
    BOOL mSizedImageHasMaskBakedIn;
    BOOL mSizedImageHasAdjustmentsBakedIn;
    struct CGPath *mSizedImageMaskPath;
    NSCache *mHitTestCache;
    long mHitTestCacheOnce;
    NSMutableArray *mUpdateFromLayoutBlocks;
    NSObject<OS_dispatch_semaphore> *mUpdateFromLayoutBlocksLock;
}

+ (struct CGPath *)p_newPathToBakeIntoSizedImageForSize:(struct CGSize)arg1 withImageLayout:(id)arg2 orientation:(int)arg3;
+ (float)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
@property(readonly, nonatomic) TSDInstantAlphaTracker *instantAlphaTracker; // @synthesize instantAlphaTracker=mInstantAlphaTracker;
- (void)p_popoverViewPresented:(id)arg1;
- (void)p_hitCacheSetCachedValue:(BOOL)arg1 forPoint:(struct CGPoint)arg2;
- (BOOL)p_hitCacheGetCachedValue:(char *)arg1 forPoint:(struct CGPoint)arg2;
- (void)p_invalidateHitTestCache;
- (BOOL)shouldShowMediaReplaceUI;
- (float)additionalRotationForKnobOrientation;
- (void)addKnobsToArray:(id)arg1;
- (void)updatePositionsOfKnobs:(id)arg1;
- (BOOL)shouldCreateSelectionKnobs;
- (BOOL)shouldShowSmartMaskKnobs;
- (id)newTrackerForKnob:(id)arg1;
- (BOOL)p_shouldRenderWithMaskToBounds;
- (BOOL)p_shouldBakeMaskIntoSizedImage;
- (void)p_invalidateSizedImageFromQueue;
- (void)p_invalidateSizedImage;
- (void)p_takeSizedImageFromState;
- (void)p_takeSizedImageFromStateIfReady;
- (void)p_didGenerateSizedImageInBackground;
- (void)i_willEnterForeground;
- (void)p_generateSizedImageInBackground:(id)arg1;
- (void)p_generateSizedImage:(id)arg1;
- (void)p_startSizing;
- (void)p_generateSizedImageIfNecessary;
- (BOOL)p_okayToGenerateSizedImage;
- (struct CGSize)p_desiredSizedImageSize;
- (BOOL)shouldShowReflection;
- (BOOL)shouldShowShadow;
- (BOOL)canDrawShadowInOneStepWithChildren:(BOOL)arg1;
- (BOOL)p_drawsInOneStep;
- (void)p_updateMaskSublayersForMaskEditMode;
- (void)p_createMaskLayerForLayer:(id)arg1;
- (void)p_disposeMaskLayer;
- (void)p_disposeStrokeLayer;
- (void)p_updateHUD;
- (void)p_cleanUpMaskModeUI;
- (void)p_setUpMaskModeUI;
- (void)p_endEditingMask;
- (void)p_setDefaultMaskWithActionString:(id)arg1;
- (id)p_validatedThumbnailImageProvider;
- (id)p_validatedBitmapImageProvider;
- (id)p_validatedImageProvider;
- (id)p_imageProvider;
- (id)p_imageData;
- (id)textureForContext:(id)arg1;
- (void)setMagicMoveTextureAttributes:(id)arg1;
- (void)viewScaleDidChange;
- (id)additionalLayersOverLayer;
- (void)p_updateStrokeLayerForStroke:(id)arg1 repLayer:(id)arg2;
- (void)p_updateMaskLayer:(id)arg1 forRepLayer:(id)arg2 shouldIncludeMask:(BOOL)arg3 shouldIncludeInstantAlpha:(BOOL)arg4;
- (BOOL)p_shouldMaskWithFrameLayers;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (void)p_getAliasedValuesForMaskToBoundsDirectLayerFrame:(out struct CGRect *)arg1 transform:(out struct CGAffineTransform *)arg2;
- (struct CGRect)frameInUnscaledCanvas;
- (struct CGImage *)p_newImageByApplyingAdjustmentsToImage:(struct CGImage *)arg1 alreadyEnhanced:(BOOL)arg2;
- (BOOL)p_directlyManagesContentForLayer:(id)arg1;
- (int)p_orientationForDirectlyManagedLayer;
- (struct CGImage *)p_imageForDirectlyManagedLayer:(id)arg1;
- (void)p_updateDirectlyManagesLayerContentForLayer:(id)arg1;
- (BOOL)directlyManagesLayerContent;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(BOOL)arg2 withStroke:(BOOL)arg3 withOpacity:(float)arg4 withMask:(BOOL)arg5 withIAMask:(BOOL)arg6 forLayer:(BOOL)arg7 forShadowOrHitTest:(BOOL)arg8;
- (BOOL)canDrawInParallel;
- (id)imageOfStroke:(struct CGRect *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(BOOL)arg2 withStroke:(BOOL)arg3 withOpacity:(BOOL)arg4 forAlphaOnly:(BOOL)arg5 drawChildren:(BOOL)arg6;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)endInstantAlphaMode;
- (struct CGImage *)imageForInstantAlpha;
- (void)beginInstantAlphaMode;
- (void)beginEditingMaskInMaskEditMode;
- (void)beginEditingImageInMaskEditMode;
- (void)dynamicMoveSmartShapeKnobDidEndWithTracker:(id)arg1;
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;
- (void)dynamicMoveSmartShapeKnobDidBegin;
- (void)dynamicRotateDidEndWithTracker:(id)arg1;
- (void)dynamicallyRotatingWithTracker:(id)arg1;
- (struct CGPoint)unscaledGuidePosition;
- (float)angleForRotation;
- (struct CGPoint)centerForRotation;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;
- (BOOL)wantsGuidesWhileResizing;
- (id)infoForTransforming;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (id)dynamicResizeDidBegin;
- (BOOL)demandsExclusiveSelection;
- (BOOL)allowDragDelegate;
- (void)dynamicDragDidEnd;
- (struct CGPoint)i_dragOffset;
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;
- (BOOL)resetGuidesAfterDragAfterReset;
- (BOOL)exclusivelyProvidesGuidesWhileAligning;
- (BOOL)providesGuidesWhileAligning;
- (void)dynamicDragDidBegin;
- (BOOL)shouldShowDragHUD;
- (BOOL)isDraggable;
- (id)commandToResetToSize:(struct CGSize)arg1;
- (BOOL)shouldAllowReplacementFromPaste;
- (struct CGAffineTransform)transformForHighlightLayer;
- (struct CGRect)boundsForHighlightLayer;
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;
- (struct CGRect)boundsForStandardKnobs;
- (struct CGRect)targetRectForEditMenu;
- (BOOL)wantsToDistortWithImagerContext;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (int)tilingMode;
- (id)overlayLayers;
- (void)willBeginReadMode;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(BOOL)arg3;
- (void)updateFromLayout;
- (void)processChangedProperty:(int)arg1;
- (void)processChanges:(id)arg1;
- (id)pathSourceForSelectionHighlightBehavior;
- (BOOL)shouldShowSelectionHighlight;
- (BOOL)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (void)becameNotSelected;
- (void)willBeRemoved;
- (void)p_canvasSelectionDidChange:(id)arg1;
- (void)resetMask;
- (void)editMaskWithHUD:(BOOL)arg1;
- (void)endEditingMask;
- (void)endDynamicallyChangingMaskScale:(float)arg1;
- (void)dynamicallySetMaskScale:(float)arg1;
- (void)beginDynamicallyChangingMaskScale;
- (void)maskScaleLimitsReturningMin:(float *)arg1 max:(float *)arg2;
- (float)maskScale;
- (void)maskWithHUD:(BOOL)arg1;
- (void)unhighlightImage;
- (void)highlightImage;
- (id)maskLayout;
- (id)maskInfo;
- (id)imageLayout;
- (id)imageInfo;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

