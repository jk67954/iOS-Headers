//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <iWorkImport/TSDKnobTracker.h>

#import "TSDDecorator.h"
#import "TSDRepTracker.h"

@class CALayer, TSDHUDViewController, TSDLayout, TSDRep, TSUPointerKeyDictionary;

__attribute__((visibility("hidden")))
@interface TSDResizeKnobTracker : TSDKnobTracker <TSDDecorator, TSDRepTracker>
{
    BOOL mSnapEnabled;
    struct CGSize mMinimumSize;
    struct CGSize mMaximumSize;
    BOOL mCanMoveKnobAcrossOpposite;
    BOOL mShouldResizeFromCenter;
    TSDRep *mRepToMatch;
    struct CGPoint mSecondaryHUDPoint;
    struct CGAffineTransform mOriginalTransformInRoot;
    TSDLayout *mResizingLayout;
    TSUPointerKeyDictionary *mResizingLayoutsByRep;
    struct CGRect mBaseBounds;
    struct CGRect mLastNewBounds;
    BOOL mSnappedToAspectRatio;
    BOOL mBeganAlignmentOperation;
    CALayer *mGuideLayer;
    TSDHUDViewController *mSecondHUDController;
    id <TSDRepTrackerDelegate> mDelegate;
    BOOL mNeedsHUD;
}

@property(nonatomic) struct CGPoint secondaryHUDPoint; // @synthesize secondaryHUDPoint=mSecondaryHUDPoint;
@property(retain, nonatomic) TSDRep *repToMatch; // @synthesize repToMatch=mRepToMatch;
@property(nonatomic) BOOL canMoveKnobAcrossOpposite; // @synthesize canMoveKnobAcrossOpposite=mCanMoveKnobAcrossOpposite;
@property(nonatomic) struct CGSize maximumSize; // @synthesize maximumSize=mMaximumSize;
@property(nonatomic) struct CGSize minimumSize; // @synthesize minimumSize=mMinimumSize;
@property(nonatomic) BOOL snapEnabled; // @synthesize snapEnabled=mSnapEnabled;
@property(nonatomic) BOOL shouldResizeFromCenter; // @synthesize shouldResizeFromCenter=mShouldResizeFromCenter;
- (struct CGRect)i_lastNewBounds;
- (struct CGRect)i_baseBounds;
- (void)p_makeSiblingRepsPerformBlock:(CDUnknownBlockType)arg1;
- (BOOL)p_shouldApplyResizeToSiblingsOfRep;
- (BOOL)p_isPreservingAspectRatio;
- (BOOL)p_isResizingFromCenter;
- (BOOL)p_isMatchingSize;
- (void)p_showHUDAndGuides;
- (void)p_cancelDelayedHUDAndGuides;
- (void)p_hideHUD;
- (void)p_updateHUD;
- (void)p_hideGuideLayer;
- (void)p_updateGuideLayer;
- (void)p_validateLayout;
- (void)constrainBetweenMaxAndMinSize;
- (void)constrainAndSnapByMovingKnobTo:(struct CGPoint)arg1 snappingToGuides:(BOOL)arg2;
- (struct CGRect)p_simpleResizedRectByMovingKnobTo:(struct CGPoint)arg1;
- (struct CGAffineTransform)p_repTransformInRootForTransforming;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)endMovingKnob;
- (void)moveKnobToRepPosition:(struct CGPoint)arg1;
- (struct CGPoint)convertKnobPositionToUnscaledCanvas:(struct CGPoint)arg1;
- (void)moveKnobToCanvasPosition:(struct CGPoint)arg1;
- (void)beginMovingKnob;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (BOOL)isMinimumSizeFixed;
- (BOOL)shouldHideSelectionHighlight;
- (id)hudLabelText;
- (void)applyNewBoundsToPrimaryRep;
- (void)applyNewBoundsToRep:(id)arg1;
- (id)decoratorOverlayLayers;
- (BOOL)canCenterResize;
- (id)resizingLayoutForRep:(id)arg1;
- (id)currentGeometryForLayout:(id)arg1;
- (struct CGAffineTransform)transformForLayout:(id)arg1;
- (struct CGAffineTransform)resizeTransform;
- (BOOL)shouldHideOtherKnobs;
- (BOOL)allowHUDToDisplay;
- (BOOL)hasVerticalFlip;
- (BOOL)hasHorizontalFlip;
- (struct CGSize)currentSizeForLayout:(id)arg1;
- (struct CGAffineTransform)transformInRootForStandardKnobs;
- (struct CGRect)currentBoundsForStandardKnobs;
- (void)dealloc;
- (id)initWithRep:(id)arg1 knob:(id)arg2;

// Remaining properties
@property(nonatomic) BOOL isInspectorDrivenTracking;

@end

