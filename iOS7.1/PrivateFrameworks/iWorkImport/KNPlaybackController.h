//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class CALayer, KNAnimatedSlideView, KNMovieRenderer, KNPlaybackAudioController, KNPlaybackSession, KNShow, KNSlideNode, NSArray, NSIndexSet, NSObject<KNPlaybackConcealer>, NSSet;

__attribute__((visibility("hidden")))
@interface KNPlaybackController : NSObject
{
    KNShow *mShow;
    id <TSDCanvasDelegate> mCanvasDelegate;
    id <KNPlaybackControllerDelegate> mDelegate;
    int mPlayMode;
    KNPlaybackSession *mSession;
    KNAnimatedSlideView *mAnimator;
    CDUnknownBlockType mEndShowHandler;
    KNPlaybackAudioController *mSoundtrackController;
    NSObject<KNPlaybackConcealer> *mPlaybackConcealer;
    struct CGColorSpace *mPlaybackColorSpace;
    CALayer *mBaseLayer;
    int mPlaybackState;
    BOOL mAllowsShowToEndInternally;
    BOOL mAutomaticallyPlaysSoundtrack;
    BOOL mPlaysAutomaticEvents;
    BOOL mAutomaticallyPlaysMovies;
    BOOL mRenderingSuspended;
    BOOL mIsCurrentEventNonAutomatic;
    BOOL mIsPaused;
    BOOL mIsHyperlinkInProgress;
    BOOL mIsUsingDiscreteGPU;
    KNMovieRenderer *mMovieRendererWithVisibleHUD;
}

+ (id)keyPathsForValuesAffectingMovieRenderers;
+ (id)keyPathsForValuesAffectingPausedConcealingStyle;
@property(nonatomic) struct CGColorSpace *playbackColorSpace; // @synthesize playbackColorSpace=mPlaybackColorSpace;
@property(nonatomic) BOOL playsAutomaticEvents; // @synthesize playsAutomaticEvents=mPlaysAutomaticEvents;
@property(nonatomic) BOOL automaticallyPlaysSoundtrack; // @synthesize automaticallyPlaysSoundtrack=mAutomaticallyPlaysSoundtrack;
@property(nonatomic) BOOL allowsShowToEndInternally; // @synthesize allowsShowToEndInternally=mAllowsShowToEndInternally;
@property(readonly, nonatomic) int playbackState; // @synthesize playbackState=mPlaybackState;
@property(nonatomic) BOOL automaticallyPlaysMovies; // @synthesize automaticallyPlaysMovies=mAutomaticallyPlaysMovies;
@property(retain, nonatomic) NSObject<KNPlaybackConcealer> *playbackConcealer; // @synthesize playbackConcealer=mPlaybackConcealer;
@property(readonly, nonatomic, getter=isPaused) BOOL paused; // @synthesize paused=mIsPaused;
@property(readonly, nonatomic) CALayer *baseLayer; // @synthesize baseLayer=mBaseLayer;
@property(copy, nonatomic) CDUnknownBlockType endShowHandler; // @synthesize endShowHandler=mEndShowHandler;
@property(nonatomic) int playMode; // @synthesize playMode=mPlayMode;
@property(nonatomic) KNMovieRenderer *movieRendererWithVisibleHUD; // @synthesize movieRendererWithVisibleHUD=mMovieRendererWithVisibleHUD;
@property(readonly, nonatomic) id <TSDCanvasDelegate> canvasDelegate; // @synthesize canvasDelegate=mCanvasDelegate;
@property(nonatomic) BOOL isHyperlinkInProgress; // @synthesize isHyperlinkInProgress=mIsHyperlinkInProgress;
@property(nonatomic) id <KNPlaybackControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) KNShow *show; // @synthesize show=mShow;
- (void)p_resetAnimatorAndSetGoToFirstEvent:(BOOL)arg1;
- (void)p_resetAnimatorAtEventIndex:(unsigned int)arg1;
- (void)p_setAnimator:(id)arg1;
- (id)p_animator;
- (void)p_gotoPreviousAndJumpToFirstEvent:(BOOL)arg1;
- (void)p_movieEnded:(id)arg1;
- (void)p_movieStarted:(id)arg1;
- (void)p_eventEnded:(id)arg1;
- (void)p_eventAnimationBecameActive:(id)arg1;
- (void)p_eventStarted:(id)arg1;
- (id)p_currentBuildChunks;
- (BOOL)p_processHyperlinkURL:(id)arg1;
- (id)p_hyperlinkURLForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;
- (BOOL)processHyperlinkForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;
- (id)p_topLevelRepsForHitTesting;
- (BOOL)isHyperlinkAtPoint:(struct CGPoint)arg1 hitObject:(id *)arg2 hitRep:(id *)arg3 hitInfo:(id *)arg4;
@property(nonatomic) BOOL shouldAnimateTransitionOnLastSlide;
@property(readonly, nonatomic) NSArray *currentlyVisibleInfos;
@property(nonatomic) BOOL shouldAnimateNullTransitions;
- (id)movieRendererAtPoint:(struct CGPoint)arg1;
- (void)applyMovieControl:(int)arg1;
@property(readonly, nonatomic) NSSet *movieRenderers;
- (void)resumeSoundtrack;
- (void)pauseSoundtrack;
- (void)stopSoundtrack;
- (void)startSoundtrackAtMediaIndex:(unsigned int)arg1 time:(double)arg2;
- (void)restartPlaybackIfNeeded;
- (void)stopAnimationsAndGotoCompletionOfEvent;
- (void)stopAnimations;
- (void)resumeAnimationsIfPaused;
- (void)pauseAnimationsWithConcealingStyle:(int)arg1;
- (void)pauseAnimations;
@property(readonly, nonatomic) int pausedConcealingStyle;
@property(readonly, nonatomic, getter=isNonMovieAnimationActive) BOOL nonMovieAnimationActive;
@property(readonly, nonatomic, getter=isNonMovieAnimationAnimating) BOOL nonMovieAnimationAnimating;
@property(readonly, nonatomic, getter=isAnimating) BOOL animating;
- (void)resumeRendering;
- (void)suspendRendering;
- (void)playAutomaticEvents;
- (void)gotoNextEventWithoutAnimation;
- (void)gotoNextEventIgnoringDelay:(BOOL)arg1;
- (void)gotoNextEvent;
- (void)gotoFirstEvent;
- (void)gotoPreviousEvent;
- (BOOL)gotoLastVisitedSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (BOOL)gotoSlideNode:(id)arg1 toEventIndex:(unsigned int)arg2 shouldAnimate:(BOOL)arg3 ignoreDelays:(BOOL)arg4;
- (BOOL)gotoLastSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (BOOL)gotoNextSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (BOOL)gotoPreviousSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (BOOL)gotoFirstSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (void)setBreadCrumbTrail:(id)arg1;
- (id)breadCrumbTrail;
@property(readonly, nonatomic) unsigned int nextEventIndex;
@property(readonly, nonatomic) unsigned int visibleEventIndex;
@property(readonly, nonatomic) unsigned int eventCount;
- (id)nextSlideNodeAfterSlideNode:(id)arg1;
@property(readonly, nonatomic) KNSlideNode *nextSlideNode;
@property(readonly, nonatomic) KNSlideNode *currentSlideNode;
@property(readonly, nonatomic, getter=isAtBeginning) BOOL atBeginning;
- (void)resizeShowToFitBaseLayer;
- (void)tearDownShow;
- (void)endShow;
- (void)p_endShowFromAnimator;
- (void)playPreparedShow;
- (void)renderCurrentEvent;
@property(copy, nonatomic) NSIndexSet *buildEventIndexesToAnimate;
@property(nonatomic) unsigned int currentEventIndex;
@property(readonly, nonatomic) double buildsToAnimateDuration;
- (float)p_defaultViewScaleForBaseLayer:(id)arg1;
- (void)prepareOnLayer:(id)arg1 atSlideNode:(id)arg2 isBaseLayerVisible:(BOOL)arg3;
- (void)prepareOnLayer:(id)arg1 viewScale:(float)arg2 atSlideNode:(id)arg3 isBaseLayerVisible:(BOOL)arg4;
- (void)p_releaseDiscreteGPUIfRetained;
- (void)p_retainDiscreteGPUIfNeeded;
- (void)dealloc;
- (id)init;
- (id)initWithShow:(id)arg1 canvasDelegate:(id)arg2;

@end

