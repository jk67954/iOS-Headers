//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "TSKChangeSourceObserver.h"

@class NSIndexSet, NSLock, NSMutableArray, NSMutableSet, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_semaphore>, NSRecursiveLock, TSDFill, TSDInfoGeometry, TSDLayoutGeometry, TSKChangeNotifier, TSTCellRegion, TSTDupContentCache, TSTHiddenRowsColumnsCache, TSTLayout, TSTLayoutDynamicResizeInfo, TSTLayoutTask, TSTMergeRangeSortedSet, TSTTableInfo, TSTTableModel, TSTWPColumnCache, TSTWidthHeightCache, TSUColor, TSUReadWriteQueue, TSURetainedPointerKeyDictionary, TSWPEditingController;

__attribute__((visibility("hidden")))
@interface TSTMasterLayout : NSObject <TSKChangeSourceObserver>
{
    TSKChangeNotifier *mChangeNotifier;
    int mReferenceCount;
    TSTTableInfo *mTableInfo;
    TSTWPColumnCache *mCellIDToWPColumnCache;
    TSTDupContentCache *mDupContentCache;
    TSTWPColumnCache *mTempWPColumnCache;
    TSTWidthHeightCache *mWidthHeightCache;
    TSUReadWriteQueue *mWHCacheQueue;
    TSTHiddenRowsColumnsCache *mHiddenRowsColumnsCache;
    NSMutableArray *mChangeDescriptors;
    NSObject<OS_dispatch_group> *mLayoutInFlight;
    TSTLayoutTask *mCurrentLayoutTask;
    NSObject<OS_dispatch_semaphore> *mLayoutSemaphore;
    unsigned int mMaxConcurrentTasks;
    unsigned int mNumCellsPerTask;
    BOOL mHeaderColumnsFrozen;
    BOOL mHeaderRowsFrozen;
    BOOL mHeaderColumnsRepeat;
    BOOL mHeaderRowsRepeat;
    BOOL mTableNameEnabled;
    struct CGRect mTableNameBounds;
    float mCachedTableNameHeight;
    unsigned short mCachedNumberOfHeaderColumns;
    unsigned int mCachedMaxNumberOfColumns;
    unsigned short mCachedNumberOfHeaderRows;
    unsigned short mCachedNumberOfFooterRows;
    unsigned int mCachedMaxNumberOfRows;
    struct TSTTableStrokeDefaults *mDefaultStrokes;
    NSMutableArray *mTopRowStrokes;
    NSMutableArray *mBottomRowStrokes;
    NSMutableArray *mLeftColumnStrokes;
    NSMutableArray *mRightColumnStrokes;
    NSRecursiveLock *mStrokesLock;
    TSURetainedPointerKeyDictionary *mParaStyleToHeightCache;
    NSLock *mLock;
    BOOL mBandedFillIsValid;
    BOOL mUseBandedFill;
    TSDFill *mBandedFillObject;
    int mTableEnvironment;
    int mTableRowsBehavior;
    BOOL mTableDefaultFontHeightsAreValid;
    float mTableDefaultFontHeightForArea[4];
    BOOL mInDynamicLayoutMode;
    NSMutableSet *mDynamicLayouts;
    float mDynamicAddOrRemoveColumnElementSize;
    float mDynamicAddOrRemoveRowElementSize;
    BOOL mDynamicBandedFill;
    BOOL mDynamicBandedFillSetting;
    int mDynamicColumnAdjustment;
    id <TSTLayoutDynamicColumnSwapProtocol> mDynamicColumnSwapDelegate;
    float mDynamicColumnTabSize;
    id <TSTLayoutDynamicContentProtocol> mDynamicContentDelegate;
    TSUColor *mDynamicFontColor;
    CDStruct_5f1f7aa9 mDynamicFontColorCellRange;
    CDStruct_5f1f7aa9 mDynamicHidingRowsCols;
    int mDynamicHidingRowsColsDirection;
    CDStruct_5f1f7aa9 mDynamicHidingContent;
    CDStruct_5f1f7aa9 mDynamicHidingText;
    TSDInfoGeometry *mDynamicInfoGeometry;
    BOOL mDynamicRepResize;
    BOOL mDynamicRepressFrozenHeader;
    BOOL mDynamicResizingColumns;
    CDStruct_5f1f7aa9 mDynamicResizingColumnRange;
    float mDynamicResizingColumnAdjustment;
    BOOL mDynamicResizingRows;
    CDStruct_5f1f7aa9 mDynamicResizingRowRange;
    float mDynamicResizingRowAdjustment;
    CDStruct_5f1f7aa9 mDynamicRevealingRowsCols;
    int mDynamicRevealingRowsColsDirection;
    int mDynamicRowAdjustment;
    id <TSTLayoutDynamicRowSwapProtocol> mDynamicRowSwapDelegate;
    float mDynamicRowTabSize;
    TSDLayoutGeometry *mDynamicSavedLayoutGeometry;
    TSTCellRegion *mDynamicSelectionRegion;
    float mDynamicWidthResize;
    float mDynamicHeightResize;
    float mDynamicTableNameResize;
    TSTLayoutDynamicResizeInfo *mDynamicResizeInfo;
    CDStruct_0441cfb5 mDynamicSuppressingConditionalStylesCellID;
    BOOL mEmptyFilteredTable;
    TSWPEditingController *mContainedTextEditor;
    TSTMergeRangeSortedSet *mMergeRanges;
    BOOL mProcessHiddenRowsForExport;
    TSKChangeNotifier *_changeNotifier;
    struct CGSize mMaximumPartitionSize;
}

+ (float)effectiveTableNameHeightForModel:(id)arg1;
+ (struct CGSize)tableNameTextSize:(id)arg1;
+ (id)tableNameTextEngine:(id)arg1;
@property(nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=_changeNotifier;
@property(nonatomic) struct CGSize maximumPartitionSize; // @synthesize maximumPartitionSize=mMaximumPartitionSize;
@property(nonatomic) BOOL processHiddenRowsForExport; // @synthesize processHiddenRowsForExport=mProcessHiddenRowsForExport;
@property(nonatomic) TSTMergeRangeSortedSet *mergeRanges; // @synthesize mergeRanges=mMergeRanges;
@property(readonly, nonatomic) NSMutableArray *changeDescriptors; // @synthesize changeDescriptors=mChangeDescriptors;
@property(nonatomic) TSWPEditingController *containedTextEditor; // @synthesize containedTextEditor=mContainedTextEditor;
@property(readonly, nonatomic) CDStruct_0441cfb5 dynamicSuppressingConditionalStylesCellID; // @synthesize dynamicSuppressingConditionalStylesCellID=mDynamicSuppressingConditionalStylesCellID;
@property(readonly, nonatomic) float dynamicTableNameResize; // @synthesize dynamicTableNameResize=mDynamicTableNameResize;
@property(readonly, nonatomic) TSTCellRegion *dynamicSelectionRegion; // @synthesize dynamicSelectionRegion=mDynamicSelectionRegion;
@property(copy, nonatomic) TSDLayoutGeometry *dynamicSavedLayoutGeometry; // @synthesize dynamicSavedLayoutGeometry=mDynamicSavedLayoutGeometry;
@property(readonly, nonatomic) float dynamicRowTabSize; // @synthesize dynamicRowTabSize=mDynamicRowTabSize;
@property(readonly, nonatomic) int dynamicRowAdjustment; // @synthesize dynamicRowAdjustment=mDynamicRowAdjustment;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicResizingRowRange; // @synthesize dynamicResizingRowRange=mDynamicResizingRowRange;
@property(readonly, nonatomic) float dynamicResizingRowAdjustment; // @synthesize dynamicResizingRowAdjustment=mDynamicResizingRowAdjustment;
@property(readonly, nonatomic) BOOL dynamicResizingRows; // @synthesize dynamicResizingRows=mDynamicResizingRows;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicResizingColumnRange; // @synthesize dynamicResizingColumnRange=mDynamicResizingColumnRange;
@property(readonly, nonatomic) float dynamicResizingColumnAdjustment; // @synthesize dynamicResizingColumnAdjustment=mDynamicResizingColumnAdjustment;
@property(readonly, nonatomic) BOOL dynamicResizingColumns; // @synthesize dynamicResizingColumns=mDynamicResizingColumns;
@property(nonatomic) float dynamicWidthResize; // @synthesize dynamicWidthResize=mDynamicWidthResize;
@property(nonatomic) float dynamicHeightResize; // @synthesize dynamicHeightResize=mDynamicHeightResize;
@property(readonly, nonatomic) TSDInfoGeometry *dynamicInfoGeometry; // @synthesize dynamicInfoGeometry=mDynamicInfoGeometry;
@property(nonatomic) BOOL dynamicRepResize; // @synthesize dynamicRepResize=mDynamicRepResize;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicFontColorCellRange; // @synthesize dynamicFontColorCellRange=mDynamicFontColorCellRange;
@property(readonly, nonatomic) TSUColor *dynamicFontColor; // @synthesize dynamicFontColor=mDynamicFontColor;
@property(readonly, nonatomic) float dynamicColumnTabSize; // @synthesize dynamicColumnTabSize=mDynamicColumnTabSize;
@property(readonly, nonatomic) int dynamicColumnAdjustment; // @synthesize dynamicColumnAdjustment=mDynamicColumnAdjustment;
@property(readonly, nonatomic) BOOL dynamicBandedFillSetting; // @synthesize dynamicBandedFillSetting=mDynamicBandedFillSetting;
@property(readonly, nonatomic) BOOL dynamicBandedFill; // @synthesize dynamicBandedFill=mDynamicBandedFill;
@property(readonly, nonatomic) float dynamicAddOrRemoveRowElementSize; // @synthesize dynamicAddOrRemoveRowElementSize=mDynamicAddOrRemoveRowElementSize;
@property(readonly, nonatomic) float dynamicAddOrRemoveColumnElementSize; // @synthesize dynamicAddOrRemoveColumnElementSize=mDynamicAddOrRemoveColumnElementSize;
@property(readonly, nonatomic) NSMutableSet *dynamicLayouts; // @synthesize dynamicLayouts=mDynamicLayouts;
@property(readonly, nonatomic) BOOL inDynamicLayoutMode; // @synthesize inDynamicLayoutMode=mInDynamicLayoutMode;
@property(nonatomic) unsigned int numCellsPerTask; // @synthesize numCellsPerTask=mNumCellsPerTask;
@property(nonatomic) unsigned int maxConcurrentTasks; // @synthesize maxConcurrentTasks=mMaxConcurrentTasks;
@property(readonly, nonatomic) TSUReadWriteQueue *whCacheQueue; // @synthesize whCacheQueue=mWHCacheQueue;
@property(readonly, nonatomic) int tableRowsBehavior; // @synthesize tableRowsBehavior=mTableRowsBehavior;
@property(nonatomic) int tableEnvironment; // @synthesize tableEnvironment=mTableEnvironment;
@property(readonly, nonatomic) TSDFill *bandedFillObject; // @synthesize bandedFillObject=mBandedFillObject;
@property(readonly, nonatomic) TSTHiddenRowsColumnsCache *hiddenRowsColumnsCache; // @synthesize hiddenRowsColumnsCache=mHiddenRowsColumnsCache;
@property(readonly, nonatomic) TSTWidthHeightCache *widthHeightCache; // @synthesize widthHeightCache=mWidthHeightCache;
@property(readonly, nonatomic) TSTWPColumnCache *tempWPColumnCache; // @synthesize tempWPColumnCache=mTempWPColumnCache;
@property(readonly, nonatomic) TSTDupContentCache *dupContentCache; // @synthesize dupContentCache=mDupContentCache;
@property(readonly, nonatomic) TSTWPColumnCache *cellIDToWPColumnCache; // @synthesize cellIDToWPColumnCache=mCellIDToWPColumnCache;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
- (id).cxx_construct;
- (float)fontHeightOfParagraphStyle:(id)arg1;
- (struct UIEdgeInsets)defaultPaddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)paddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)edgeInsetsFromPadding:(id)arg1;
- (id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (id)newTextEngineForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)waitForLayoutToComplete;
- (void)processLayoutTask:(id)arg1;
- (void)measureTextForLayoutState:(id)arg1;
- (void)queueCellForValidation:(CDStruct_5f1f7aa9)arg1 cell:(id)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 wrap:(BOOL)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 prop:(BOOL)arg7 layoutCacheFlags:(int)arg8;
- (id)validateCellForDrawing:(CDStruct_0441cfb5)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(BOOL)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned int)arg8 pageCount:(unsigned int)arg9;
- (void)validateFittingWidthsForRegion:(id)arg1;
- (id)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2;
- (void)p_validateFittingInfoForCellID:(CDStruct_0441cfb5)arg1 inMergeRange:(CDStruct_5f1f7aa9)arg2;
- (CDStruct_0441cfb5)p_validateFittingInfoForEmptyCellsBetween:(CDStruct_0441cfb5)arg1 andCellID:(CDStruct_0441cfb5)arg2 inRange:(CDStruct_5f1f7aa9)arg3;
- (void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(CDStruct_0441cfb5)arg1 andEndCellID:(CDStruct_0441cfb5)arg2;
- (void)validateFittingInfoWithCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)validateFittingInfoForCell:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 setFitting:(BOOL)arg4;
- (void)validateRowVisibility:(id)arg1;
- (void)updateWHCForMergeRanges;
- (void)validateChangeDescriptorQueue;
- (void)validateMasterLayoutForChangeDescriptors:(id)arg1;
- (void)validate;
- (void)addChangeDescriptor:(id)arg1;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2 andStrokeRange:(CDStruct_5f1f7aa9)arg3;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2;
@property(readonly, nonatomic) BOOL isGrouped;
- (id)adjustedDynamicSavedLayoutGeometry;
- (struct CGAffineTransform)transformForTargetSize:(struct CGSize)arg1 withRawTableSize:(struct CGSize)arg2 andStrokeDelta:(struct CGSize)arg3;
- (void)validateDynamicResizeInfo;
- (void)invalidateDynamicResizeInfo;
- (void)updateDynamicResizeInfo:(id)arg1;
- (void)captureDynamicResizeInfo;
- (BOOL)isDynamicallySwappingColumns;
@property(readonly, nonatomic) id <TSTLayoutDynamicColumnSwapProtocol> dynamicColumnSwapDelegate; // @synthesize dynamicColumnSwapDelegate=mDynamicColumnSwapDelegate;
- (BOOL)isDynamicallySwappingRows;
@property(readonly, nonatomic) id <TSTLayoutDynamicRowSwapProtocol> dynamicRowSwapDelegate; // @synthesize dynamicRowSwapDelegate=mDynamicRowSwapDelegate;
- (BOOL)isDynamicallyChangingFontColorOfCellID:(CDStruct_0441cfb5)arg1;
- (BOOL)isDynamicallyChangingContent;
@property(readonly, nonatomic) id <TSTLayoutDynamicContentProtocol> dynamicContentDelegate; // @synthesize dynamicContentDelegate=mDynamicContentDelegate;
- (void)updateDynamicSuppressingConditionalStylesCellID:(CDStruct_0441cfb5)arg1;
- (void)updateDynamicColumnSwapDelegate:(id)arg1;
- (void)updateDynamicRowSwapDelegate:(id)arg1;
- (void)updateDynamicFontColor:(id)arg1 andRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicContentDelegate:(id)arg1;
- (void)updateDynamicRevealingRowsCols:(int)arg1 revealingCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicInfoGeometry:(id)arg1;
- (void)updateDynamicHidingText:(CDStruct_5f1f7aa9)arg1;
- (void)updateDynamicHidingContent:(CDStruct_5f1f7aa9)arg1;
- (void)updateDynamicHidingRowsCols:(int)arg1 hidingCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicRepressFrozenHeader:(BOOL)arg1;
- (void)updateDynamicBandedFill:(BOOL)arg1 setting:(BOOL)arg2;
- (void)updateDynamicRowTabSize:(float)arg1;
- (void)updateDynamicColumnTabSize:(float)arg1;
- (BOOL)updateDynamicChangeRowOrColumnCount:(int)arg1 count:(int)arg2 newlyAddedElementSize:(float)arg3;
- (BOOL)isDynamicallyRepressingFrozenHeaders;
- (BOOL)isDynamicallySettingBandedFill;
- (BOOL)isDynamicallyRowTabResizing;
- (BOOL)isDynamicallyColumnTabResizing;
- (BOOL)isDynamicallyChangingSelection;
- (void)updateDynamicSelectionRegion:(id)arg1;
- (BOOL)isDynamicallyChangingRowOrColumnCount;
- (BOOL)isDynamicallyChangingColumnCount;
- (BOOL)isDynamicallyChangingRowCount;
- (BOOL)isDynamicallyResizingTableName;
- (void)updateDynamicTableNameSize:(float)arg1;
- (BOOL)isDynamicallyRevealingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;
- (BOOL)isDynamicallyRevealingRowsCols;
- (void)updateDynamicResize:(int)arg1 resizingRange:(CDStruct_5f1f7aa9)arg2 resizeAdjustment:(float)arg3;
- (BOOL)isDynamicallyChangingInfoGeometry;
- (BOOL)isDynamicallyHidingTextOfCellID:(CDStruct_0441cfb5)arg1;
- (BOOL)isDynamicallyHidingContentOfCellID:(CDStruct_0441cfb5)arg1;
- (BOOL)isDynamicallyHidingRowsColsCellID:(CDStruct_0441cfb5)arg1;
- (BOOL)isDynamicallyHidingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;
- (BOOL)isDynamicallyHidingRowsCols;
@property(readonly, nonatomic) TSTLayout *dynamicLayout;
@property(readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property(readonly, nonatomic) NSIndexSet *visibleRowIndices;
- (BOOL)isDynamicallyResizingCellID:(CDStruct_0441cfb5)arg1;
- (BOOL)isDynamicallyResizing:(int)arg1 rowColIndex:(unsigned short)arg2;
- (BOOL)isDynamicallyResizing:(int)arg1;
- (CDStruct_0441cfb5)layoutCellIDForModelCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)modelCellIDForLayoutCellID:(CDStruct_0441cfb5)arg1;
- (BOOL)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)removeDynamicLayoutEndIfNecessary:(id)arg1;
- (void)addDynamicLayoutBeginIfNecessary:(id)arg1;
- (void)endDynamicMode;
- (void)cancelDynamicModeChanges;
- (void)p_cancelDynamicRowColCountChanges;
- (void)beginDynamicMode:(id)arg1;
- (void)calculateRawTableSize:(struct CGSize *)arg1 andStrokeDelta:(struct CGSize *)arg2;
- (void)validateDefaultFontHeights;
- (void)invalidateDefaultFontHeights;
- (void)validateTableRowsBehavior;
- (void)validateBandedFill;
- (void)invalidateBandedFill;
- (BOOL)shouldRowUseBandedFill:(unsigned short)arg1;
@property(readonly, nonatomic) BOOL useBandedFill;
- (void)validateStrokesForRegion:(id)arg1 regionAlreadyValidated:(id)arg2;
- (id)regionForStrokeValidationFromChangeDescriptors:(id)arg1;
- (int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;
- (void)invalidateTableNameHeight;
- (float)calculatedTableNameHeightIncludingDynamicResize:(BOOL)arg1;
- (float)calculatedTableNameHeight;
- (float)tableNameHeight;
- (struct CGSize)tableNameTextSize;
- (id)tableNameTextEngine;
- (void)clearModelHeightWidthCacheForCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)resetModelHeightWidthCache;
- (void)validateLayoutHint:(id)arg1;
- (BOOL)hintIsValid:(id)arg1;
- (id)newLayoutHint;
- (id)description;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
@property(readonly, nonatomic) BOOL emptyFilteredTable; // @synthesize emptyFilteredTable=mEmptyFilteredTable;
@property(readonly, nonatomic) TSTTableModel *tableModel;

@end

