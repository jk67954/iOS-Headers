//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <iWorkImport/TSADocumentRoot.h>

#import "TSCEResolverContainer.h"
#import "TSDThumbnailProducer.h"
#import "TSTResolverContainerNameProvider.h"
#import "TSWPChangeSessionManager.h"
#import "TSWPChangeVisibility.h"
#import "TSWPDrawableOLC.h"
#import "TSWPStorageParent.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSString, TPDocumentSettings, TPDrawablesZOrder, TPFloatingDrawables, TPInteractiveCanvasController, TPPageLayoutNotifier, TPPaginatedPageController, TPSection, TPTOCController, TPTheme, TSDThumbnailController, TSSStylesheet, TSWPStorage;

__attribute__((visibility("hidden")))
@interface TPDocumentRoot : TSADocumentRoot <TSDThumbnailProducer, TSWPDrawableOLC, TSWPStorageParent, TSWPChangeSessionManager, TSWPChangeVisibility, TSTResolverContainerNameProvider, TSCEResolverContainer>
{
    TPTheme *_theme;
    TSSStylesheet *_stylesheet;
    TSWPStorage *_bodyStorage;
    TPDocumentSettings *_settings;
    TPDrawablesZOrder *_drawablesZOrder;
    TPFloatingDrawables *_floatingDrawables;
    NSArray *_citationRecords;
    NSArray *_tocStyles;
    BOOL _usesSingleHeaderFooter;
    BOOL _needsInitialization;
    struct CGSize _pageSize;
    float _pageScale;
    NSString *_printerID;
    NSString *_paperID;
    unsigned int _orientation;
    float _leftMargin;
    float _rightMargin;
    float _topMargin;
    float _bottomMargin;
    float _headerMargin;
    float _footerMargin;
    BOOL _layoutBodyVertically;
    struct __CFLocale *_hyphenationLocale;
    BOOL _changeTrackingPaused;
    BOOL _changeTrackingEnabled;
    NSMutableArray *_changeSessionHistory;
    TPPaginatedPageController *_paginatedPageController;
    TPPageLayoutNotifier *_pageLayoutNotifier;
    TSDThumbnailController *_thumbnailController;
    BOOL _newDocument;
    float _currentThumbnailContainerWidth;
    unsigned int _tableNameCounter;
    NSMutableDictionary *_chartsUIState;
    BOOL _shouldUniquifyTableNames;
    NSMutableDictionary *_tableInfosWithUniqueNames;
    TPInteractiveCanvasController *interactiveCanvasController;
    TPTOCController *_tocController;
}

+ (void)localizeTextStorage:(id)arg1 withTemplateBundle:(id)arg2;
+ (struct CGSize)previewImageSizeForType:(unsigned int)arg1;
+ (struct CGSize)pageSizeFromPaperSize:(struct CGSize)arg1 pageScale:(float)arg2 orientation:(unsigned int)arg3;
@property(retain, nonatomic) TPTOCController *tocController; // @synthesize tocController=_tocController;
@property(retain, nonatomic) NSMutableDictionary *chartsUIState; // @synthesize chartsUIState=_chartsUIState;
@property(retain, nonatomic) NSArray *changeSessionHistory; // @synthesize changeSessionHistory=_changeSessionHistory;
@property(retain, nonatomic) NSArray *tocStyles; // @synthesize tocStyles=_tocStyles;
@property(readonly, nonatomic) NSArray *citationRecords; // @synthesize citationRecords=_citationRecords;
@property(retain, nonatomic) TPFloatingDrawables *floatingDrawables; // @synthesize floatingDrawables=_floatingDrawables;
@property(retain, nonatomic) TPDrawablesZOrder *drawablesZOrder; // @synthesize drawablesZOrder=_drawablesZOrder;
@property(readonly, nonatomic) TSWPStorage *bodyStorage; // @synthesize bodyStorage=_bodyStorage;
@property(retain, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=_stylesheet;
@property(readonly, nonatomic) BOOL isNewDocument; // @synthesize isNewDocument=_newDocument;
@property(readonly, nonatomic) TSDThumbnailController *thumbnailController; // @synthesize thumbnailController=_thumbnailController;
@property(readonly, nonatomic) TPPaginatedPageController *paginatedPageController; // @synthesize paginatedPageController=_paginatedPageController;
@property(nonatomic) TPInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController;
- (id).cxx_construct;
- (void)pUpgradeSection:(id)arg1 documentVersion:(unsigned long long)arg2;
- (void)setUIState:(id)arg1 forChart:(id)arg2;
- (id)UIStateForChart:(id)arg1;
- (unsigned int)nextUntitledResolverIndex;
- (BOOL)resolverNameIsUsed:(id)arg1;
- (id)resolverMatchingName:(id)arg1;
- (id)resolversMatchingPrefix:(id)arg1;
- (id)resolverMatchingName:(id)arg1 contextContainerName:(id)arg2;
- (id)resolverMatchingName:(id)arg1 contextResolver:(id)arg2;
- (id)resolverContainerNamesMatchingPrefix:(id)arg1;
- (id)resolverContainerForName:(id)arg1 caseSensitive:(BOOL)arg2;
- (id)nameForResolverContainer:(id)arg1;
- (id)resolverContainerNameForResolver:(id)arg1;
- (void)willRemoveDrawable:(id)arg1;
- (void)didAddDrawable:(id)arg1;
- (BOOL)shouldShowMarkupForChangeKind:(int)arg1 date:(id)arg2;
- (BOOL)shouldShowChangeKind:(int)arg1 date:(id)arg2;
- (void)startNewChangeSessionIfNecessaryGettingInsertAuthorCommand:(id *)arg1;
- (id)changeSessionAuthorCreatedWithCommand:(id *)arg1;
- (void)upgradeFromOldSectionWithPageSize:(struct CGSize)arg1 leftMargin:(float)arg2 rightMargin:(float)arg3 topMargin:(float)arg4 bottomMargin:(float)arg5 headerMargin:(float)arg6 footerMargin:(float)arg7;
- (BOOL)isMultiPageForQuickLook;
- (BOOL)useLigatures;
- (struct __CFLocale *)hyphenationLocale;
- (BOOL)shouldHyphenate;
- (BOOL)documentDisallowsHighlightsOnStorage:(id)arg1;
- (unsigned int)writingDirection;
- (BOOL)shouldAllowDrawableInGroups:(id)arg1 forImport:(BOOL)arg2;
- (BOOL)pageMastersAllowDrawable:(id)arg1;
- (id)pageMasterOwningModel:(id)arg1;
- (BOOL)isSectionModel:(id)arg1;
- (void)setValue:(float)arg1 forMargin:(int)arg2;
- (float)valueForMargin:(int)arg1;
- (struct CGRect)pageBoundsWithinMargins;
- (float)bodyWidth;
@property(readonly, nonatomic) TPDocumentSettings *settings;
- (void)resumeBackgroundActivities;
- (void)suspendBackgroundActivities;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)willClose;
- (void)willHide;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (id)createViewStateRoot;
- (id)modelPathComponentForChild:(id)arg1;
- (id)childEnumerator;
- (id)changeSessionManagerForModel:(id)arg1;
- (id)changeVisibility;
- (id)p_previewImageWithImageSize:(struct CGSize)arg1;
- (id)previewImageForSize:(struct CGSize)arg1;
- (void)resumeThumbnailing;
- (void)suspendThumbnailing;
- (Class)thumbnailImagerClass;
- (BOOL)reuseThumbnailerUntilIdleForIdentifier:(id)arg1;
- (struct CGRect)unscaledClipRectForIdentifier:(id)arg1;
- (struct CGSize)thumbnailSizeForIdentifier:(id)arg1;
- (id)rootInfosForIdentifier:(id)arg1;
- (void)thumbnailContainerDidChange:(id)arg1;
- (void)pageCountDidChangeForPageController:(id)arg1;
@property(readonly, nonatomic) struct CGSize paperSize;
- (id)commandForConvertingFloatingDrawableToAnchored:(id)arg1;
- (void)invalidateThumbnailForPageIndex:(unsigned int)arg1;
- (unsigned int)pageIndexForThumbnailIdentifier:(id)arg1;
- (id)thumbnailIdentifierForPageIndex:(unsigned int)arg1;
- (unsigned int)nextRootSearchTargetIndexFromIndex:(unsigned int)arg1 forString:(id)arg2 options:(unsigned int)arg3 inDirection:(unsigned int)arg4;
- (unsigned int)p_nextRootSearchTargetInBodyOrFloatersFromIndex:(unsigned int)arg1 forString:(id)arg2 options:(unsigned int)arg3 inDirection:(unsigned int)arg4;
- (unsigned int)p_scanBackwardsForNextRootSearchTargetInBodyOrFloatersFromIndex:(unsigned int)arg1 forString:(id)arg2 withOptions:(unsigned int)arg3;
- (unsigned int)p_scanForwardsForNextRootSearchTargetInBodyOrFloatersFromIndex:(unsigned int)arg1 forString:(id)arg2 withOptions:(unsigned int)arg3;
- (struct _NSRange)p_bodyHitRangeForString:(id)arg1 withOptions:(unsigned int)arg2 limitRange:(struct _NSRange)arg3;
- (BOOL)p_possibleHitInSectionMaster:(id)arg1 pageIndex:(unsigned int)arg2 withOptions:(unsigned int)arg3;
- (unsigned int)rootSearchTargetCountThroughIndex:(unsigned int)arg1;
- (void)withRootSearchTargetAtIndex:(unsigned int)arg1 executeBlock:(CDUnknownBlockType)arg2;
- (void)updateWritingDirection:(unsigned int)arg1;
- (void)prepareNewDocumentWithTemplateBundle:(id)arg1;
@property(readonly, nonatomic) int contentWritingDirection;
- (BOOL)autoListTermination;
- (BOOL)autoListRecognition;
- (BOOL)textIsVertical;
- (void)setBodyStorage:(id)arg1 dolcContext:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setThemeForTemplateImport:(id)arg1;
@property(retain, nonatomic) TPTheme *theme;
- (void)p_uniquifyTableNames;
- (void)p_upgradeBodyTOC;
- (id)p_realTOCEntryStyleFromFakeTOCEntryStyle:(id)arg1 context:(id)arg2;
- (void)p_upgradeTOCStyles;
- (id)initFromUnarchiver:(id)arg1;
- (id)initForThemeImportWithContext:(id)arg1;
- (id)initUsingDefaultThemeWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)pFinishInitialization;
- (void)pCommonInitialization;
- (void)pCreateFloatingDrawables;
- (void)pCreateDrawablesZOrderBodyStorage:(id)arg1 addAnchoredDrawables:(BOOL)arg2;
- (void)pCreateBodyStorage;
- (void)pCreateStylesheet;
- (struct CGRect)pConjureUpBodyRect;
- (void)dealloc;
- (void)documentDidLoad;
- (unsigned int)applicationType;
@property(readonly, nonatomic) NSArray *sections;
@property(readonly, nonatomic) TPSection *firstSection;
@property(readonly, nonatomic) BOOL isTrackingChanges;
@property(nonatomic, getter=isChangeTrackingEnabled) BOOL changeTrackingEnabled;
@property(nonatomic, getter=isChangeTrackingPaused) BOOL changeTrackingPaused;
@property(nonatomic) BOOL layoutBodyVertically;
@property(nonatomic) float footerMargin;
@property(nonatomic) float headerMargin;
@property(nonatomic) float bottomMargin;
@property(nonatomic) float topMargin;
@property(nonatomic) float rightMargin;
@property(nonatomic) float leftMargin;
@property(nonatomic) unsigned int orientation; // @synthesize orientation=_orientation;
@property(copy, nonatomic) NSString *paperID; // @synthesize paperID=_paperID;
@property(copy, nonatomic) NSString *printerID; // @synthesize printerID=_printerID;
@property(nonatomic) float pageScale;
@property(nonatomic) struct CGSize pageSize;
@property(nonatomic) BOOL usesSingleHeaderFooter;
- (unsigned int)p_autoNumberForStorage:(id)arg1 footnoteNumbering:(int)arg2 footnoteKind:(int)arg3;
- (BOOL)footnotesShouldAffectBodyLayout;
- (float)footnoteGap;
- (int)footnoteKind;
- (id)markStringForFootnoteReferenceStorage:(id)arg1;
- (id)storagesWithChanges;
@property(readonly, nonatomic) BOOL hasTrackedChanges;

// Remaining properties
@property(readonly, nonatomic, getter=isTrackingChanges) BOOL trackingChanges;

@end

