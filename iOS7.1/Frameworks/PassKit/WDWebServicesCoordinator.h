//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "APSConnectionDelegate.h"
#import "PDDatabaseManagerWebServicesDelegate.h"
#import "WDNetworkTaskDelegate.h"

@class APSConnection, NSMutableDictionary, NSString, PDDatabaseManager, WDCardFileManager, WDNetworkTaskManager;

@interface WDWebServicesCoordinator : NSObject <WDNetworkTaskDelegate, APSConnectionDelegate, PDDatabaseManagerWebServicesDelegate>
{
    id <WDWebServicesCoordinatorDelegate> _delegate;
    APSConnection *_apsConnection;
    NSString *_pushToken;
    WDCardFileManager *_cardFileManager;
    PDDatabaseManager *_databaseManager;
    WDNetworkTaskManager *_taskManager;
    NSMutableDictionary *_taskToHandlerMap;
}

+ (void)initialize;
+ (void)initializeConfigurationDefaults;
@property(readonly, nonatomic) WDNetworkTaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(readonly, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
- (void)_updatePassTypeID:(id)arg1;
- (void)_scheduleUpdateForPassTypeID:(id)arg1 afterDate:(id)arg2;
- (void)_cancelWhatChangedTasksForPassTypeID:(id)arg1;
- (void)_cancelAutomaticUpdateTasksForPassTypeID:(id)arg1 serialNumber:(id)arg2;
- (void)_cancelAllTasksForPassTypeID:(id)arg1 serialNumber:(id)arg2;
- (void)_getPassTask:(id)arg1 gotResult:(id)arg2;
- (void)_getSerialNumbersTask:(id)arg1 gotResult:(id)arg2;
- (void)_whatChangedTaskSucceeded:(id)arg1;
- (void)_registrationTaskSucceeded:(id)arg1;
- (void)_registerWithSerialNumber:(id)arg1 authToken:(id)arg2 webService:(id)arg3;
- (id)_calculateTopics;
- (void)_invokeAndClearHandlerForTask:(id)arg1 withResult:(id)arg2;
- (void)task:(id)arg1 encounteredWarnings:(id)arg2;
- (void)task:(id)arg1 encounteredError:(id)arg2;
- (void)taskFailed:(id)arg1;
- (void)taskSucceeded:(id)arg1;
- (void)task:(id)arg1 willRetryAfterMinimumDelay:(double)arg2;
- (void)task:(id)arg1 gotResult:(id)arg2;
- (void)connection:(id)arg1 didReceiveMessageForTopic:(id)arg2 userInfo:(id)arg3;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)handlePushDisabled:(id)arg1 authToken:(id)arg2 webService:(id)arg3;
- (void)handlePushEnabled:(id)arg1 authToken:(id)arg2 webService:(id)arg3;
- (void)handleModification:(id)arg1 webService:(id)arg2 pushEnabled:(BOOL)arg3 source:(int)arg4;
- (void)handleDeletion:(id)arg1 authToken:(id)arg2 webService:(id)arg3 pushEnabled:(BOOL)arg4;
- (void)handleInsertion:(id)arg1 authToken:(id)arg2 webService:(id)arg3 pushEnabled:(BOOL)arg4 source:(int)arg5;
- (void)nukeTasks;
- (void)updateCardWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)connect;
- (void)dealloc;
- (id)initWithDatabaseManager:(id)arg1 cardFileManager:(id)arg2 delegate:(id)arg3;
- (id)_nextUpdateDateWithLastUpdateDate:(id)arg1 rateLimitLevel:(int)arg2;
- (int)_rateLimitLevelForFrequencyScore:(double)arg1;
- (double)_updatedFrequencyScoreForScore:(double)arg1 lastPushDate:(id)arg2 zeroInterval:(double)arg3;
- (double)_zeroIntervalForPassTypeID:(id)arg1;
- (id)_userNotificationParametersForPassTypeID:(id)arg1;
- (void)_unregisterPassesOfType:(id)arg1;
- (void)_presentUnregistrationAlertForPassTypeID:(id)arg1;
- (void)_aggdLogAbandonedTask:(id)arg1 passTypeID:(id)arg2;
- (void)_aggdLogUpdatesDespiteMisuse:(unsigned int)arg1 passTypeID:(id)arg2;
- (void)_aggdLogWebServiceErrorCode:(int)arg1 passTypeID:(id)arg2;
- (void)_aggdLogTaskErrorCode:(int)arg1 passTypeID:(id)arg2;
- (void)_aggdLogTaskWarningCode:(int)arg1 passTypeID:(id)arg2;
- (void)_aggdLogPushRateLevel:(id)arg1 forPassTypeID:(id)arg2;
- (void)reportWarnings:(id)arg1 webService:(id)arg2 logToService:(BOOL)arg3;
- (void)reportError:(id)arg1 webService:(id)arg2 logToService:(BOOL)arg3;
- (void)reportAbandonedTask:(id)arg1 passTypeID:(id)arg2;
- (void)reportMissingLastModifiedForSerialNumber:(id)arg1 webService:(id)arg2;
- (void)reportIgnoredIfModifiedSince:(id)arg1 forSerialNumber:(id)arg2 webService:(id)arg3;
- (void)reportUnchangedPassForServerRequestedUpdateTask:(id)arg1;
- (void)reportPushWithNoSerialNumbersFromTasks:(id)arg1;
- (void)reportUnmodifiedTag:(id)arg1 withRequestedSerialNumbers:(id)arg2 forWebService:(id)arg3;
- (void)reportMissingTagWithRequestedSerialNumbers:(id)arg1 forWebService:(id)arg2;
- (void)reportUpdateRequestForNonPushEnabledSerialNumber:(id)arg1 forWebService:(id)arg2;
- (void)reportPushRateLimitLevel:(int)arg1 forPassTypeID:(id)arg2;
- (void)resetPushFrequencyStateForPassTypeID:(id)arg1;
- (void)adjustStateForIncomingPushNotification:(id)arg1 andComputeNextUpdateDate:(id *)arg2;

@end

