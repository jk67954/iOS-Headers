//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PDUbiquityManagerDelegate.h"
#import "PKLocalPassFileAccessor.h"

@class PDUbiquityManager;

@interface WDCardFileManager : NSObject <PDUbiquityManagerDelegate, PKLocalPassFileAccessor>
{
    PDUbiquityManager *_ubiquityManager;
    id <WDCardFileManagerDelegate> _delegate;
}

+ (void)deleteCardsDirectory;
- (id)displayProfileWithPassDictionary:(id)arg1 passURL:(id)arg2;
- (id)serializedFileWrapperFromPassURL:(id)arg1;
- (id)manifestHashFromPassURL:(id)arg1;
- (BOOL)getResourceValue:(id *)arg1 forKey:(id)arg2 forPassAtURL:(id)arg3 error:(id *)arg4;
- (BOOL)removePassAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)movePassAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)copyPassAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)loadImageSet:(int)arg1 fromPassURL:(id)arg2 displayProfile:(id)arg3;
- (id)loadContentFromPassURL:(id)arg1;
- (void)checkRevocationStatusForPassAtURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)isValidPassWithURL:(id)arg1 error:(id *)arg2 warnings:(id *)arg3;
- (id)localizedString:(id)arg1 forPassAtURL:(id)arg2;
- (id)loadDictionaryFromPassURL:(id)arg1;
- (void)ubiquitousCatalogDidChange:(id)arg1;
- (id)existingCatalog;
- (void)ubiquitousCardWithUniqueIDRemoved:(id)arg1;
- (void)ubiquitousCardDidChange:(id)arg1;
- (id)existingCardWithUniqueID:(id)arg1;
- (id)existingCardUniqueIDs;
- (BOOL)_queue_deleteCardWithUniqueID:(id)arg1;
- (id)_queue_writeCard:(id)arg1 diff:(id *)arg2;
- (id)_queue_imageSet:(int)arg1 fromPassURL:(id)arg2 displayProfile:(id)arg3;
- (id)_queue_contentFromPassURL:(id)arg1;
- (id)_queue_cardWithUniqueID:(id)arg1;
- (id)_queue_cardUniqueIDs;
- (id)_passIfExistsWithUniqueID:(id)arg1;
- (void)_checkRevocationStatusForPass:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)checkRevocationStatusForAllPasses;
- (void)hookUpDatabaseCard:(id)arg1;
- (void)nukeCards;
- (void)updateUbiquitousCatalog:(id)arg1;
- (void)deleteCardWithUniqueID:(id)arg1 andTellUbiquity:(BOOL)arg2;
- (void)writeCatalogOfRecord:(id)arg1 source:(int)arg2;
- (BOOL)writeCard:(id)arg1 source:(int)arg2 error:(id *)arg3;
- (id)imageSet:(int)arg1 forCardUniqueID:(id)arg2 displayProfile:(id)arg3;
- (void)_deletePossibleInvalidCardWithUniqueID:(id)arg1;
- (id)contentForUniqueID:(id)arg1;
- (id)catalogOfRecord;
- (id)localPasses;
- (id)cardWithUniqueID:(id)arg1;
- (id)cardUniqueIDs;
- (void)migrateImageArchives;
- (void)startObservingUbiquityEvents;
- (void)restartUbiquity;
- (void)startUbiquity;
- (id)_ubiquityManager;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

