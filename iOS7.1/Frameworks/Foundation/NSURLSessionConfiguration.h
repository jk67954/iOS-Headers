//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"

@class NSArray, NSDictionary, NSHTTPCookieStorage, NSString, NSURLCache, NSURLCredentialStorage;

@interface NSURLSessionConfiguration : NSObject <NSCopying>
{
    BOOL _allowsCellularAccess;
    BOOL _discretionary;
    BOOL _sessionSendsLaunchEvents;
    BOOL _HTTPShouldUsePipelining;
    BOOL _HTTPShouldSetCookies;
    NSString *_identifier;
    unsigned int _requestCachePolicy;
    unsigned int _networkServiceType;
    NSDictionary *_connectionProxyDictionary;
    int _TLSMinimumSupportedProtocol;
    int _TLSMaximumSupportedProtocol;
    unsigned int _HTTPCookieAcceptPolicy;
    NSDictionary *_HTTPAdditionalHeaders;
    int _HTTPMaximumConnectionsPerHost;
    NSHTTPCookieStorage *_HTTPCookieStorage;
    NSURLCredentialStorage *_URLCredentialStorage;
    NSURLCache *_URLCache;
    NSArray *_protocolClasses;
    double _timeoutIntervalForRequest;
    double _timeoutIntervalForResource;
}

+ (void)initialize;
@property(copy) NSArray *protocolClasses; // @synthesize protocolClasses=_protocolClasses;
@property(retain) NSURLCache *URLCache; // @synthesize URLCache=_URLCache;
@property(retain) NSURLCredentialStorage *URLCredentialStorage; // @synthesize URLCredentialStorage=_URLCredentialStorage;
@property(retain) NSHTTPCookieStorage *HTTPCookieStorage; // @synthesize HTTPCookieStorage=_HTTPCookieStorage;
@property int HTTPMaximumConnectionsPerHost; // @synthesize HTTPMaximumConnectionsPerHost=_HTTPMaximumConnectionsPerHost;
@property(copy) NSDictionary *HTTPAdditionalHeaders; // @synthesize HTTPAdditionalHeaders=_HTTPAdditionalHeaders;
@property unsigned int HTTPCookieAcceptPolicy; // @synthesize HTTPCookieAcceptPolicy=_HTTPCookieAcceptPolicy;
@property BOOL HTTPShouldSetCookies; // @synthesize HTTPShouldSetCookies=_HTTPShouldSetCookies;
@property BOOL HTTPShouldUsePipelining; // @synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining;
@property int TLSMaximumSupportedProtocol; // @synthesize TLSMaximumSupportedProtocol=_TLSMaximumSupportedProtocol;
@property int TLSMinimumSupportedProtocol; // @synthesize TLSMinimumSupportedProtocol=_TLSMinimumSupportedProtocol;
@property(copy) NSDictionary *connectionProxyDictionary; // @synthesize connectionProxyDictionary=_connectionProxyDictionary;
@property BOOL sessionSendsLaunchEvents; // @synthesize sessionSendsLaunchEvents=_sessionSendsLaunchEvents;
@property(getter=isDiscretionary) BOOL discretionary; // @synthesize discretionary=_discretionary;
@property BOOL allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property unsigned int networkServiceType; // @synthesize networkServiceType=_networkServiceType;
@property double timeoutIntervalForResource; // @synthesize timeoutIntervalForResource=_timeoutIntervalForResource;
@property double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;
@property unsigned int requestCachePolicy; // @synthesize requestCachePolicy=_requestCachePolicy;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;

@end

