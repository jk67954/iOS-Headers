//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <iWorkImport/TSDPathSource.h>

#import "TSDMixing.h"
#import "TSDSmartPathSource.h"

__attribute__((visibility("hidden")))
@interface TSDScalarPathSource : TSDPathSource <TSDMixing, TSDSmartPathSource>
{
    int mType;
    float mScalar;
    struct CGSize mNaturalSize;
}

+ (id)pathSourceWithType:(int)arg1 scalar:(float)arg2 naturalSize:(struct CGSize)arg3;
+ (id)chevronWithScalar:(float)arg1 naturalSize:(struct CGSize)arg2;
+ (id)regularPolygonWithScalar:(float)arg1 naturalSize:(struct CGSize)arg2;
+ (id)roundedRectangleWithScalar:(float)arg1 naturalSize:(struct CGSize)arg2;
+ (id)rectangleWithNaturalSize:(struct CGSize)arg1;
@property(nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=mNaturalSize;
@property(nonatomic) float scalar; // @synthesize scalar=mScalar;
@property(nonatomic) int type; // @synthesize type=mType;
- (struct CGPoint)p_getControlKnobPointForChevron;
- (void)p_setControlKnobPointForChevron:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForRegularPolygon;
- (void)p_setControlKnobPointForRegularPolygon:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForRoundedRect;
- (void)p_setControlKnobPointForRoundedRect:(struct CGPoint)arg1;
- (struct CGPath *)p_newChevronPath;
- (struct CGPath *)p_newRegularPolygonPath;
- (struct CGPath *)p_newRoundedRectPath;
- (id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2;
- (int)mixingTypeWithObject:(id)arg1;
- (struct CGSize)scaleFactorForInscribedRectangle;
- (BOOL)isCircular;
- (BOOL)isRectangular;
- (id)bezierPathWithoutFlips;
- (id)valueForSetSelector:(SEL)arg1;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned int)arg1;
- (id)getFeedbackStringForKnob:(unsigned int)arg1;
- (void)setControlKnobPosition:(unsigned int)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned int)arg1;
@property(readonly) unsigned int numberOfControlKnobs;
@property(readonly, nonatomic) float maxScalar;
- (void)setScalarValue:(id)arg1;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (id)description;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithType:(int)arg1 scalar:(float)arg2 naturalSize:(struct CGSize)arg3;
- (void)saveToArchive:(struct PathSourceArchive *)arg1;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1;

@end

