//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UITableViewController.h"

#import "MKPlaceAttributionCellProvider.h"
#import "MKStackingViewControllerPreferredSizeUse.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"

@class MKMapItem, NSString, _MKPlacePhotosCollectionView;

__attribute__((visibility("hidden")))
@interface MKPlacePhotosViewController : UITableViewController <UICollectionViewDataSource, UICollectionViewDelegate, MKStackingViewControllerPreferredSizeUse, MKPlaceAttributionCellProvider>
{
    BOOL _showAddPhotoButton;
    BOOL _showMorePhotosButton;
    BOOL _hasAttribution;
    BOOL _showAttribution;
    MKMapItem *_mapItem;
    id <MKPlaceCardPhotosControllerDelegate> _photosControllerDelegate;
    unsigned int _photosCount;
    float _photoWidth;
    _MKPlacePhotosCollectionView *_photoGrid;
}

@property(nonatomic) BOOL showAttribution; // @synthesize showAttribution=_showAttribution;
@property(retain, nonatomic) _MKPlacePhotosCollectionView *photoGrid; // @synthesize photoGrid=_photoGrid;
@property(nonatomic) float photoWidth; // @synthesize photoWidth=_photoWidth;
@property(nonatomic) unsigned int photosCount; // @synthesize photosCount=_photosCount;
@property(nonatomic) BOOL hasAttribution; // @synthesize hasAttribution=_hasAttribution;
@property(nonatomic) BOOL showMorePhotosButton; // @synthesize showMorePhotosButton=_showMorePhotosButton;
@property(nonatomic) BOOL showAddPhotoButton; // @synthesize showAddPhotoButton=_showAddPhotoButton;
@property(nonatomic) __weak id <MKPlaceCardPhotosControllerDelegate> photosControllerDelegate; // @synthesize photosControllerDelegate=_photosControllerDelegate;
@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
- (void).cxx_destruct;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(int)arg3;
- (float)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(int)arg3;
- (float)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(int)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (int)numberOfSectionsInCollectionView:(id)arg1;
- (id)photos;
- (float)_photoCellHeight;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (int)numberOfSectionsInTableView:(id)arg1;
- (void)_calculatePhotoSizeForSize:(struct CGSize)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLayoutSubviews;
- (void)_morePhotos;
- (void)_addPhoto;
@property(readonly, nonatomic) BOOL showAttributionButtons;
- (void)viewDidLoad;
@property(readonly, nonatomic) BOOL requiresPreferredContentSizeInStackingView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

